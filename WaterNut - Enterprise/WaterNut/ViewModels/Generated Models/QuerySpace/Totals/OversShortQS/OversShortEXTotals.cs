// <autogenerated>
//   This file was generated by T4 code generator AllQuerySpaceViewModels.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

using System;
using System.Linq;
using OversShortQS.Client.Repositories;

namespace WaterNut.QuerySpace.OversShortQS.ViewModels
{
    public partial class OversShortEXViewModel_AutoGen
    {
    
       #region Totals

        partial void OnTotals()
        {
            RegisterToReceiveMessages<string>(MessageToken.OversShortsFilterExpressionChanged,
                                                OnOversShortsFilterExpressionChangetals);
            RegisterToReceiveMessages(MessageToken.SelectedOversShortsChanged,
                                                OnSelectedOversShortsChangetals);
        }

        private void OnSelectedOversShortsChangetals(object sender, SimpleMvvmToolkit.NotificationEventArgs e)
        {
            SetSelectetal();
        }
        private decimal _TotalReceivedValue = 0;
        public decimal TotalReceivedValue 
        {
            get { return _TotalReceivedValue ; }
            set
            {
                _TotalReceivedValue = value;
                NotifyPropertyChanged(x => x.TotalReceivedValue );
            }
        }

		private decimal _SelectedReceivedValue = 0;
        public decimal SelectedReceivedValue 
        {
            get { return _SelectedReceivedValue ; }
            set
            {
                _SelectedReceivedValue = value;
                NotifyPropertyChanged(x => x.SelectedReceivedValue );
            }
        }
        
         private decimal _TotalInvoiceValue = 0;
        public decimal TotalInvoiceValue 
        {
            get { return _TotalInvoiceValue ; }
            set
            {
                _TotalInvoiceValue = value;
                NotifyPropertyChanged(x => x.TotalInvoiceValue );
            }
        }

		private decimal _SelectedInvoiceValue = 0;
        public decimal SelectedInvoiceValue 
        {
            get { return _SelectedInvoiceValue ; }
            set
            {
                _SelectedInvoiceValue = value;
                NotifyPropertyChanged(x => x.SelectedInvoiceValue );
            }
        }
        
         

        private async void OnOversShortsFilterExpressionChangetals(object sender, SimpleMvvmToolkit.NotificationEventArgs<string> e)
        {
            using (var ctx = new OversShortEXRepository())
            {
                TotalReceivedValue = await ctx.SumNav(e.Data, vloader.NavigationExpression, "ReceivedValue").ConfigureAwait(false);
                 TotalInvoiceValue = await ctx.SumNav(e.Data, vloader.NavigationExpression, "InvoiceValue").ConfigureAwait(false);
  
                
            }
        }        

        private void SetSelectetal()
        {
            var lst = SelectedOversShorts.Where(x => x != null).ToList();
            if (!lst.Any())
            {
               SelectedReceivedValue = 0;
                SelectedInvoiceValue = 0;
  
            }
            else
            {
               SelectedReceivedValue = Convert.ToDecimal(lst.Sum(x => x.ReceivedValue));
                SelectedInvoiceValue = Convert.ToDecimal(lst.Sum(x => x.InvoiceValue));
  
            }
        }      

         #endregion
 
    }
   
}
		