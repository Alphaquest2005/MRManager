// <autogenerated>
//   This file was generated by T4 code generator AllClientEntities.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>


using System;
using System.Collections.Generic;
using System.Runtime.Serialization;
//using Newtonsoft.Json;
using TrackableEntities;
using TrackableEntities.Client;
using Core.Common.Client.DTO;

namespace OversShortQS.Client.DTO
{

   // [JsonObject(IsReference = true)]
    [DataContract(IsReference = true, Namespace="http://www.insight-software.com/WaterNut")]
    public partial class OverShortSuggestedDocument : BaseEntity<OverShortSuggestedDocument> , ITrackable, IEquatable<OverShortSuggestedDocument>
    {
        [DataMember]
        public int OversShortsId
		{ 
		    get { return _OversShortsId; }
			set
			{
			    if (value == _OversShortsId) return;
				_OversShortsId = value;
				NotifyPropertyChanged();//m => this.OversShortsId
			}
		}
        private int _OversShortsId;

        [DataMember]
        public string CNumber
		{ 
		    get { return _CNumber; }
			set
			{
			    if (value == _CNumber) return;
				_CNumber = value;
				NotifyPropertyChanged();//m => this.CNumber
			}
		}
        private string _CNumber;

        [DataMember]
        public string ReferenceNumber
		{ 
		    get { return _ReferenceNumber; }
			set
			{
			    if (value == _ReferenceNumber) return;
				_ReferenceNumber = value;
				NotifyPropertyChanged();//m => this.ReferenceNumber
			}
		}
        private string _ReferenceNumber;

       
        [DataMember]
        public OversShortEX OversShortEX
		{
		    get { return _OversShortEX; }
			set
			{
			    if (value == _OversShortEX) return;
				_OversShortEX = value;
                OversShortEXChangeTracker = _OversShortEX == null ? null
                    : new ChangeTrackingCollection<OversShortEX> { _OversShortEX };
				NotifyPropertyChanged();//m => this.OversShortEX
			}
		}
        private OversShortEX _OversShortEX;
        private ChangeTrackingCollection<OversShortEX> OversShortEXChangeTracker { get; set; }

   //     [DataMember]
   //     public TrackingState TrackingState { get; set; }

   //     [DataMember]
   //     public ICollection<string> ModifiedProperties { get; set; }
        
    //  [DataMember]//JsonProperty, 
    //	private Guid EntityIdentifier { get; set; }
    
    //	[DataMember]//JsonProperty, 
    //	private Guid _entityIdentity = default(Guid);
    
    	bool IEquatable<OverShortSuggestedDocument>.Equals(OverShortSuggestedDocument other)
    	{
    		if (EntityIdentifier != default(Guid))
    			return EntityIdentifier == other.EntityIdentifier;
    		return false;
    	}
    }
}



