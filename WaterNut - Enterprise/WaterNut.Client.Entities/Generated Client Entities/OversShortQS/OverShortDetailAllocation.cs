// <autogenerated>
//   This file was generated by T4 code generator AllClientEntities.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>


using System;
using System.Linq;
using System.Diagnostics;
using System.Collections.Specialized;
using System.ComponentModel.DataAnnotations;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using WaterNut.Interfaces;
using Core.Common.Client.Entities;
using OversShortQS.Client.DTO;
using TrackableEntities.Client;
using TrackableEntities;
using Core.Common.Validation;

namespace OversShortQS.Client.Entities
{
       public partial class OverShortDetailAllocation: BaseEntity<OverShortDetailAllocation>
    {
        DTO.OverShortDetailAllocation overshortdetailallocation;
        public OverShortDetailAllocation(DTO.OverShortDetailAllocation dto )
        {
              overshortdetailallocation = dto;
             _changeTracker = new ChangeTrackingCollection<DTO.OverShortDetailAllocation>(overshortdetailallocation);

        }

        public DTO.OverShortDetailAllocation DTO
        {
            get
            {
             return overshortdetailallocation;
            }
            set
            {
                overshortdetailallocation = value;
            }
        }
       [RequiredValidationAttribute(ErrorMessage= "OverShortDetail is required")]
       
public int OverShortDetailId
		{ 
		    get { return this.overshortdetailallocation.OverShortDetailId; }
			set
			{
			    if (value == this.overshortdetailallocation.OverShortDetailId) return;
				this.overshortdetailallocation.OverShortDetailId = value;
                if(this.DTO.TrackingState == TrackableEntities.TrackingState.Unchanged)this.DTO.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("OverShortDetailId");
			}
		}
     

       [RequiredValidationAttribute(ErrorMessage= "Item_ is required")]
       
public int Item_Id
		{ 
		    get { return this.overshortdetailallocation.Item_Id; }
			set
			{
			    if (value == this.overshortdetailallocation.Item_Id) return;
				this.overshortdetailallocation.Item_Id = value;
                if(this.DTO.TrackingState == TrackableEntities.TrackingState.Unchanged)this.DTO.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("Item_Id");
			}
		}
     

       [RequiredValidationAttribute(ErrorMessage= "QtyAllocated is required")]
       [NumberValidationAttribute]
public double QtyAllocated
		{ 
		    get { return this.overshortdetailallocation.QtyAllocated; }
			set
			{
			    if (value == this.overshortdetailallocation.QtyAllocated) return;
				this.overshortdetailallocation.QtyAllocated = value;
                if(this.DTO.TrackingState == TrackableEntities.TrackingState.Unchanged)this.DTO.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("QtyAllocated");
			}
		}
     

       
       
                
                
public string Status
		{ 
		    get { return this.overshortdetailallocation.Status; }
			set
			{
			    if (value == this.overshortdetailallocation.Status) return;
				this.overshortdetailallocation.Status = value;
                if(this.DTO.TrackingState == TrackableEntities.TrackingState.Unchanged)this.DTO.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("Status");
			}
		}
     

       [RequiredValidationAttribute(ErrorMessage= "OverShortAllocation is required")]
       
public int OverShortAllocationId
		{ 
		    get { return this.overshortdetailallocation.OverShortAllocationId; }
			set
			{
			    if (value == this.overshortdetailallocation.OverShortAllocationId) return;
				this.overshortdetailallocation.OverShortAllocationId = value;
                if(this.DTO.TrackingState == TrackableEntities.TrackingState.Unchanged)this.DTO.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("OverShortAllocationId");
			}
		}
     

       private OverShortAllocationsEX _EX;
        public  OverShortAllocationsEX EX
		{
		    get
               { 
                  if (this.overshortdetailallocation != null)
                   {
                       if (_EX != null)
                       {
                           if (this.overshortdetailallocation.EX !=
                               _EX.DTO)
                           {
                                if (this.overshortdetailallocation.EX  != null)
                               _EX = new OverShortAllocationsEX(this.overshortdetailallocation.EX);
                           }
                       }
                       else
                       {
                             if (this.overshortdetailallocation.EX  != null)
                           _EX = new OverShortAllocationsEX(this.overshortdetailallocation.EX);
                       }
                   }


             //       if (_EX != null) return _EX;
                       
             //       var i = new OverShortAllocationsEX(){TrackingState = TrackingState.Added};
			//		//if (this.overshortdetailallocation.EX == null) Debugger.Break();
			//		if (this.overshortdetailallocation.EX != null)
            //        {
            //           i. = this.overshortdetailallocation.EX;
            //        }
            //        else
            //        {
            //            this.overshortdetailallocation.EX = i.;
             //       }
                           
            //        _EX = i;
                     
                    return _EX;
               }
			set
			{
			    if (value == _EX) return;
                _EX = value;
                if(value != null)
                     this.overshortdetailallocation.EX = value.DTO;
				if(this.DTO.TrackingState == TrackableEntities.TrackingState.Unchanged)this.DTO.TrackingState = TrackableEntities.TrackingState.Modified;
                NotifyPropertyChanged("EX");
			}
		}
        

       private OverShortDetail _OverShortDetail;
        public  OverShortDetail OverShortDetail
		{
		    get
               { 
                  if (this.overshortdetailallocation != null)
                   {
                       if (_OverShortDetail != null)
                       {
                           if (this.overshortdetailallocation.OverShortDetail !=
                               _OverShortDetail.DTO)
                           {
                                if (this.overshortdetailallocation.OverShortDetail  != null)
                               _OverShortDetail = new OverShortDetail(this.overshortdetailallocation.OverShortDetail);
                           }
                       }
                       else
                       {
                             if (this.overshortdetailallocation.OverShortDetail  != null)
                           _OverShortDetail = new OverShortDetail(this.overshortdetailallocation.OverShortDetail);
                       }
                   }


             //       if (_OverShortDetail != null) return _OverShortDetail;
                       
             //       var i = new OverShortDetail(){TrackingState = TrackingState.Added};
			//		//if (this.overshortdetailallocation.OverShortDetail == null) Debugger.Break();
			//		if (this.overshortdetailallocation.OverShortDetail != null)
            //        {
            //           i. = this.overshortdetailallocation.OverShortDetail;
            //        }
            //        else
            //        {
            //            this.overshortdetailallocation.OverShortDetail = i.;
             //       }
                           
            //        _OverShortDetail = i;
                     
                    return _OverShortDetail;
               }
			set
			{
			    if (value == _OverShortDetail) return;
                _OverShortDetail = value;
                if(value != null)
                     this.overshortdetailallocation.OverShortDetail = value.DTO;
				if(this.DTO.TrackingState == TrackableEntities.TrackingState.Unchanged)this.DTO.TrackingState = TrackableEntities.TrackingState.Modified;
                NotifyPropertyChanged("OverShortDetail");
			}
		}
        


        ChangeTrackingCollection<DTO.OverShortDetailAllocation> _changeTracker;    
        public ChangeTrackingCollection<DTO.OverShortDetailAllocation> ChangeTracker
        {
            get
            {
                return _changeTracker;
            }
        }

        public new TrackableEntities.TrackingState TrackingState
        {
            get
            {
                return this.DTO.TrackingState;
            }
            set
            {
                this.DTO.TrackingState = value;
                NotifyPropertyChanged("TrackingState");
            }
        }

    }
}


