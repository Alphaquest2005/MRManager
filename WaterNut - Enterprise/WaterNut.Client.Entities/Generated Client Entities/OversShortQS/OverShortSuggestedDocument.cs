// <autogenerated>
//   This file was generated by T4 code generator AllClientEntities.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>


using System;
using System.Linq;
using System.Diagnostics;
using System.Collections.Specialized;
using System.ComponentModel.DataAnnotations;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using WaterNut.Interfaces;
using Core.Common.Client.Entities;
using OversShortQS.Client.DTO;
using TrackableEntities.Client;
using TrackableEntities;
using Core.Common.Validation;

namespace OversShortQS.Client.Entities
{
       public partial class OverShortSuggestedDocument: BaseEntity<OverShortSuggestedDocument>
    {
        DTO.OverShortSuggestedDocument overshortsuggesteddocument;
        public OverShortSuggestedDocument(DTO.OverShortSuggestedDocument dto )
        {
              overshortsuggesteddocument = dto;
             _changeTracker = new ChangeTrackingCollection<DTO.OverShortSuggestedDocument>(overshortsuggesteddocument);

        }

        public DTO.OverShortSuggestedDocument DTO
        {
            get
            {
             return overshortsuggesteddocument;
            }
            set
            {
                overshortsuggesteddocument = value;
            }
        }
       [RequiredValidationAttribute(ErrorMessage= "OversShorts is required")]
       
public int OversShortsId
		{ 
		    get { return this.overshortsuggesteddocument.OversShortsId; }
			set
			{
			    if (value == this.overshortsuggesteddocument.OversShortsId) return;
				this.overshortsuggesteddocument.OversShortsId = value;
                if(this.DTO.TrackingState == TrackableEntities.TrackingState.Unchanged)this.DTO.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("OversShortsId");
			}
		}
     

       
       
                
                [MaxLength(50, ErrorMessage = "CNumber has a max length of 50 letters ")]
public string CNumber
		{ 
		    get { return this.overshortsuggesteddocument.CNumber; }
			set
			{
			    if (value == this.overshortsuggesteddocument.CNumber) return;
				this.overshortsuggesteddocument.CNumber = value;
                if(this.DTO.TrackingState == TrackableEntities.TrackingState.Unchanged)this.DTO.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("CNumber");
			}
		}
     

       
       
                
                [MaxLength(19, ErrorMessage = "ReferenceNumber has a max length of 19 letters ")]
public string ReferenceNumber
		{ 
		    get { return this.overshortsuggesteddocument.ReferenceNumber; }
			set
			{
			    if (value == this.overshortsuggesteddocument.ReferenceNumber) return;
				this.overshortsuggesteddocument.ReferenceNumber = value;
                if(this.DTO.TrackingState == TrackableEntities.TrackingState.Unchanged)this.DTO.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("ReferenceNumber");
			}
		}
     

       private OversShortEX _OversShortEX;
        public  OversShortEX OversShortEX
		{
		    get
               { 
                  if (this.overshortsuggesteddocument != null)
                   {
                       if (_OversShortEX != null)
                       {
                           if (this.overshortsuggesteddocument.OversShortEX !=
                               _OversShortEX.DTO)
                           {
                                if (this.overshortsuggesteddocument.OversShortEX  != null)
                               _OversShortEX = new OversShortEX(this.overshortsuggesteddocument.OversShortEX);
                           }
                       }
                       else
                       {
                             if (this.overshortsuggesteddocument.OversShortEX  != null)
                           _OversShortEX = new OversShortEX(this.overshortsuggesteddocument.OversShortEX);
                       }
                   }


             //       if (_OversShortEX != null) return _OversShortEX;
                       
             //       var i = new OversShortEX(){TrackingState = TrackingState.Added};
			//		//if (this.overshortsuggesteddocument.OversShortEX == null) Debugger.Break();
			//		if (this.overshortsuggesteddocument.OversShortEX != null)
            //        {
            //           i. = this.overshortsuggesteddocument.OversShortEX;
            //        }
            //        else
            //        {
            //            this.overshortsuggesteddocument.OversShortEX = i.;
             //       }
                           
            //        _OversShortEX = i;
                     
                    return _OversShortEX;
               }
			set
			{
			    if (value == _OversShortEX) return;
                _OversShortEX = value;
                if(value != null)
                     this.overshortsuggesteddocument.OversShortEX = value.DTO;
				if(this.DTO.TrackingState == TrackableEntities.TrackingState.Unchanged)this.DTO.TrackingState = TrackableEntities.TrackingState.Modified;
                NotifyPropertyChanged("OversShortEX");
			}
		}
        


        ChangeTrackingCollection<DTO.OverShortSuggestedDocument> _changeTracker;    
        public ChangeTrackingCollection<DTO.OverShortSuggestedDocument> ChangeTracker
        {
            get
            {
                return _changeTracker;
            }
        }

        public new TrackableEntities.TrackingState TrackingState
        {
            get
            {
                return this.DTO.TrackingState;
            }
            set
            {
                this.DTO.TrackingState = value;
                NotifyPropertyChanged("TrackingState");
            }
        }

    }
}


