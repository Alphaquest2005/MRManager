// <autogenerated>
//   This file was generated by T4 code generator AllClientEntities.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>


using System;
using System.Linq;
using System.Diagnostics;
using System.Collections.Specialized;
using System.ComponentModel.DataAnnotations;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using WaterNut.Interfaces;
using Core.Common.Client.Entities;
using OversShortQS.Client.DTO;
using TrackableEntities.Client;
using TrackableEntities;
using Core.Common.Validation;

namespace OversShortQS.Client.Entities
{
       public partial class OversShort: BaseEntity<OversShort>
    {
        DTO.OversShort oversshort;
        public OversShort(DTO.OversShort dto )
        {
              oversshort = dto;
             _changeTracker = new ChangeTrackingCollection<DTO.OversShort>(oversshort);

        }

        public DTO.OversShort DTO
        {
            get
            {
             return oversshort;
            }
            set
            {
                oversshort = value;
            }
        }
       [RequiredValidationAttribute(ErrorMessage= "OversShorts is required")]
       
public int OversShortsId
		{ 
		    get { return this.oversshort.OversShortsId; }
			set
			{
			    if (value == this.oversshort.OversShortsId) return;
				this.oversshort.OversShortsId = value;
                if(this.DTO.TrackingState == TrackableEntities.TrackingState.Unchanged)this.DTO.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("OversShortsId");
			}
		}
     

       [RequiredValidationAttribute(ErrorMessage= "InvoiceNo is required")]
       
                
                [MaxLength(50, ErrorMessage = "InvoiceNo has a max length of 50 letters ")]
public string InvoiceNo
		{ 
		    get { return this.oversshort.InvoiceNo; }
			set
			{
			    if (value == this.oversshort.InvoiceNo) return;
				this.oversshort.InvoiceNo = value;
                if(this.DTO.TrackingState == TrackableEntities.TrackingState.Unchanged)this.DTO.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("InvoiceNo");
			}
		}
     

       [RequiredValidationAttribute(ErrorMessage= "InvoiceDate is required")]
       
public System.DateTime InvoiceDate
		{ 
		    get { return this.oversshort.InvoiceDate; }
			set
			{
			    if (value == this.oversshort.InvoiceDate) return;
				this.oversshort.InvoiceDate = value;
                if(this.DTO.TrackingState == TrackableEntities.TrackingState.Unchanged)this.DTO.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("InvoiceDate");
			}
		}
     


        ChangeTrackingCollection<DTO.OversShort> _changeTracker;    
        public ChangeTrackingCollection<DTO.OversShort> ChangeTracker
        {
            get
            {
                return _changeTracker;
            }
        }

        public new TrackableEntities.TrackingState TrackingState
        {
            get
            {
                return this.DTO.TrackingState;
            }
            set
            {
                this.DTO.TrackingState = value;
                NotifyPropertyChanged("TrackingState");
            }
        }

    }
}


