// <autogenerated>
//   This file was generated by T4 code generator AllClientEntities.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>


using System;
using System.Linq;
using System.Diagnostics;
using System.Collections.Specialized;
using System.ComponentModel.DataAnnotations;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using WaterNut.Interfaces;
using Core.Common.Client.Entities;
using OversShortQS.Client.DTO;
using TrackableEntities.Client;
using TrackableEntities;
using Core.Common.Validation;

namespace OversShortQS.Client.Entities
{
       public partial class OverShortAllocationsEX: BaseEntity<OverShortAllocationsEX>
    {
        DTO.OverShortAllocationsEX overshortallocationsex;
        public OverShortAllocationsEX(DTO.OverShortAllocationsEX dto )
        {
              overshortallocationsex = dto;
             _changeTracker = new ChangeTrackingCollection<DTO.OverShortAllocationsEX>(overshortallocationsex);

        }

        public DTO.OverShortAllocationsEX DTO
        {
            get
            {
             return overshortallocationsex;
            }
            set
            {
                overshortallocationsex = value;
            }
        }
       [RequiredValidationAttribute(ErrorMessage= "OverShortDetail is required")]
       
public int OverShortDetailId
		{ 
		    get { return this.overshortallocationsex.OverShortDetailId; }
			set
			{
			    if (value == this.overshortallocationsex.OverShortDetailId) return;
				this.overshortallocationsex.OverShortDetailId = value;
                if(this.DTO.TrackingState == TrackableEntities.TrackingState.Unchanged)this.DTO.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("OverShortDetailId");
			}
		}
     

       [RequiredValidationAttribute(ErrorMessage= "OversShorts is required")]
       
public int OversShortsId
		{ 
		    get { return this.overshortallocationsex.OversShortsId; }
			set
			{
			    if (value == this.overshortallocationsex.OversShortsId) return;
				this.overshortallocationsex.OversShortsId = value;
                if(this.DTO.TrackingState == TrackableEntities.TrackingState.Unchanged)this.DTO.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("OversShortsId");
			}
		}
     

       
       [NumberValidationAttribute]
public Nullable<double> ReceivedQty
		{ 
		    get { return this.overshortallocationsex.ReceivedQty; }
			set
			{
			    if (value == this.overshortallocationsex.ReceivedQty) return;
				this.overshortallocationsex.ReceivedQty = value;
                if(this.DTO.TrackingState == TrackableEntities.TrackingState.Unchanged)this.DTO.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("ReceivedQty");
			}
		}
     

       [RequiredValidationAttribute(ErrorMessage= "ItemNumber is required")]
       
                
                [MaxLength(50, ErrorMessage = "ItemNumber has a max length of 50 letters ")]
public string ItemNumber
		{ 
		    get { return this.overshortallocationsex.ItemNumber; }
			set
			{
			    if (value == this.overshortallocationsex.ItemNumber) return;
				this.overshortallocationsex.ItemNumber = value;
                if(this.DTO.TrackingState == TrackableEntities.TrackingState.Unchanged)this.DTO.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("ItemNumber");
			}
		}
     

       
       
                
                
public string ItemDescription
		{ 
		    get { return this.overshortallocationsex.ItemDescription; }
			set
			{
			    if (value == this.overshortallocationsex.ItemDescription) return;
				this.overshortallocationsex.ItemDescription = value;
                if(this.DTO.TrackingState == TrackableEntities.TrackingState.Unchanged)this.DTO.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("ItemDescription");
			}
		}
     

       
       [NumberValidationAttribute]
public Nullable<double> Cost
		{ 
		    get { return this.overshortallocationsex.Cost; }
			set
			{
			    if (value == this.overshortallocationsex.Cost) return;
				this.overshortallocationsex.Cost = value;
                if(this.DTO.TrackingState == TrackableEntities.TrackingState.Unchanged)this.DTO.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("Cost");
			}
		}
     

       
       [NumberValidationAttribute]
public Nullable<double> InvoiceQty
		{ 
		    get { return this.overshortallocationsex.InvoiceQty; }
			set
			{
			    if (value == this.overshortallocationsex.InvoiceQty) return;
				this.overshortallocationsex.InvoiceQty = value;
                if(this.DTO.TrackingState == TrackableEntities.TrackingState.Unchanged)this.DTO.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("InvoiceQty");
			}
		}
     

       [RequiredValidationAttribute(ErrorMessage= "InvoiceNo is required")]
       
                
                [MaxLength(50, ErrorMessage = "InvoiceNo has a max length of 50 letters ")]
public string InvoiceNo
		{ 
		    get { return this.overshortallocationsex.InvoiceNo; }
			set
			{
			    if (value == this.overshortallocationsex.InvoiceNo) return;
				this.overshortallocationsex.InvoiceNo = value;
                if(this.DTO.TrackingState == TrackableEntities.TrackingState.Unchanged)this.DTO.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("InvoiceNo");
			}
		}
     

       [RequiredValidationAttribute(ErrorMessage= "InvoiceDate is required")]
       
public System.DateTime InvoiceDate
		{ 
		    get { return this.overshortallocationsex.InvoiceDate; }
			set
			{
			    if (value == this.overshortallocationsex.InvoiceDate) return;
				this.overshortallocationsex.InvoiceDate = value;
                if(this.DTO.TrackingState == TrackableEntities.TrackingState.Unchanged)this.DTO.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("InvoiceDate");
			}
		}
     

       
       
                
                
public string CNumber
		{ 
		    get { return this.overshortallocationsex.CNumber; }
			set
			{
			    if (value == this.overshortallocationsex.CNumber) return;
				this.overshortallocationsex.CNumber = value;
                if(this.DTO.TrackingState == TrackableEntities.TrackingState.Unchanged)this.DTO.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("CNumber");
			}
		}
     

       
       
                
                
public string RegistrationDate
		{ 
		    get { return this.overshortallocationsex.RegistrationDate; }
			set
			{
			    if (value == this.overshortallocationsex.RegistrationDate) return;
				this.overshortallocationsex.RegistrationDate = value;
                if(this.DTO.TrackingState == TrackableEntities.TrackingState.Unchanged)this.DTO.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("RegistrationDate");
			}
		}
     

       [RequiredValidationAttribute(ErrorMessage= "OverShortAllocation is required")]
       
public int OverShortAllocationId
		{ 
		    get { return this.overshortallocationsex.OverShortAllocationId; }
			set
			{
			    if (value == this.overshortallocationsex.OverShortAllocationId) return;
				this.overshortallocationsex.OverShortAllocationId = value;
                if(this.DTO.TrackingState == TrackableEntities.TrackingState.Unchanged)this.DTO.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("OverShortAllocationId");
			}
		}
     

       
       [NumberValidationAttribute]
public Nullable<int> Duration
		{ 
		    get { return this.overshortallocationsex.Duration; }
			set
			{
			    if (value == this.overshortallocationsex.Duration) return;
				this.overshortallocationsex.Duration = value;
                if(this.DTO.TrackingState == TrackableEntities.TrackingState.Unchanged)this.DTO.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("Duration");
			}
		}
     

       
       [NumberValidationAttribute]
public Nullable<int> InvoiceMonth
		{ 
		    get { return this.overshortallocationsex.InvoiceMonth; }
			set
			{
			    if (value == this.overshortallocationsex.InvoiceMonth) return;
				this.overshortallocationsex.InvoiceMonth = value;
                if(this.DTO.TrackingState == TrackableEntities.TrackingState.Unchanged)this.DTO.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("InvoiceMonth");
			}
		}
     

       
       [NumberValidationAttribute]
public Nullable<int> AsycudaMonth
		{ 
		    get { return this.overshortallocationsex.AsycudaMonth; }
			set
			{
			    if (value == this.overshortallocationsex.AsycudaMonth) return;
				this.overshortallocationsex.AsycudaMonth = value;
                if(this.DTO.TrackingState == TrackableEntities.TrackingState.Unchanged)this.DTO.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("AsycudaMonth");
			}
		}
     

       
       [NumberValidationAttribute]
public Nullable<double> AllocatedValue
		{ 
		    get { return this.overshortallocationsex.AllocatedValue; }
			set
			{
			    if (value == this.overshortallocationsex.AllocatedValue) return;
				this.overshortallocationsex.AllocatedValue = value;
                if(this.DTO.TrackingState == TrackableEntities.TrackingState.Unchanged)this.DTO.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("AllocatedValue");
			}
		}
     

       
       [NumberValidationAttribute]
public Nullable<double> ReceivedValue
		{ 
		    get { return this.overshortallocationsex.ReceivedValue; }
			set
			{
			    if (value == this.overshortallocationsex.ReceivedValue) return;
				this.overshortallocationsex.ReceivedValue = value;
                if(this.DTO.TrackingState == TrackableEntities.TrackingState.Unchanged)this.DTO.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("ReceivedValue");
			}
		}
     

       
       [NumberValidationAttribute]
public Nullable<double> InvoiceValue
		{ 
		    get { return this.overshortallocationsex.InvoiceValue; }
			set
			{
			    if (value == this.overshortallocationsex.InvoiceValue) return;
				this.overshortallocationsex.InvoiceValue = value;
                if(this.DTO.TrackingState == TrackableEntities.TrackingState.Unchanged)this.DTO.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("InvoiceValue");
			}
		}
     

       [RequiredValidationAttribute(ErrorMessage= "LineNumber is required")]
       [NumberValidationAttribute]
public int LineNumber
		{ 
		    get { return this.overshortallocationsex.LineNumber; }
			set
			{
			    if (value == this.overshortallocationsex.LineNumber) return;
				this.overshortallocationsex.LineNumber = value;
                if(this.DTO.TrackingState == TrackableEntities.TrackingState.Unchanged)this.DTO.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("LineNumber");
			}
		}
     

       
       [NumberValidationAttribute]
public Nullable<double> PiQuantity
		{ 
		    get { return this.overshortallocationsex.PiQuantity; }
			set
			{
			    if (value == this.overshortallocationsex.PiQuantity) return;
				this.overshortallocationsex.PiQuantity = value;
                if(this.DTO.TrackingState == TrackableEntities.TrackingState.Unchanged)this.DTO.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("PiQuantity");
			}
		}
     

       [RequiredValidationAttribute(ErrorMessage= "Item_ is required")]
       
public int Item_Id
		{ 
		    get { return this.overshortallocationsex.Item_Id; }
			set
			{
			    if (value == this.overshortallocationsex.Item_Id) return;
				this.overshortallocationsex.Item_Id = value;
                if(this.DTO.TrackingState == TrackableEntities.TrackingState.Unchanged)this.DTO.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("Item_Id");
			}
		}
     

       
       
                
                
public string OverShortDetailStatus
		{ 
		    get { return this.overshortallocationsex.OverShortDetailStatus; }
			set
			{
			    if (value == this.overshortallocationsex.OverShortDetailStatus) return;
				this.overshortallocationsex.OverShortDetailStatus = value;
                if(this.DTO.TrackingState == TrackableEntities.TrackingState.Unchanged)this.DTO.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("OverShortDetailStatus");
			}
		}
     

       [RequiredValidationAttribute(ErrorMessage= "QtyAllocated is required")]
       [NumberValidationAttribute]
public double QtyAllocated
		{ 
		    get { return this.overshortallocationsex.QtyAllocated; }
			set
			{
			    if (value == this.overshortallocationsex.QtyAllocated) return;
				this.overshortallocationsex.QtyAllocated = value;
                if(this.DTO.TrackingState == TrackableEntities.TrackingState.Unchanged)this.DTO.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("QtyAllocated");
			}
		}
     

       
       
                
                
public string AllocationStatus
		{ 
		    get { return this.overshortallocationsex.AllocationStatus; }
			set
			{
			    if (value == this.overshortallocationsex.AllocationStatus) return;
				this.overshortallocationsex.AllocationStatus = value;
                if(this.DTO.TrackingState == TrackableEntities.TrackingState.Unchanged)this.DTO.TrackingState = TrackableEntities.TrackingState.Modified;
				NotifyPropertyChanged("AllocationStatus");
			}
		}
     

       private OverShortDetailAllocation _OverShortDetailAllocation;
        public  OverShortDetailAllocation OverShortDetailAllocation
		{
		    get
               { 
                  if (this.overshortallocationsex != null)
                   {
                       if (_OverShortDetailAllocation != null)
                       {
                           if (this.overshortallocationsex.OverShortDetailAllocation !=
                               _OverShortDetailAllocation.DTO)
                           {
                                if (this.overshortallocationsex.OverShortDetailAllocation  != null)
                               _OverShortDetailAllocation = new OverShortDetailAllocation(this.overshortallocationsex.OverShortDetailAllocation);
                           }
                       }
                       else
                       {
                             if (this.overshortallocationsex.OverShortDetailAllocation  != null)
                           _OverShortDetailAllocation = new OverShortDetailAllocation(this.overshortallocationsex.OverShortDetailAllocation);
                       }
                   }


             //       if (_OverShortDetailAllocation != null) return _OverShortDetailAllocation;
                       
             //       var i = new OverShortDetailAllocation(){TrackingState = TrackingState.Added};
			//		//if (this.overshortallocationsex.OverShortDetailAllocation == null) Debugger.Break();
			//		if (this.overshortallocationsex.OverShortDetailAllocation != null)
            //        {
            //           i. = this.overshortallocationsex.OverShortDetailAllocation;
            //        }
            //        else
            //        {
            //            this.overshortallocationsex.OverShortDetailAllocation = i.;
             //       }
                           
            //        _OverShortDetailAllocation = i;
                     
                    return _OverShortDetailAllocation;
               }
			set
			{
			    if (value == _OverShortDetailAllocation) return;
                _OverShortDetailAllocation = value;
                if(value != null)
                     this.overshortallocationsex.OverShortDetailAllocation = value.DTO;
				if(this.DTO.TrackingState == TrackableEntities.TrackingState.Unchanged)this.DTO.TrackingState = TrackableEntities.TrackingState.Modified;
                NotifyPropertyChanged("OverShortDetailAllocation");
			}
		}
        

       private OverShortDetailsEX _OverShortDetailsEX;
        public  OverShortDetailsEX OverShortDetailsEX
		{
		    get
               { 
                  if (this.overshortallocationsex != null)
                   {
                       if (_OverShortDetailsEX != null)
                       {
                           if (this.overshortallocationsex.OverShortDetailsEX !=
                               _OverShortDetailsEX.DTO)
                           {
                                if (this.overshortallocationsex.OverShortDetailsEX  != null)
                               _OverShortDetailsEX = new OverShortDetailsEX(this.overshortallocationsex.OverShortDetailsEX);
                           }
                       }
                       else
                       {
                             if (this.overshortallocationsex.OverShortDetailsEX  != null)
                           _OverShortDetailsEX = new OverShortDetailsEX(this.overshortallocationsex.OverShortDetailsEX);
                       }
                   }


             //       if (_OverShortDetailsEX != null) return _OverShortDetailsEX;
                       
             //       var i = new OverShortDetailsEX(){TrackingState = TrackingState.Added};
			//		//if (this.overshortallocationsex.OverShortDetailsEX == null) Debugger.Break();
			//		if (this.overshortallocationsex.OverShortDetailsEX != null)
            //        {
            //           i. = this.overshortallocationsex.OverShortDetailsEX;
            //        }
            //        else
            //        {
            //            this.overshortallocationsex.OverShortDetailsEX = i.;
             //       }
                           
            //        _OverShortDetailsEX = i;
                     
                    return _OverShortDetailsEX;
               }
			set
			{
			    if (value == _OverShortDetailsEX) return;
                _OverShortDetailsEX = value;
                if(value != null)
                     this.overshortallocationsex.OverShortDetailsEX = value.DTO;
				if(this.DTO.TrackingState == TrackableEntities.TrackingState.Unchanged)this.DTO.TrackingState = TrackableEntities.TrackingState.Modified;
                NotifyPropertyChanged("OverShortDetailsEX");
			}
		}
        

       private AsycudaDocumentItem _AsycudaDocumentItem;
        public  AsycudaDocumentItem AsycudaDocumentItem
		{
		    get
               { 
                  if (this.overshortallocationsex != null)
                   {
                       if (_AsycudaDocumentItem != null)
                       {
                           if (this.overshortallocationsex.AsycudaDocumentItem !=
                               _AsycudaDocumentItem.DTO)
                           {
                                if (this.overshortallocationsex.AsycudaDocumentItem  != null)
                               _AsycudaDocumentItem = new AsycudaDocumentItem(this.overshortallocationsex.AsycudaDocumentItem);
                           }
                       }
                       else
                       {
                             if (this.overshortallocationsex.AsycudaDocumentItem  != null)
                           _AsycudaDocumentItem = new AsycudaDocumentItem(this.overshortallocationsex.AsycudaDocumentItem);
                       }
                   }


             //       if (_AsycudaDocumentItem != null) return _AsycudaDocumentItem;
                       
             //       var i = new AsycudaDocumentItem(){TrackingState = TrackingState.Added};
			//		//if (this.overshortallocationsex.AsycudaDocumentItem == null) Debugger.Break();
			//		if (this.overshortallocationsex.AsycudaDocumentItem != null)
            //        {
            //           i. = this.overshortallocationsex.AsycudaDocumentItem;
            //        }
            //        else
            //        {
            //            this.overshortallocationsex.AsycudaDocumentItem = i.;
             //       }
                           
            //        _AsycudaDocumentItem = i;
                     
                    return _AsycudaDocumentItem;
               }
			set
			{
			    if (value == _AsycudaDocumentItem) return;
                _AsycudaDocumentItem = value;
                if(value != null)
                     this.overshortallocationsex.AsycudaDocumentItem = value.DTO;
				if(this.DTO.TrackingState == TrackableEntities.TrackingState.Unchanged)this.DTO.TrackingState = TrackableEntities.TrackingState.Modified;
                NotifyPropertyChanged("AsycudaDocumentItem");
			}
		}
        


        ChangeTrackingCollection<DTO.OverShortAllocationsEX> _changeTracker;    
        public ChangeTrackingCollection<DTO.OverShortAllocationsEX> ChangeTracker
        {
            get
            {
                return _changeTracker;
            }
        }

        public new TrackableEntities.TrackingState TrackingState
        {
            get
            {
                return this.DTO.TrackingState;
            }
            set
            {
                this.DTO.TrackingState = value;
                NotifyPropertyChanged("TrackingState");
            }
        }

    }
}


