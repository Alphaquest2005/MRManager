// <autogenerated>
//   This file was generated by T4 code generator MRManger-DataEntities.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

using System;
using EF.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Metadata.Builders;

namespace EF.Mappings
{
	public class InterviewsMap
	{
		public static void Map(EntityTypeBuilder<Interviews> entityBuilder)
		{
			entityBuilder.ToTable("Interviews", "Interview");
			entityBuilder.HasKey(t => t.Id);
			entityBuilder.Property(t => t.Id).HasColumnName("Id").UseSqlServerIdentityColumn();	
			entityBuilder.Property(t => t.Name).HasColumnName("Name").IsRequired().HasMaxLength(50);
			entityBuilder.Property(t => t.PhaseId).HasColumnName("PhaseId").IsRequired();
			entityBuilder.Property(t => t.MedicalCategoryId).HasColumnName("MedicalCategoryId").IsRequired();
		//-------------------Navigation Properties -------------------------------//
				entityBuilder.HasMany(x => x.MedicalSystemInterviews).WithOne(p => p.Interviews).HasForeignKey(c => c.InterviewId).OnDelete(DeleteBehavior.Restrict);
				entityBuilder.HasMany(x => x.Questions).WithOne(p => p.Interviews).HasForeignKey(c => c.InterviewId).OnDelete(DeleteBehavior.Restrict);
	
				//----------------Parent Properties
				//entityBuilder.HasOne(p => p.Phase).WithMany(p => p.Interviews).HasForeignKey(c => c.PhaseId).OnDelete(DeleteBehavior.Restrict);
				//entityBuilder.HasOne(p => p.MedicalCategory).WithMany(p => p.Interviews).HasForeignKey(c => c.MedicalCategoryId).OnDelete(DeleteBehavior.Restrict);
	
		}
	}
}
