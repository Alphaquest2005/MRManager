// <autogenerated>
//   This file was generated by T4 code generator MRManger-ViewModels.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>


using System;
using CommonMessages;
using Core.Common.UI;
using EventAggregator;
using EventMessages;
using Interfaces;
using RevolutionEntities.Process;
using ViewMessages;

namespace ViewModels
{
	public partial class MainViewModel 
	{
		 private static readonly MainViewModel instance;
		 static MainViewModel()
		{
			instance = new MainViewModel();
		}

		 public static MainViewModel Instance
		{
			get { return instance; }
		}

		public static SliderPanel Slider { get; set; }
		SourceMessage SourceMessage => new SourceMessage(new MessageSource(this.ToString()), new MachineInfo(Environment.MachineName, Environment.ProcessorCount));

		public MainViewModel()
		{
			try
			{
				
				//var a = new GetEntityById<IApplicationSetting>(,MsgSource);
				//a.Create(1);
				//EventMessageBus.Current.Publish(a,MsgSource);
				EventMessageBus.Current.GetEvent<EntityUpdated<IApplicationSetting>>(SourceMessage).Subscribe(handleApplicationSetting);
				EventMessageBus.Current.GetEvent<ViewNav>(SourceMessage).Subscribe(x => Slider.BringIntoView(x.View));

			}
			catch (Exception)
			{
				throw;
			}
		}

		private void handleApplicationSetting(EntityUpdated<IApplicationSetting> applicationSetting)
		{
			//CacheViewModel<IApplicationSetting>.Instance.CurrentEntity = applicationSetting.Entity;
		}
	}
}
