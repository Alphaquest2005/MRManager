<#@ include file="T4Toolbox.tt" #>
<#@ assembly name="C:\Prism\GitRepositiory\MRManager\Amoeba\T4 Repository\bin\Debug\T4Entities.dll" #>
<#@ import namespace="T4Entities" #>
<#@ assembly name="C:\Prism\GitRepositiory\MRManager\Amoeba\Specifications\bin\Debug\Specifications.dll"#>
<#@ import namespace="Specifications" #>
<#@ assembly name="C:\Prism\GitRepositiory\MRManager\Amoeba\Specifications\bin\Debug\LinqSpecs.dll"#>
<#@ assembly name="System.Core, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" #>
<#@ import namespace="System.Linq" #>
<#@ assembly name="C:\Prism\GitRepositiory\MRManager\Amoeba\Amoeba\Amoeba\packages\morelinq.1.4.0\lib\net35\MoreLinq.dll" #>
<#@ import namespace="MoreLinq" #>
<#+
// <copyright file="EFEntityTemplate.tt" company="">
//  Copyright © . All Rights Reserved.
// </copyright>

public class FunctionExpressionTemplate : CSharpTemplate
{
	public FunctionExpressionTemplate(Function function)
	{
		Function = function;
	}

	public Function Function { get;}

	public override string TransformText()
	{
		base.TransformText();

#>
using System;
using System.Collections.Generic;
using System.Linq;
using Common.DataEntites;
using EF.Entities;
using Interfaces;

namespace Entity.Expressions
{
	public static partial class FunctionExpressions
	{
		public static <#=Function.ReturnDataType.DataType.Name#> <#= Function.Name #>(<#+ foreach (var parameter in Function.FunctionParameters)
{ #><#=parameter.Parameter.DataType.Name#> <#=parameter.Parameter.Name#><#=parameter == Function.FunctionParameters.LastOrDefault()?"":","#><#+ }#>) => <#=Function.FunctionBody.Body#>;
	}
}
<#+
		return this.GenerationEnvironment.ToString();
	}
}

	
#>
