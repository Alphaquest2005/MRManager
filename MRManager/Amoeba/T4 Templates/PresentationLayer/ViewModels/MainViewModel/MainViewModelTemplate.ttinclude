<#@ include file="T4Toolbox.tt" #>
<#@ assembly name="C:\Prism\GitRepositiory\MRManager\Amoeba\T4 Repository\bin\Debug\T4Entities.dll" #>
<#@ import namespace="T4Entities" #>
<#+
// <copyright file="EFEntityTemplate.tt" company="">
//  Copyright © . All Rights Reserved.
// </copyright>

public class MainViewModelTemplate : CSharpTemplate
{



	public override string TransformText()
	{
		base.TransformText();
#>

using System;
using CommonMessages;
using Core.Common.UI;
using EventAggregator;
using EventMessages;
using Interfaces;
using ViewMessages;

namespace ViewModels
{
	public partial class MainViewModel 
	{
		 private static readonly MainViewModel instance;
		 static MainViewModel()
		{
			instance = new MainViewModel();
		}

		 public static MainViewModel Instance
		{
			get { return instance; }
		}

		public static SliderPanel Slider { get; set; }
		MessageSource msgSource => new MessageSource(this.ToString());

		public MainViewModel()
		{
			try
			{
				
				var a = new GetEntityById<IApplicationSetting>(msgSource);
				a.Create(1);
				EventMessageBus.Current.Publish(a,msgSource);
				EventMessageBus.Current.GetEvent<IApplicationSetting>(msgSource).Subscribe(handleApplicationSetting);
				EventMessageBus.Current.GetEvent<ViewNav>(msgSource).Subscribe(x => Slider.BringIntoView(x.View));

			}
			catch (Exception)
			{
				throw;
			}
		}

		private void handleApplicationSetting(IApplicationSetting applicationSetting)
		{
			BaseViewModel.CurrentApplicationSetting = applicationSetting;
		}
	}
}
<#+
		return this.GenerationEnvironment.ToString();
	}
}
#>
