<#@ template language="C#" hostspecific="true" debug="True" #>
<#@ output extension="cs" #>
<#@ include file="T4Toolbox.tt" #>
<#@ assembly name="System.Core, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" #>
<#@ assembly name="EnvDTE, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" #>
<#@ assembly name="C:\Prism\GitRepositiory\MRManager\Amoeba\T4 Repository\bin\Debug\T4Repository.dll" #>
<#@ assembly name="C:\Prism\GitRepositiory\MRManager\Amoeba\T4 Repository\bin\Debug\T4Entities.dll" #>
<#@ import namespace="T4Entities" #>
<#@ import namespace="T4Repository" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="EnvDTE" #>
<#+

    
        public void WriteToOutput(string output)
        {
            IServiceProvider hostServiceProvider = (IServiceProvider) Host;
            if (hostServiceProvider == null)
                throw new Exception("Host property returned unexpected value (null)");

            EnvDTE.DTE dte = (EnvDTE.DTE) hostServiceProvider.GetService(typeof (EnvDTE.DTE));
            if (dte == null)
                throw new Exception("Unable to retrieve EnvDTE.DTE");

            var window = dte.Windows.Item(EnvDTE.Constants.vsWindowKindOutput);
            var outputWindow = (OutputWindow) window.Object;
            outputWindow.ActivePane.Activate();

            outputWindow.ActivePane.OutputString(output);
            outputWindow.ActivePane.OutputString("\n");
        }
    

#>
