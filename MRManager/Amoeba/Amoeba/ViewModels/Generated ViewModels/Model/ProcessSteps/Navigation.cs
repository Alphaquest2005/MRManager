// <autogenerated>
//   This file was generated by T4 code generator Amoeba-Master.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>


using System;
using System.Collections.Generic;
using System.Linq.Expressions;
using Core.Common.UI;
using CommonMessages;
using EventAggregator;
using EventMessages;
using Interfaces;
using Utilities;

namespace ViewModels
{
	public partial class ProcessStepsViewModel_AutoGen 
	{
		MessageSource msgSource => new MessageSource(this.ToString());
		protected virtual void WireEvents()
		{
			EventMessageBus.Current.GetEvent<CurrentEntityChanged<IProcess>>(msgSource).Subscribe(x => handleProcessIdChanged(x.EntityId));      
			EventMessageBus.Current.GetEvent<CurrentEntityChanged<ISteps>>(msgSource).Subscribe(x => handleStepIdChanged(x.EntityId));      
                  
		}
		private void handleProcessIdChanged(int entityId)
		{
					
			if(entityId != EntityStates.NullEntity)
			if(CurrentEntity.Id == EntityStates.NullEntity || CurrentEntity.Id != entityId)
			{
				CurrentEntity = CreateNullEntity();
				FilterExpression = new List<Expression<Func<IProcessSteps, bool>>>() {x => x.ProcessId == entityId};
			}
		}
		private void handleStepIdChanged(int entityId)
		{
					
			if(entityId != EntityStates.NullEntity)
			if(CurrentEntity.Id == EntityStates.NullEntity || CurrentEntity.Id != entityId)
			{
				CurrentEntity = CreateNullEntity();
				FilterExpression = new List<Expression<Func<IProcessSteps, bool>>>() {x => x.StepId == entityId};
			}
		}
 
	}
}
