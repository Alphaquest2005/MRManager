// <autogenerated>
//   This file was generated by T4 code generator Amoeba-Master.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

using System;
using System.Collections.Generic;
using System.Linq;
using Common.DataEntites;
using EF.Entities;
using Interfaces;

namespace Entity.Expressions
{
	public static partial class ViewEntityExpressions
	{
		public static IQueryable<ViewEntity> GetViewEntityById(this IQueryable<ViewEntity> query, int Id) => query.Where(x => x.Id == Id);


// Get Leaf Properties
    
		public static IQueryable<Entities> GetEntities(this IQueryable<ViewEntity> query) => query.Entities();
    
		public static IQueryable<Screens> GetScreens(this IQueryable<ViewEntity> query) => query.Views().ScreenViews().Screens();
    
		public static IQueryable<ScreenViews> GetScreenViews(this IQueryable<ViewEntity> query) => query.Views().ScreenViews();
    
		public static IQueryable<Views> GetViews(this IQueryable<ViewEntity> query) => query.Views();
    
		public static IQueryable<ViewEntity> GetViewEntity(this IQueryable<ViewEntity> query) => query;

			// Child Properties
			//Parent Properties
				//public static IQueryable<ViewEntity> ViewEntity(this IQueryable<Entities> entities) => entities.SelectMany(x => x.ViewEntity);
				public static IQueryable<Entities> Entities(this IQueryable<ViewEntity> query) => query.Select(x => x.Entities);
				//public static IQueryable<ViewEntity> ViewEntity(this IQueryable<Views> views) => views.SelectMany(x => x.ViewEntity);
				public static IQueryable<Views> Views(this IQueryable<ViewEntity> query) => query.Select(x => x.Views);
	}
}
