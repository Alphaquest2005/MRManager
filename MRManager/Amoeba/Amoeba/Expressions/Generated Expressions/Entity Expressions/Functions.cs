// <autogenerated>
//   This file was generated by T4 code generator Amoeba-Master.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

using System;
using System.Collections.Generic;
using System.Linq;
using Common.DataEntites;
using EF.Entities;
using Interfaces;

namespace Entity.Expressions
{
	public static partial class FunctionsExpressions
	{
		public static IQueryable<Functions> GetFunctionsById(this IQueryable<Functions> query, int Id) => query.Where(x => x.Id == Id);


// Get Leaf Properties
    
		public static IQueryable<Functions> GetFunctions(this IQueryable<Functions> query) => query;

			// Child Properties
				public static IQueryable<EntityViewPropertyFunction> EntityViewPropertyFunction(this IQueryable<Functions> functions) => functions.SelectMany(x => x.EntityViewPropertyFunction);
				public static IQueryable<EntityViewPropertyFunction> EntityViewPropertyFunction(this IQueryable<Functions> functions, int id) => functions.Where(x => x.Id == id).SelectMany(x => x.EntityViewPropertyFunction);
				public static IQueryable<FunctionBody> FunctionBody(this IQueryable<Functions> functions) => functions.Select(x => x.FunctionBody);
				public static IQueryable<FunctionBody> FunctionBody(this IQueryable<Functions> functions, int id) => functions.Where(x => x.Id == id).Select(x => x.FunctionBody);
				public static IQueryable<FunctionParameters> FunctionParameters(this IQueryable<Functions> functions) => functions.SelectMany(x => x.FunctionParameters);
				public static IQueryable<FunctionParameters> FunctionParameters(this IQueryable<Functions> functions, int id) => functions.Where(x => x.Id == id).SelectMany(x => x.FunctionParameters);
				public static IQueryable<FunctionReturnType> FunctionReturnType(this IQueryable<Functions> functions) => functions.Select(x => x.FunctionReturnType);
				public static IQueryable<FunctionReturnType> FunctionReturnType(this IQueryable<Functions> functions, int id) => functions.Where(x => x.Id == id).Select(x => x.FunctionReturnType);
			//Parent Properties
	}
}
