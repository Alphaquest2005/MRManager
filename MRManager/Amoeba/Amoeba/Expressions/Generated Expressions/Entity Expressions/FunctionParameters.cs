// <autogenerated>
//   This file was generated by T4 code generator Amoeba-Master.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

using System;
using System.Collections.Generic;
using System.Linq;
using Common.DataEntites;
using EF.Entities;
using Interfaces;

namespace Entity.Expressions
{
	public static partial class FunctionParametersExpressions
	{
		public static IQueryable<FunctionParameters> GetFunctionParametersById(this IQueryable<FunctionParameters> query, int Id) => query.Where(x => x.Id == Id);


// Get Leaf Properties
    
		public static IQueryable<Functions> GetFunctions(this IQueryable<FunctionParameters> query) => query.Functions();
    
		public static IQueryable<Parameters> GetParameters(this IQueryable<FunctionParameters> query) => query.Parameters();
    
		public static IQueryable<EntityViewProperties> GetEntityViewProperties(this IQueryable<FunctionParameters> query) => query.EntityViewPropertyFunctionParameter().EntityViewPropertyFunction().EntityViewProperties();
    
		public static IQueryable<EntityViewPropertyFunction> GetEntityViewPropertyFunction(this IQueryable<FunctionParameters> query) => query.EntityViewPropertyFunctionParameter().EntityViewPropertyFunction();
    
		public static IQueryable<EntityViewPropertyFunctionParameter> GetEntityViewPropertyFunctionParameter(this IQueryable<FunctionParameters> query) => query.EntityViewPropertyFunctionParameter();
    
		public static IQueryable<FunctionParameters> GetFunctionParameters(this IQueryable<FunctionParameters> query) => query;

			// Child Properties
				public static IQueryable<EntityViewPropertyFunctionParameter> EntityViewPropertyFunctionParameter(this IQueryable<FunctionParameters> functionparameters) => functionparameters.SelectMany(x => x.EntityViewPropertyFunctionParameter);
				public static IQueryable<EntityViewPropertyFunctionParameter> EntityViewPropertyFunctionParameter(this IQueryable<FunctionParameters> functionparameters, int id) => functionparameters.Where(x => x.Id == id).SelectMany(x => x.EntityViewPropertyFunctionParameter);
			//Parent Properties
				//public static IQueryable<FunctionParameters> FunctionParameters(this IQueryable<Functions> functions) => functions.SelectMany(x => x.FunctionParameters);
				public static IQueryable<Functions> Functions(this IQueryable<FunctionParameters> query) => query.Select(x => x.Functions);
				//public static IQueryable<FunctionParameters> FunctionParameters(this IQueryable<Parameters> parameters) => parameters.SelectMany(x => x.FunctionParameters);
				public static IQueryable<Parameters> Parameters(this IQueryable<FunctionParameters> query) => query.Select(x => x.Parameters);
	}
}
