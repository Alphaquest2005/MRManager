// <autogenerated>
//   This file was generated by T4 code generator Amoeba-Master.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

using System;
using System.Collections.Generic;
using System.Linq;
using Common.DataEntites;
using EF.Entities;
using Interfaces;

namespace Entity.Expressions
{
	public static partial class DataPropertiesExpressions
	{
		public static IQueryable<DataProperties> GetDataPropertiesById(this IQueryable<DataProperties> query, int Id) => query.Where(x => x.Id == Id);


// Get Leaf Properties
    
		public static IQueryable<DataTypes> GetDataTypes(this IQueryable<DataProperties> query) => query.DataTypes();
    
		public static IQueryable<EntityProperties> GetEntityProperties(this IQueryable<DataProperties> query) => query.EntityProperties();
    
		public static IQueryable<ModelTypes> GetModelTypes(this IQueryable<DataProperties> query) => query.ModelTypes();
    
		public static IQueryable<PrimaryKeyOptions> GetPrimaryKeyOptions(this IQueryable<DataProperties> query) => query.PrimaryKeyOptions();
    
		public static IQueryable<DataProperties> GetDataProperties(this IQueryable<DataProperties> query) => query;

			// Child Properties
				public static IQueryable<PrimaryKeyOptions> PrimaryKeyOptions(this IQueryable<DataProperties> dataproperties) => dataproperties.Select(x => x.PrimaryKeyOptions);
				public static IQueryable<PrimaryKeyOptions> PrimaryKeyOptions(this IQueryable<DataProperties> dataproperties, int id) => dataproperties.Where(x => x.Id == id).Select(x => x.PrimaryKeyOptions);
			//Parent Properties
				//public static IQueryable<DataProperties> DataProperties(this IQueryable<DataTypes> datatypes) => datatypes.SelectMany(x => x.DataProperties);
				public static IQueryable<DataTypes> DataTypes(this IQueryable<DataProperties> query) => query.Select(x => x.DataTypes);
				//public static IQueryable<DataProperties> DataProperties(this IQueryable<EntityProperties> entityproperties) => entityproperties.SelectMany(x => x.DataProperties);
				public static IQueryable<EntityProperties> EntityProperties(this IQueryable<DataProperties> query) => query.Select(x => x.EntityProperties);
				//public static IQueryable<DataProperties> DataProperties(this IQueryable<ModelTypes> modeltypes) => modeltypes.SelectMany(x => x.DataProperties);
				public static IQueryable<ModelTypes> ModelTypes(this IQueryable<DataProperties> query) => query.Select(x => x.ModelTypes);
	}
}
