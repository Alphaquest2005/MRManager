// <autogenerated>
//   This file was generated by T4 code generator Amoeba-Master.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

using System;
using System.Collections.Generic;
using System.Linq;
using Common.DataEntites;
using EF.Entities;
using Interfaces;

namespace Entity.Expressions
{
	public static partial class EntityViewViewPropertiesExpressions
	{
		public static IQueryable<EntityViewViewProperties> GetEntityViewViewPropertiesById(this IQueryable<EntityViewViewProperties> query, int Id) => query.Where(x => x.Id == Id);


// Get Leaf Properties
    
		public static IQueryable<EntityViewProperties> GetEntityViewProperties(this IQueryable<EntityViewViewProperties> query) => query.EntityViewProperties();
    
		public static IQueryable<EntityViewViewProperties> GetEntityViewViewProperties(this IQueryable<EntityViewViewProperties> query) => query;

			// Child Properties
			//Parent Properties
				//public static IQueryable<EntityViewViewProperties> EntityViewViewProperties(this IQueryable<EntityViewProperties> entityviewproperties) => entityviewproperties.SelectMany(x => x.EntityViewViewProperties);
				public static IQueryable<EntityViewProperties> EntityViewProperties(this IQueryable<EntityViewViewProperties> query) => query.Select(x => x.EntityViewProperties);
				//public static IQueryable<EntityViewViewProperties> EntityViewViewProperties(this IQueryable<EntityViewProperties> entityviewproperties) => entityviewproperties.Select(x => x.EntityViewViewProperties);
				public static IQueryable<EntityViewProperties> EntityViewProperties(this IQueryable<EntityViewViewProperties> query) => query.Select(x => x.EntityViewProperties);
	}
}
