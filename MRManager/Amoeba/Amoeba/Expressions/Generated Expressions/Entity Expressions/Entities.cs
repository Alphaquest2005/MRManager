// <autogenerated>
//   This file was generated by T4 code generator Amoeba-Master.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

using System;
using System.Collections.Generic;
using System.Linq;
using Common.DataEntites;
using EF.Entities;
using Interfaces;

namespace Entity.Expressions
{
	public static partial class EntitiesExpressions
	{
		public static IQueryable<Entities> GetEntitiesById(this IQueryable<Entities> query, int Id) => query.Where(x => x.Id == Id);


// Get Leaf Properties
    
		public static IQueryable<Entities> GetEntities(this IQueryable<Entities> query) => query;

			// Child Properties
				public static IQueryable<ApplicationEntities> ApplicationEntities(this IQueryable<Entities> entities) => entities.SelectMany(x => x.ApplicationEntities);
				public static IQueryable<ApplicationEntities> ApplicationEntities(this IQueryable<Entities> entities, int id) => entities.Where(x => x.Id == id).SelectMany(x => x.ApplicationEntities);
				public static IQueryable<EntityView> EntityView(this IQueryable<Entities> entities) => entities.SelectMany(x => x.EntityView);
				public static IQueryable<EntityView> EntityView(this IQueryable<Entities> entities, int id) => entities.Where(x => x.Id == id).SelectMany(x => x.EntityView);
				public static IQueryable<EntityProperties> EntityProperties(this IQueryable<Entities> entities) => entities.SelectMany(x => x.EntityProperties);
				public static IQueryable<EntityProperties> EntityProperties(this IQueryable<Entities> entities, int id) => entities.Where(x => x.Id == id).SelectMany(x => x.EntityProperties);
				public static IQueryable<ViewEntity> ViewEntity(this IQueryable<Entities> entities) => entities.SelectMany(x => x.ViewEntity);
				public static IQueryable<ViewEntity> ViewEntity(this IQueryable<Entities> entities, int id) => entities.Where(x => x.Id == id).SelectMany(x => x.ViewEntity);
			//Parent Properties
	}
}
