//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("DataLayer", "FK_AccountAccountEntry", "Account", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(PayrollManager.DataLayer.Account), "AccountEntry", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PayrollManager.DataLayer.AccountEntry), true)]
[assembly: EdmRelationshipAttribute("DataLayer", "FK_PayrollItemAccountEntry", "PayrollItem", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(PayrollManager.DataLayer.PayrollItem), "AccountEntry", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PayrollManager.DataLayer.AccountEntry), true)]
[assembly: EdmRelationshipAttribute("DataLayer", "FK_AccountPayrollEmployeeSetup", "Account", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(PayrollManager.DataLayer.Account), "PayrollEmployeeSetup", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PayrollManager.DataLayer.PayrollEmployeeSetup), true)]
[assembly: EdmRelationshipAttribute("DataLayer", "FK_AccountPayrollEmployeeSetup1", "Account", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(PayrollManager.DataLayer.Account), "PayrollEmployeeSetup", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PayrollManager.DataLayer.PayrollEmployeeSetup), true)]
[assembly: EdmRelationshipAttribute("DataLayer", "FK_AccountPayrollItem", "Account", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(PayrollManager.DataLayer.Account), "PayrollItem", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PayrollManager.DataLayer.PayrollItem), true)]
[assembly: EdmRelationshipAttribute("DataLayer", "FK_AccountPayrollItem1", "Account", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(PayrollManager.DataLayer.Account), "PayrollItem", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PayrollManager.DataLayer.PayrollItem), true)]
[assembly: EdmRelationshipAttribute("DataLayer", "FK_Accounts_AccountTypes", "AccountType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(PayrollManager.DataLayer.AccountType), "Account", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PayrollManager.DataLayer.Account), true)]
[assembly: EdmRelationshipAttribute("DataLayer", "FK_EmployeeAccount_inherits_Account", "Account", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(PayrollManager.DataLayer.Account), "Accounts_EmployeeAccount", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(PayrollManager.DataLayer.EmployeeAccount), true)]
[assembly: EdmRelationshipAttribute("DataLayer", "FK_EmployeeEmployeeAccount", "Employee", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(PayrollManager.DataLayer.Employee), "Accounts_EmployeeAccount", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PayrollManager.DataLayer.EmployeeAccount), true)]
[assembly: EdmRelationshipAttribute("DataLayer", "FK_PayrollEmployeeSetup_ChargeTypes", "ChargeType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(PayrollManager.DataLayer.ChargeType), "PayrollEmployeeSetup", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PayrollManager.DataLayer.PayrollEmployeeSetup), true)]
[assembly: EdmRelationshipAttribute("DataLayer", "FK_BranchEmployee", "Company", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(PayrollManager.DataLayer.Company), "Employee", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PayrollManager.DataLayer.Employee), true)]
[assembly: EdmRelationshipAttribute("DataLayer", "FK_Companies_Institutions", "Institution", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(PayrollManager.DataLayer.Institution), "Company", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(PayrollManager.DataLayer.Company), true)]
[assembly: EdmRelationshipAttribute("DataLayer", "FK_EmailTemplate_Companies", "Company", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(PayrollManager.DataLayer.Company), "EmailTemplate", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PayrollManager.DataLayer.EmailTemplate), true)]
[assembly: EdmRelationshipAttribute("DataLayer", "FK_EmployeeEmployee", "Employee", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(PayrollManager.DataLayer.Employee), "Employee1", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PayrollManager.DataLayer.Employee), true)]
[assembly: EdmRelationshipAttribute("DataLayer", "FK_EmployeePayrollEmployeeSetup", "Employee", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(PayrollManager.DataLayer.Employee), "PayrollEmployeeSetup", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PayrollManager.DataLayer.PayrollEmployeeSetup), true)]
[assembly: EdmRelationshipAttribute("DataLayer", "FK_EmployeePayrollItem", "Employee", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(PayrollManager.DataLayer.Employee), "PayrollItem", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PayrollManager.DataLayer.PayrollItem), true)]
[assembly: EdmRelationshipAttribute("DataLayer", "FK_User_inherits_Employee", "Employee", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(PayrollManager.DataLayer.Employee), "Employees_User", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(PayrollManager.DataLayer.User), true)]
[assembly: EdmRelationshipAttribute("DataLayer", "FK_PayrollJobTypePayrollEmployeeSetup", "PayrollJobType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(PayrollManager.DataLayer.PayrollJobType), "PayrollEmployeeSetup", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PayrollManager.DataLayer.PayrollEmployeeSetup), true)]
[assembly: EdmRelationshipAttribute("DataLayer", "FK_PayrollSetupItemPayrollEmployeeSetup", "PayrollSetupItem", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(PayrollManager.DataLayer.PayrollSetupItem), "PayrollEmployeeSetup", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PayrollManager.DataLayer.PayrollEmployeeSetup), true)]
[assembly: EdmRelationshipAttribute("DataLayer", "FK_PayrollItemPayrollItem", "PayrollItem", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(PayrollManager.DataLayer.PayrollItem), "PayrollItem1", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PayrollManager.DataLayer.PayrollItem), true)]
[assembly: EdmRelationshipAttribute("DataLayer", "FK_PayrollJobPayrollItem", "PayrollJob", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(PayrollManager.DataLayer.PayrollJob), "PayrollItem", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PayrollManager.DataLayer.PayrollItem), true)]
[assembly: EdmRelationshipAttribute("DataLayer", "FK_PayrollSetupItemPayrollItem", "PayrollSetupItem", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(PayrollManager.DataLayer.PayrollSetupItem), "PayrollItem", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PayrollManager.DataLayer.PayrollItem), true)]
[assembly: EdmRelationshipAttribute("DataLayer", "FK_PayrollJobTypePayrollJob", "PayrollJobType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(PayrollManager.DataLayer.PayrollJobType), "PayrollJob", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PayrollManager.DataLayer.PayrollJob), true)]
[assembly: EdmRelationshipAttribute("DataLayer", "FK_Companies_PayrollJobs", "PayrollJob", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(PayrollManager.DataLayer.PayrollJob), "Company", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PayrollManager.DataLayer.Company), true)]
[assembly: EdmRelationshipAttribute("DataLayer", "CompanyPayrollJob", "Company", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(PayrollManager.DataLayer.Company), "PayrollJob", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PayrollManager.DataLayer.PayrollJob), true)]
[assembly: EdmRelationshipAttribute("DataLayer", "InstitutionInstitutionAccounts", "Institution", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(PayrollManager.DataLayer.Institution), "InstitutionAccounts", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PayrollManager.DataLayer.InstitutionAccounts), true)]
[assembly: EdmRelationshipAttribute("DataLayer", "InstitutionAccount", "Institution", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(PayrollManager.DataLayer.Institution), "Account", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PayrollManager.DataLayer.Account), true)]

#endregion

namespace PayrollManager.DataLayer
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class PayrollDB : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new PayrollDB object using the connection string found in the 'PayrollDB' section of the application configuration file.
        /// </summary>
        public PayrollDB() : base("name=PayrollDB", "PayrollDB")
        {
            this.ContextOptions.LazyLoadingEnabled = false;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new PayrollDB object.
        /// </summary>
        public PayrollDB(string connectionString) : base(connectionString, "PayrollDB")
        {
            this.ContextOptions.LazyLoadingEnabled = false;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new PayrollDB object.
        /// </summary>
        public PayrollDB(EntityConnection connection) : base(connection, "PayrollDB")
        {
            this.ContextOptions.LazyLoadingEnabled = false;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AccountEntry> AccountEntries
        {
            get
            {
                if ((_AccountEntries == null))
                {
                    _AccountEntries = base.CreateObjectSet<AccountEntry>("AccountEntries");
                }
                return _AccountEntries;
            }
        }
        private ObjectSet<AccountEntry> _AccountEntries;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Account> Accounts
        {
            get
            {
                if ((_Accounts == null))
                {
                    _Accounts = base.CreateObjectSet<Account>("Accounts");
                }
                return _Accounts;
            }
        }
        private ObjectSet<Account> _Accounts;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EmployeeAccount> EmployeeAccounts
        {
            get
            {
                if ((_EmployeeAccounts == null))
                {
                    _EmployeeAccounts = base.CreateObjectSet<EmployeeAccount>("EmployeeAccounts");
                }
                return _EmployeeAccounts;
            }
        }
        private ObjectSet<EmployeeAccount> _EmployeeAccounts;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AccountType> AccountTypes
        {
            get
            {
                if ((_AccountTypes == null))
                {
                    _AccountTypes = base.CreateObjectSet<AccountType>("AccountTypes");
                }
                return _AccountTypes;
            }
        }
        private ObjectSet<AccountType> _AccountTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ChargeType> ChargeTypes
        {
            get
            {
                if ((_ChargeTypes == null))
                {
                    _ChargeTypes = base.CreateObjectSet<ChargeType>("ChargeTypes");
                }
                return _ChargeTypes;
            }
        }
        private ObjectSet<ChargeType> _ChargeTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Company> Companies
        {
            get
            {
                if ((_Companies == null))
                {
                    _Companies = base.CreateObjectSet<Company>("Companies");
                }
                return _Companies;
            }
        }
        private ObjectSet<Company> _Companies;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EmailTemplate> EmailTemplates
        {
            get
            {
                if ((_EmailTemplates == null))
                {
                    _EmailTemplates = base.CreateObjectSet<EmailTemplate>("EmailTemplates");
                }
                return _EmailTemplates;
            }
        }
        private ObjectSet<EmailTemplate> _EmailTemplates;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Employee> Employees
        {
            get
            {
                if ((_Employees == null))
                {
                    _Employees = base.CreateObjectSet<Employee>("Employees");
                }
                return _Employees;
            }
        }
        private ObjectSet<Employee> _Employees;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Institution> Institutions
        {
            get
            {
                if ((_Institutions == null))
                {
                    _Institutions = base.CreateObjectSet<Institution>("Institutions");
                }
                return _Institutions;
            }
        }
        private ObjectSet<Institution> _Institutions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PayrollEmployeeSetup> PayrollEmployeeSetups
        {
            get
            {
                if ((_PayrollEmployeeSetups == null))
                {
                    _PayrollEmployeeSetups = base.CreateObjectSet<PayrollEmployeeSetup>("PayrollEmployeeSetups");
                }
                return _PayrollEmployeeSetups;
            }
        }
        private ObjectSet<PayrollEmployeeSetup> _PayrollEmployeeSetups;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PayrollItem> PayrollItems
        {
            get
            {
                if ((_PayrollItems == null))
                {
                    _PayrollItems = base.CreateObjectSet<PayrollItem>("PayrollItems");
                }
                return _PayrollItems;
            }
        }
        private ObjectSet<PayrollItem> _PayrollItems;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PayrollJob> PayrollJobs
        {
            get
            {
                if ((_PayrollJobs == null))
                {
                    _PayrollJobs = base.CreateObjectSet<PayrollJob>("PayrollJobs");
                }
                return _PayrollJobs;
            }
        }
        private ObjectSet<PayrollJob> _PayrollJobs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PayrollJobType> PayrollJobTypes
        {
            get
            {
                if ((_PayrollJobTypes == null))
                {
                    _PayrollJobTypes = base.CreateObjectSet<PayrollJobType>("PayrollJobTypes");
                }
                return _PayrollJobTypes;
            }
        }
        private ObjectSet<PayrollJobType> _PayrollJobTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PayrollSetupItem> PayrollSetupItems
        {
            get
            {
                if ((_PayrollSetupItems == null))
                {
                    _PayrollSetupItems = base.CreateObjectSet<PayrollSetupItem>("PayrollSetupItems");
                }
                return _PayrollSetupItems;
            }
        }
        private ObjectSet<PayrollSetupItem> _PayrollSetupItems;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AccountEntries EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAccountEntries(AccountEntry accountEntry)
        {
            base.AddObject("AccountEntries", accountEntry);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Accounts EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAccounts(Account account)
        {
            base.AddObject("Accounts", account);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EmployeeAccounts EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEmployeeAccounts(EmployeeAccount employeeAccount)
        {
            base.AddObject("EmployeeAccounts", employeeAccount);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AccountTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAccountTypes(AccountType accountType)
        {
            base.AddObject("AccountTypes", accountType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ChargeTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToChargeTypes(ChargeType chargeType)
        {
            base.AddObject("ChargeTypes", chargeType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Companies EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCompanies(Company company)
        {
            base.AddObject("Companies", company);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EmailTemplates EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEmailTemplates(EmailTemplate emailTemplate)
        {
            base.AddObject("EmailTemplates", emailTemplate);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Employees EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEmployees(Employee employee)
        {
            base.AddObject("Employees", employee);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Institutions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToInstitutions(Institution institution)
        {
            base.AddObject("Institutions", institution);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PayrollEmployeeSetups EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPayrollEmployeeSetups(PayrollEmployeeSetup payrollEmployeeSetup)
        {
            base.AddObject("PayrollEmployeeSetups", payrollEmployeeSetup);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PayrollItems EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPayrollItems(PayrollItem payrollItem)
        {
            base.AddObject("PayrollItems", payrollItem);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PayrollJobs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPayrollJobs(PayrollJob payrollJob)
        {
            base.AddObject("PayrollJobs", payrollJob);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PayrollJobTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPayrollJobTypes(PayrollJobType payrollJobType)
        {
            base.AddObject("PayrollJobTypes", payrollJobType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PayrollSetupItems EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPayrollSetupItems(PayrollSetupItem payrollSetupItem)
        {
            base.AddObject("PayrollSetupItems", payrollSetupItem);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DataLayer", Name="Account")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [KnownTypeAttribute(typeof(InstitutionAccounts))]
    public partial class Account : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Account object.
        /// </summary>
        /// <param name="accountId">Initial value of the AccountId property.</param>
        /// <param name="accountNumber">Initial value of the AccountNumber property.</param>
        /// <param name="institutionId">Initial value of the InstitutionId property.</param>
        /// <param name="accountName">Initial value of the AccountName property.</param>
        /// <param name="accountTypeId">Initial value of the AccountTypeId property.</param>
        public static Account CreateAccount(global::System.Int32 accountId, global::System.String accountNumber, global::System.Int32 institutionId, global::System.String accountName, global::System.Int32 accountTypeId)
        {
            Account account = new Account();
            account.AccountId = accountId;
            account.AccountNumber = accountNumber;
            account.InstitutionId = institutionId;
            account.AccountName = accountName;
            account.AccountTypeId = accountTypeId;
            return account;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AccountId
        {
            get
            {
                return _AccountId;
            }
            set
            {
                if (_AccountId != value)
                {
                    OnAccountIdChanging(value);
                    ReportPropertyChanging("AccountId");
                    _AccountId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AccountId");
                    OnAccountIdChanged();
                }
            }
        }
        private global::System.Int32 _AccountId;
        partial void OnAccountIdChanging(global::System.Int32 value);
        partial void OnAccountIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AccountNumber
        {
            get
            {
                return _AccountNumber;
            }
            set
            {
                OnAccountNumberChanging(value);
                ReportPropertyChanging("AccountNumber");
                _AccountNumber = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("AccountNumber");
                OnAccountNumberChanged();
            }
        }
        private global::System.String _AccountNumber;
        partial void OnAccountNumberChanging(global::System.String value);
        partial void OnAccountNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 InstitutionId
        {
            get
            {
                return _InstitutionId;
            }
            set
            {
                OnInstitutionIdChanging(value);
                ReportPropertyChanging("InstitutionId");
                _InstitutionId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InstitutionId");
                OnInstitutionIdChanged();
            }
        }
        private global::System.Int32 _InstitutionId;
        partial void OnInstitutionIdChanging(global::System.Int32 value);
        partial void OnInstitutionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AccountName
        {
            get
            {
                return _AccountName;
            }
            set
            {
                OnAccountNameChanging(value);
                ReportPropertyChanging("AccountName");
                _AccountName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("AccountName");
                OnAccountNameChanged();
            }
        }
        private global::System.String _AccountName;
        partial void OnAccountNameChanging(global::System.String value);
        partial void OnAccountNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AccountTypeId
        {
            get
            {
                return _AccountTypeId;
            }
            set
            {
                OnAccountTypeIdChanging(value);
                ReportPropertyChanging("AccountTypeId");
                _AccountTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AccountTypeId");
                OnAccountTypeIdChanged();
            }
        }
        private global::System.Int32 _AccountTypeId;
        partial void OnAccountTypeIdChanging(global::System.Int32 value);
        partial void OnAccountTypeIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataLayer", "FK_AccountAccountEntry", "AccountEntry")]
        public EntityCollection<AccountEntry> AccountEntries
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AccountEntry>("DataLayer.FK_AccountAccountEntry", "AccountEntry");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AccountEntry>("DataLayer.FK_AccountAccountEntry", "AccountEntry", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataLayer", "FK_AccountPayrollEmployeeSetup", "PayrollEmployeeSetup")]
        public EntityCollection<PayrollEmployeeSetup> PayrollEmployeeSetups
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PayrollEmployeeSetup>("DataLayer.FK_AccountPayrollEmployeeSetup", "PayrollEmployeeSetup");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PayrollEmployeeSetup>("DataLayer.FK_AccountPayrollEmployeeSetup", "PayrollEmployeeSetup", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataLayer", "FK_AccountPayrollEmployeeSetup1", "PayrollEmployeeSetup")]
        public EntityCollection<PayrollEmployeeSetup> PayrollEmployeeSetups1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PayrollEmployeeSetup>("DataLayer.FK_AccountPayrollEmployeeSetup1", "PayrollEmployeeSetup");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PayrollEmployeeSetup>("DataLayer.FK_AccountPayrollEmployeeSetup1", "PayrollEmployeeSetup", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataLayer", "FK_AccountPayrollItem", "PayrollItem")]
        public EntityCollection<PayrollItem> CreditPayrollItems
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PayrollItem>("DataLayer.FK_AccountPayrollItem", "PayrollItem");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PayrollItem>("DataLayer.FK_AccountPayrollItem", "PayrollItem", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataLayer", "FK_AccountPayrollItem1", "PayrollItem")]
        public EntityCollection<PayrollItem> DebitPayrollItems
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PayrollItem>("DataLayer.FK_AccountPayrollItem1", "PayrollItem");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PayrollItem>("DataLayer.FK_AccountPayrollItem1", "PayrollItem", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataLayer", "FK_Accounts_AccountTypes", "AccountType")]
        public AccountType AccountType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AccountType>("DataLayer.FK_Accounts_AccountTypes", "AccountType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AccountType>("DataLayer.FK_Accounts_AccountTypes", "AccountType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AccountType> AccountTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AccountType>("DataLayer.FK_Accounts_AccountTypes", "AccountType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<AccountType>("DataLayer.FK_Accounts_AccountTypes", "AccountType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataLayer", "FK_EmployeeAccount_inherits_Account", "Accounts_EmployeeAccount")]
        public EmployeeAccount EmployeeAccounts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EmployeeAccount>("DataLayer.FK_EmployeeAccount_inherits_Account", "Accounts_EmployeeAccount").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EmployeeAccount>("DataLayer.FK_EmployeeAccount_inherits_Account", "Accounts_EmployeeAccount").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<EmployeeAccount> EmployeeAccountsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EmployeeAccount>("DataLayer.FK_EmployeeAccount_inherits_Account", "Accounts_EmployeeAccount");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<EmployeeAccount>("DataLayer.FK_EmployeeAccount_inherits_Account", "Accounts_EmployeeAccount", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataLayer", "InstitutionAccount", "Institution")]
        public Institution Institution
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Institution>("DataLayer.InstitutionAccount", "Institution").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Institution>("DataLayer.InstitutionAccount", "Institution").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Institution> InstitutionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Institution>("DataLayer.InstitutionAccount", "Institution");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Institution>("DataLayer.InstitutionAccount", "Institution", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DataLayer", Name="AccountEntry")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AccountEntry : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AccountEntry object.
        /// </summary>
        /// <param name="accountEntryId">Initial value of the AccountEntryId property.</param>
        /// <param name="entryTime">Initial value of the EntryTime property.</param>
        /// <param name="tradeDate">Initial value of the TradeDate property.</param>
        /// <param name="accountId">Initial value of the AccountId property.</param>
        /// <param name="debitAmount">Initial value of the DebitAmount property.</param>
        /// <param name="creditAmount">Initial value of the CreditAmount property.</param>
        /// <param name="payrollItemId">Initial value of the PayrollItemId property.</param>
        public static AccountEntry CreateAccountEntry(global::System.Int32 accountEntryId, global::System.DateTime entryTime, global::System.DateTime tradeDate, global::System.Int32 accountId, global::System.Double debitAmount, global::System.Double creditAmount, global::System.Int32 payrollItemId)
        {
            AccountEntry accountEntry = new AccountEntry();
            accountEntry.AccountEntryId = accountEntryId;
            accountEntry.EntryTime = entryTime;
            accountEntry.TradeDate = tradeDate;
            accountEntry.AccountId = accountId;
            accountEntry.DebitAmount = debitAmount;
            accountEntry.CreditAmount = creditAmount;
            accountEntry.PayrollItemId = payrollItemId;
            return accountEntry;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AccountEntryId
        {
            get
            {
                return _AccountEntryId;
            }
            set
            {
                if (_AccountEntryId != value)
                {
                    OnAccountEntryIdChanging(value);
                    ReportPropertyChanging("AccountEntryId");
                    _AccountEntryId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AccountEntryId");
                    OnAccountEntryIdChanged();
                }
            }
        }
        private global::System.Int32 _AccountEntryId;
        partial void OnAccountEntryIdChanging(global::System.Int32 value);
        partial void OnAccountEntryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime EntryTime
        {
            get
            {
                return _EntryTime;
            }
            set
            {
                OnEntryTimeChanging(value);
                ReportPropertyChanging("EntryTime");
                _EntryTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EntryTime");
                OnEntryTimeChanged();
            }
        }
        private global::System.DateTime _EntryTime;
        partial void OnEntryTimeChanging(global::System.DateTime value);
        partial void OnEntryTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime TradeDate
        {
            get
            {
                return _TradeDate;
            }
            set
            {
                OnTradeDateChanging(value);
                ReportPropertyChanging("TradeDate");
                _TradeDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TradeDate");
                OnTradeDateChanged();
            }
        }
        private global::System.DateTime _TradeDate;
        partial void OnTradeDateChanging(global::System.DateTime value);
        partial void OnTradeDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AccountId
        {
            get
            {
                return _AccountId;
            }
            set
            {
                OnAccountIdChanging(value);
                ReportPropertyChanging("AccountId");
                _AccountId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AccountId");
                OnAccountIdChanged();
            }
        }
        private global::System.Int32 _AccountId;
        partial void OnAccountIdChanging(global::System.Int32 value);
        partial void OnAccountIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double DebitAmount
        {
            get
            {
                return _DebitAmount;
            }
            set
            {
                OnDebitAmountChanging(value);
                ReportPropertyChanging("DebitAmount");
                _DebitAmount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DebitAmount");
                OnDebitAmountChanged();
            }
        }
        private global::System.Double _DebitAmount;
        partial void OnDebitAmountChanging(global::System.Double value);
        partial void OnDebitAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double CreditAmount
        {
            get
            {
                return _CreditAmount;
            }
            set
            {
                OnCreditAmountChanging(value);
                ReportPropertyChanging("CreditAmount");
                _CreditAmount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreditAmount");
                OnCreditAmountChanged();
            }
        }
        private global::System.Double _CreditAmount;
        partial void OnCreditAmountChanging(global::System.Double value);
        partial void OnCreditAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Memo
        {
            get
            {
                return _Memo;
            }
            set
            {
                OnMemoChanging(value);
                ReportPropertyChanging("Memo");
                _Memo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Memo");
                OnMemoChanged();
            }
        }
        private global::System.String _Memo;
        partial void OnMemoChanging(global::System.String value);
        partial void OnMemoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PayrollItemId
        {
            get
            {
                return _PayrollItemId;
            }
            set
            {
                OnPayrollItemIdChanging(value);
                ReportPropertyChanging("PayrollItemId");
                _PayrollItemId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PayrollItemId");
                OnPayrollItemIdChanged();
            }
        }
        private global::System.Int32 _PayrollItemId;
        partial void OnPayrollItemIdChanging(global::System.Int32 value);
        partial void OnPayrollItemIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataLayer", "FK_AccountAccountEntry", "Account")]
        public Account Account
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Account>("DataLayer.FK_AccountAccountEntry", "Account").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Account>("DataLayer.FK_AccountAccountEntry", "Account").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Account> AccountReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Account>("DataLayer.FK_AccountAccountEntry", "Account");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Account>("DataLayer.FK_AccountAccountEntry", "Account", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataLayer", "FK_PayrollItemAccountEntry", "PayrollItem")]
        public PayrollItem PayrollItem
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PayrollItem>("DataLayer.FK_PayrollItemAccountEntry", "PayrollItem").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PayrollItem>("DataLayer.FK_PayrollItemAccountEntry", "PayrollItem").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PayrollItem> PayrollItemReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PayrollItem>("DataLayer.FK_PayrollItemAccountEntry", "PayrollItem");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PayrollItem>("DataLayer.FK_PayrollItemAccountEntry", "PayrollItem", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DataLayer", Name="AccountType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AccountType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AccountType object.
        /// </summary>
        /// <param name="accountTypeId">Initial value of the AccountTypeId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static AccountType CreateAccountType(global::System.Int32 accountTypeId, global::System.String name)
        {
            AccountType accountType = new AccountType();
            accountType.AccountTypeId = accountTypeId;
            accountType.Name = name;
            return accountType;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AccountTypeId
        {
            get
            {
                return _AccountTypeId;
            }
            set
            {
                if (_AccountTypeId != value)
                {
                    OnAccountTypeIdChanging(value);
                    ReportPropertyChanging("AccountTypeId");
                    _AccountTypeId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AccountTypeId");
                    OnAccountTypeIdChanged();
                }
            }
        }
        private global::System.Int32 _AccountTypeId;
        partial void OnAccountTypeIdChanging(global::System.Int32 value);
        partial void OnAccountTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataLayer", "FK_Accounts_AccountTypes", "Account")]
        public EntityCollection<Account> Accounts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Account>("DataLayer.FK_Accounts_AccountTypes", "Account");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Account>("DataLayer.FK_Accounts_AccountTypes", "Account", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DataLayer", Name="ChargeType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ChargeType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ChargeType object.
        /// </summary>
        /// <param name="chargeTypeId">Initial value of the ChargeTypeId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static ChargeType CreateChargeType(global::System.Int32 chargeTypeId, global::System.String name)
        {
            ChargeType chargeType = new ChargeType();
            chargeType.ChargeTypeId = chargeTypeId;
            chargeType.Name = name;
            return chargeType;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ChargeTypeId
        {
            get
            {
                return _ChargeTypeId;
            }
            set
            {
                if (_ChargeTypeId != value)
                {
                    OnChargeTypeIdChanging(value);
                    ReportPropertyChanging("ChargeTypeId");
                    _ChargeTypeId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ChargeTypeId");
                    OnChargeTypeIdChanged();
                }
            }
        }
        private global::System.Int32 _ChargeTypeId;
        partial void OnChargeTypeIdChanging(global::System.Int32 value);
        partial void OnChargeTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataLayer", "FK_PayrollEmployeeSetup_ChargeTypes", "PayrollEmployeeSetup")]
        public EntityCollection<PayrollEmployeeSetup> PayrollEmployeeSetups
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PayrollEmployeeSetup>("DataLayer.FK_PayrollEmployeeSetup_ChargeTypes", "PayrollEmployeeSetup");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PayrollEmployeeSetup>("DataLayer.FK_PayrollEmployeeSetup_ChargeTypes", "PayrollEmployeeSetup", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DataLayer", Name="Company")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Company : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Company object.
        /// </summary>
        /// <param name="institutionId">Initial value of the InstitutionId property.</param>
        public static Company CreateCompany(global::System.Int32 institutionId)
        {
            Company company = new Company();
            company.InstitutionId = institutionId;
            return company;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 InstitutionId
        {
            get
            {
                return _InstitutionId;
            }
            set
            {
                if (_InstitutionId != value)
                {
                    OnInstitutionIdChanging(value);
                    ReportPropertyChanging("InstitutionId");
                    _InstitutionId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("InstitutionId");
                    OnInstitutionIdChanged();
                }
            }
        }
        private global::System.Int32 _InstitutionId;
        partial void OnInstitutionIdChanging(global::System.Int32 value);
        partial void OnInstitutionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CurrentPayrollJobId
        {
            get
            {
                return _CurrentPayrollJobId;
            }
            set
            {
                OnCurrentPayrollJobIdChanging(value);
                ReportPropertyChanging("CurrentPayrollJobId");
                _CurrentPayrollJobId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CurrentPayrollJobId");
                OnCurrentPayrollJobIdChanged();
            }
        }
        private Nullable<global::System.Int32> _CurrentPayrollJobId;
        partial void OnCurrentPayrollJobIdChanging(Nullable<global::System.Int32> value);
        partial void OnCurrentPayrollJobIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataLayer", "FK_BranchEmployee", "Employee")]
        public EntityCollection<Employee> Employees
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Employee>("DataLayer.FK_BranchEmployee", "Employee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Employee>("DataLayer.FK_BranchEmployee", "Employee", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataLayer", "FK_Companies_Institutions", "Institution")]
        public Institution Institution
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Institution>("DataLayer.FK_Companies_Institutions", "Institution").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Institution>("DataLayer.FK_Companies_Institutions", "Institution").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Institution> InstitutionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Institution>("DataLayer.FK_Companies_Institutions", "Institution");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Institution>("DataLayer.FK_Companies_Institutions", "Institution", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataLayer", "FK_EmailTemplate_Companies", "EmailTemplate")]
        public EntityCollection<EmailTemplate> EmailTemplates
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EmailTemplate>("DataLayer.FK_EmailTemplate_Companies", "EmailTemplate");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EmailTemplate>("DataLayer.FK_EmailTemplate_Companies", "EmailTemplate", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataLayer", "FK_Companies_PayrollJobs", "PayrollJob")]
        public PayrollJob CurrentPayrollJob
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PayrollJob>("DataLayer.FK_Companies_PayrollJobs", "PayrollJob").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PayrollJob>("DataLayer.FK_Companies_PayrollJobs", "PayrollJob").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PayrollJob> CurrentPayrollJobReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PayrollJob>("DataLayer.FK_Companies_PayrollJobs", "PayrollJob");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PayrollJob>("DataLayer.FK_Companies_PayrollJobs", "PayrollJob", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataLayer", "CompanyPayrollJob", "PayrollJob")]
        public EntityCollection<PayrollJob> PayrollJobs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PayrollJob>("DataLayer.CompanyPayrollJob", "PayrollJob");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PayrollJob>("DataLayer.CompanyPayrollJob", "PayrollJob", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DataLayer", Name="EmailTemplate")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EmailTemplate : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EmailTemplate object.
        /// </summary>
        /// <param name="emailTemplateId">Initial value of the EmailTemplateId property.</param>
        /// <param name="fromEmailAddress">Initial value of the FromEmailAddress property.</param>
        /// <param name="emailBody">Initial value of the EmailBody property.</param>
        /// <param name="toEmailAddress">Initial value of the ToEmailAddress property.</param>
        /// <param name="key">Initial value of the Key property.</param>
        /// <param name="subject">Initial value of the Subject property.</param>
        /// <param name="companyId">Initial value of the CompanyId property.</param>
        public static EmailTemplate CreateEmailTemplate(global::System.Int32 emailTemplateId, global::System.String fromEmailAddress, global::System.String emailBody, global::System.String toEmailAddress, global::System.String key, global::System.String subject, global::System.Int32 companyId)
        {
            EmailTemplate emailTemplate = new EmailTemplate();
            emailTemplate.EmailTemplateId = emailTemplateId;
            emailTemplate.FromEmailAddress = fromEmailAddress;
            emailTemplate.EmailBody = emailBody;
            emailTemplate.ToEmailAddress = toEmailAddress;
            emailTemplate.Key = key;
            emailTemplate.Subject = subject;
            emailTemplate.CompanyId = companyId;
            return emailTemplate;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EmailTemplateId
        {
            get
            {
                return _EmailTemplateId;
            }
            set
            {
                if (_EmailTemplateId != value)
                {
                    OnEmailTemplateIdChanging(value);
                    ReportPropertyChanging("EmailTemplateId");
                    _EmailTemplateId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("EmailTemplateId");
                    OnEmailTemplateIdChanged();
                }
            }
        }
        private global::System.Int32 _EmailTemplateId;
        partial void OnEmailTemplateIdChanging(global::System.Int32 value);
        partial void OnEmailTemplateIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FromEmailAddress
        {
            get
            {
                return _FromEmailAddress;
            }
            set
            {
                OnFromEmailAddressChanging(value);
                ReportPropertyChanging("FromEmailAddress");
                _FromEmailAddress = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FromEmailAddress");
                OnFromEmailAddressChanged();
            }
        }
        private global::System.String _FromEmailAddress;
        partial void OnFromEmailAddressChanging(global::System.String value);
        partial void OnFromEmailAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String EmailBody
        {
            get
            {
                return _EmailBody;
            }
            set
            {
                OnEmailBodyChanging(value);
                ReportPropertyChanging("EmailBody");
                _EmailBody = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("EmailBody");
                OnEmailBodyChanged();
            }
        }
        private global::System.String _EmailBody;
        partial void OnEmailBodyChanging(global::System.String value);
        partial void OnEmailBodyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ToEmailAddress
        {
            get
            {
                return _ToEmailAddress;
            }
            set
            {
                OnToEmailAddressChanging(value);
                ReportPropertyChanging("ToEmailAddress");
                _ToEmailAddress = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ToEmailAddress");
                OnToEmailAddressChanged();
            }
        }
        private global::System.String _ToEmailAddress;
        partial void OnToEmailAddressChanging(global::System.String value);
        partial void OnToEmailAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Key
        {
            get
            {
                return _Key;
            }
            set
            {
                OnKeyChanging(value);
                ReportPropertyChanging("Key");
                _Key = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Key");
                OnKeyChanged();
            }
        }
        private global::System.String _Key;
        partial void OnKeyChanging(global::System.String value);
        partial void OnKeyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Subject
        {
            get
            {
                return _Subject;
            }
            set
            {
                OnSubjectChanging(value);
                ReportPropertyChanging("Subject");
                _Subject = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Subject");
                OnSubjectChanged();
            }
        }
        private global::System.String _Subject;
        partial void OnSubjectChanging(global::System.String value);
        partial void OnSubjectChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CompanyId
        {
            get
            {
                return _CompanyId;
            }
            set
            {
                OnCompanyIdChanging(value);
                ReportPropertyChanging("CompanyId");
                _CompanyId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CompanyId");
                OnCompanyIdChanged();
            }
        }
        private global::System.Int32 _CompanyId;
        partial void OnCompanyIdChanging(global::System.Int32 value);
        partial void OnCompanyIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataLayer", "FK_EmailTemplate_Companies", "Company")]
        public Company Company
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("DataLayer.FK_EmailTemplate_Companies", "Company").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("DataLayer.FK_EmailTemplate_Companies", "Company").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Company> CompanyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("DataLayer.FK_EmailTemplate_Companies", "Company");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Company>("DataLayer.FK_EmailTemplate_Companies", "Company", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DataLayer", Name="Employee")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [KnownTypeAttribute(typeof(User))]
    public partial class Employee : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Employee object.
        /// </summary>
        /// <param name="employeeId">Initial value of the EmployeeId property.</param>
        /// <param name="firstName">Initial value of the FirstName property.</param>
        /// <param name="lastName">Initial value of the LastName property.</param>
        /// <param name="employmentStartDate">Initial value of the EmploymentStartDate property.</param>
        public static Employee CreateEmployee(global::System.Int32 employeeId, global::System.String firstName, global::System.String lastName, global::System.DateTime employmentStartDate)
        {
            Employee employee = new Employee();
            employee.EmployeeId = employeeId;
            employee.FirstName = firstName;
            employee.LastName = lastName;
            employee.EmploymentStartDate = employmentStartDate;
            return employee;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EmployeeId
        {
            get
            {
                return _EmployeeId;
            }
            set
            {
                if (_EmployeeId != value)
                {
                    OnEmployeeIdChanging(value);
                    ReportPropertyChanging("EmployeeId");
                    _EmployeeId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("EmployeeId");
                    OnEmployeeIdChanged();
                }
            }
        }
        private global::System.Int32 _EmployeeId;
        partial void OnEmployeeIdChanging(global::System.Int32 value);
        partial void OnEmployeeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                OnLastNameChanging(value);
                ReportPropertyChanging("LastName");
                _LastName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LastName");
                OnLastNameChanged();
            }
        }
        private global::System.String _LastName;
        partial void OnLastNameChanging(global::System.String value);
        partial void OnLastNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MiddleName
        {
            get
            {
                return _MiddleName;
            }
            set
            {
                OnMiddleNameChanging(value);
                ReportPropertyChanging("MiddleName");
                _MiddleName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MiddleName");
                OnMiddleNameChanged();
            }
        }
        private global::System.String _MiddleName;
        partial void OnMiddleNameChanging(global::System.String value);
        partial void OnMiddleNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CompanyId
        {
            get
            {
                return _CompanyId;
            }
            set
            {
                OnCompanyIdChanging(value);
                ReportPropertyChanging("CompanyId");
                _CompanyId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CompanyId");
                OnCompanyIdChanged();
            }
        }
        private Nullable<global::System.Int32> _CompanyId;
        partial void OnCompanyIdChanging(Nullable<global::System.Int32> value);
        partial void OnCompanyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SupervisorId
        {
            get
            {
                return _SupervisorId;
            }
            set
            {
                OnSupervisorIdChanging(value);
                ReportPropertyChanging("SupervisorId");
                _SupervisorId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SupervisorId");
                OnSupervisorIdChanged();
            }
        }
        private Nullable<global::System.Int32> _SupervisorId;
        partial void OnSupervisorIdChanging(Nullable<global::System.Int32> value);
        partial void OnSupervisorIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime EmploymentStartDate
        {
            get
            {
                return _EmploymentStartDate;
            }
            set
            {
                OnEmploymentStartDateChanging(value);
                ReportPropertyChanging("EmploymentStartDate");
                _EmploymentStartDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EmploymentStartDate");
                OnEmploymentStartDateChanged();
            }
        }
        private global::System.DateTime _EmploymentStartDate;
        partial void OnEmploymentStartDateChanging(global::System.DateTime value);
        partial void OnEmploymentStartDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> UnionMember
        {
            get
            {
                return _UnionMember;
            }
            set
            {
                OnUnionMemberChanging(value);
                ReportPropertyChanging("UnionMember");
                _UnionMember = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UnionMember");
                OnUnionMemberChanged();
            }
        }
        private Nullable<global::System.Boolean> _UnionMember;
        partial void OnUnionMemberChanging(Nullable<global::System.Boolean> value);
        partial void OnUnionMemberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> EntryDateTime
        {
            get
            {
                return _EntryDateTime;
            }
            set
            {
                OnEntryDateTimeChanging(value);
                ReportPropertyChanging("EntryDateTime");
                _EntryDateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EntryDateTime");
                OnEntryDateTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _EntryDateTime;
        partial void OnEntryDateTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnEntryDateTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String EmailAddress
        {
            get
            {
                return _EmailAddress;
            }
            set
            {
                OnEmailAddressChanging(value);
                ReportPropertyChanging("EmailAddress");
                _EmailAddress = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("EmailAddress");
                OnEmailAddressChanged();
            }
        }
        private global::System.String _EmailAddress;
        partial void OnEmailAddressChanging(global::System.String value);
        partial void OnEmailAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DriversLicence
        {
            get
            {
                return _DriversLicence;
            }
            set
            {
                OnDriversLicenceChanging(value);
                ReportPropertyChanging("DriversLicence");
                _DriversLicence = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DriversLicence");
                OnDriversLicenceChanged();
            }
        }
        private global::System.String _DriversLicence;
        partial void OnDriversLicenceChanging(global::System.String value);
        partial void OnDriversLicenceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DriversLicenceClass
        {
            get
            {
                return _DriversLicenceClass;
            }
            set
            {
                OnDriversLicenceClassChanging(value);
                ReportPropertyChanging("DriversLicenceClass");
                _DriversLicenceClass = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DriversLicenceClass");
                OnDriversLicenceClassChanged();
            }
        }
        private global::System.String _DriversLicenceClass;
        partial void OnDriversLicenceClassChanging(global::System.String value);
        partial void OnDriversLicenceClassChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SexId
        {
            get
            {
                return _SexId;
            }
            set
            {
                OnSexIdChanging(value);
                ReportPropertyChanging("SexId");
                _SexId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SexId");
                OnSexIdChanged();
            }
        }
        private Nullable<global::System.Int32> _SexId;
        partial void OnSexIdChanging(Nullable<global::System.Int32> value);
        partial void OnSexIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> EmploymentEndDate
        {
            get
            {
                return _EmploymentEndDate;
            }
            set
            {
                OnEmploymentEndDateChanging(value);
                ReportPropertyChanging("EmploymentEndDate");
                _EmploymentEndDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EmploymentEndDate");
                OnEmploymentEndDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _EmploymentEndDate;
        partial void OnEmploymentEndDateChanging(Nullable<global::System.DateTime> value);
        partial void OnEmploymentEndDateChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataLayer", "FK_EmployeeEmployeeAccount", "Accounts_EmployeeAccount")]
        public EntityCollection<EmployeeAccount> EmployeeAccounts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EmployeeAccount>("DataLayer.FK_EmployeeEmployeeAccount", "Accounts_EmployeeAccount");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EmployeeAccount>("DataLayer.FK_EmployeeEmployeeAccount", "Accounts_EmployeeAccount", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataLayer", "FK_BranchEmployee", "Company")]
        public Company Company
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("DataLayer.FK_BranchEmployee", "Company").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("DataLayer.FK_BranchEmployee", "Company").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Company> CompanyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("DataLayer.FK_BranchEmployee", "Company");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Company>("DataLayer.FK_BranchEmployee", "Company", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataLayer", "FK_EmployeeEmployee", "Employee1")]
        public EntityCollection<Employee> Employees
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Employee>("DataLayer.FK_EmployeeEmployee", "Employee1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Employee>("DataLayer.FK_EmployeeEmployee", "Employee1", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataLayer", "FK_EmployeeEmployee", "Employee")]
        public Employee Supervisor
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("DataLayer.FK_EmployeeEmployee", "Employee").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("DataLayer.FK_EmployeeEmployee", "Employee").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Employee> SupervisorReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("DataLayer.FK_EmployeeEmployee", "Employee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Employee>("DataLayer.FK_EmployeeEmployee", "Employee", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataLayer", "FK_EmployeePayrollEmployeeSetup", "PayrollEmployeeSetup")]
        public EntityCollection<PayrollEmployeeSetup> PayrollEmployeeSetups
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PayrollEmployeeSetup>("DataLayer.FK_EmployeePayrollEmployeeSetup", "PayrollEmployeeSetup");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PayrollEmployeeSetup>("DataLayer.FK_EmployeePayrollEmployeeSetup", "PayrollEmployeeSetup", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataLayer", "FK_EmployeePayrollItem", "PayrollItem")]
        public EntityCollection<PayrollItem> PayrollItems
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PayrollItem>("DataLayer.FK_EmployeePayrollItem", "PayrollItem");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PayrollItem>("DataLayer.FK_EmployeePayrollItem", "PayrollItem", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DataLayer", Name="EmployeeAccount")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EmployeeAccount : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EmployeeAccount object.
        /// </summary>
        /// <param name="employeeId">Initial value of the EmployeeId property.</param>
        /// <param name="accountId">Initial value of the AccountId property.</param>
        public static EmployeeAccount CreateEmployeeAccount(global::System.Int32 employeeId, global::System.Int32 accountId)
        {
            EmployeeAccount employeeAccount = new EmployeeAccount();
            employeeAccount.EmployeeId = employeeId;
            employeeAccount.AccountId = accountId;
            return employeeAccount;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> SalaryAssignment
        {
            get
            {
                return _SalaryAssignment;
            }
            set
            {
                OnSalaryAssignmentChanging(value);
                ReportPropertyChanging("SalaryAssignment");
                _SalaryAssignment = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SalaryAssignment");
                OnSalaryAssignmentChanged();
            }
        }
        private Nullable<global::System.Double> _SalaryAssignment;
        partial void OnSalaryAssignmentChanging(Nullable<global::System.Double> value);
        partial void OnSalaryAssignmentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EmployeeId
        {
            get
            {
                return _EmployeeId;
            }
            set
            {
                OnEmployeeIdChanging(value);
                ReportPropertyChanging("EmployeeId");
                _EmployeeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EmployeeId");
                OnEmployeeIdChanged();
            }
        }
        private global::System.Int32 _EmployeeId;
        partial void OnEmployeeIdChanging(global::System.Int32 value);
        partial void OnEmployeeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AccountId
        {
            get
            {
                return _AccountId;
            }
            set
            {
                if (_AccountId != value)
                {
                    OnAccountIdChanging(value);
                    ReportPropertyChanging("AccountId");
                    _AccountId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AccountId");
                    OnAccountIdChanged();
                }
            }
        }
        private global::System.Int32 _AccountId;
        partial void OnAccountIdChanging(global::System.Int32 value);
        partial void OnAccountIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataLayer", "FK_EmployeeAccount_inherits_Account", "Account")]
        public Account Account
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Account>("DataLayer.FK_EmployeeAccount_inherits_Account", "Account").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Account>("DataLayer.FK_EmployeeAccount_inherits_Account", "Account").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Account> AccountReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Account>("DataLayer.FK_EmployeeAccount_inherits_Account", "Account");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Account>("DataLayer.FK_EmployeeAccount_inherits_Account", "Account", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataLayer", "FK_EmployeeEmployeeAccount", "Employee")]
        public Employee Employee
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("DataLayer.FK_EmployeeEmployeeAccount", "Employee").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("DataLayer.FK_EmployeeEmployeeAccount", "Employee").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Employee> EmployeeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("DataLayer.FK_EmployeeEmployeeAccount", "Employee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Employee>("DataLayer.FK_EmployeeEmployeeAccount", "Employee", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DataLayer", Name="Institution")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Institution : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Institution object.
        /// </summary>
        /// <param name="institutionId">Initial value of the InstitutionId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="startDate">Initial value of the StartDate property.</param>
        public static Institution CreateInstitution(global::System.Int32 institutionId, global::System.String name, global::System.DateTime startDate)
        {
            Institution institution = new Institution();
            institution.InstitutionId = institutionId;
            institution.Name = name;
            institution.StartDate = startDate;
            return institution;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 InstitutionId
        {
            get
            {
                return _InstitutionId;
            }
            set
            {
                if (_InstitutionId != value)
                {
                    OnInstitutionIdChanging(value);
                    ReportPropertyChanging("InstitutionId");
                    _InstitutionId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("InstitutionId");
                    OnInstitutionIdChanged();
                }
            }
        }
        private global::System.Int32 _InstitutionId;
        partial void OnInstitutionIdChanging(global::System.Int32 value);
        partial void OnInstitutionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Address
        {
            get
            {
                return _Address;
            }
            set
            {
                OnAddressChanging(value);
                ReportPropertyChanging("Address");
                _Address = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Address");
                OnAddressChanged();
            }
        }
        private global::System.String _Address;
        partial void OnAddressChanging(global::System.String value);
        partial void OnAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PhoneNumber
        {
            get
            {
                return _PhoneNumber;
            }
            set
            {
                OnPhoneNumberChanging(value);
                ReportPropertyChanging("PhoneNumber");
                _PhoneNumber = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PhoneNumber");
                OnPhoneNumberChanged();
            }
        }
        private global::System.String _PhoneNumber;
        partial void OnPhoneNumberChanging(global::System.String value);
        partial void OnPhoneNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ShortName
        {
            get
            {
                return _ShortName;
            }
            set
            {
                OnShortNameChanging(value);
                ReportPropertyChanging("ShortName");
                _ShortName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ShortName");
                OnShortNameChanged();
            }
        }
        private global::System.String _ShortName;
        partial void OnShortNameChanging(global::System.String value);
        partial void OnShortNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Priority
        {
            get
            {
                return _Priority;
            }
            set
            {
                OnPriorityChanging(value);
                ReportPropertyChanging("Priority");
                _Priority = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Priority");
                OnPriorityChanged();
            }
        }
        private Nullable<global::System.Int32> _Priority;
        partial void OnPriorityChanging(Nullable<global::System.Int32> value);
        partial void OnPriorityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime StartDate
        {
            get
            {
                return _StartDate;
            }
            set
            {
                OnStartDateChanging(value);
                ReportPropertyChanging("StartDate");
                _StartDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StartDate");
                OnStartDateChanged();
            }
        }
        private global::System.DateTime _StartDate;
        partial void OnStartDateChanging(global::System.DateTime value);
        partial void OnStartDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> EndDate
        {
            get
            {
                return _EndDate;
            }
            set
            {
                OnEndDateChanging(value);
                ReportPropertyChanging("EndDate");
                _EndDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EndDate");
                OnEndDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _EndDate;
        partial void OnEndDateChanging(Nullable<global::System.DateTime> value);
        partial void OnEndDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String EmailAddress
        {
            get
            {
                return _EmailAddress;
            }
            set
            {
                OnEmailAddressChanging(value);
                ReportPropertyChanging("EmailAddress");
                _EmailAddress = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("EmailAddress");
                OnEmailAddressChanged();
            }
        }
        private global::System.String _EmailAddress;
        partial void OnEmailAddressChanging(global::System.String value);
        partial void OnEmailAddressChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataLayer", "FK_Companies_Institutions", "Company")]
        public Company Company
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("DataLayer.FK_Companies_Institutions", "Company").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("DataLayer.FK_Companies_Institutions", "Company").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Company> CompanyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("DataLayer.FK_Companies_Institutions", "Company");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Company>("DataLayer.FK_Companies_Institutions", "Company", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataLayer", "InstitutionInstitutionAccounts", "InstitutionAccounts")]
        public EntityCollection<InstitutionAccounts> PayeeAccounts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<InstitutionAccounts>("DataLayer.InstitutionInstitutionAccounts", "InstitutionAccounts");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<InstitutionAccounts>("DataLayer.InstitutionInstitutionAccounts", "InstitutionAccounts", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataLayer", "InstitutionAccount", "Account")]
        public EntityCollection<Account> Accounts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Account>("DataLayer.InstitutionAccount", "Account");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Account>("DataLayer.InstitutionAccount", "Account", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DataLayer", Name="InstitutionAccounts")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class InstitutionAccounts : Account
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new InstitutionAccounts object.
        /// </summary>
        /// <param name="accountId">Initial value of the AccountId property.</param>
        /// <param name="accountNumber">Initial value of the AccountNumber property.</param>
        /// <param name="institutionId">Initial value of the InstitutionId property.</param>
        /// <param name="accountName">Initial value of the AccountName property.</param>
        /// <param name="accountTypeId">Initial value of the AccountTypeId property.</param>
        /// <param name="payeeInstitutionId">Initial value of the PayeeInstitutionId property.</param>
        public static InstitutionAccounts CreateInstitutionAccounts(global::System.Int32 accountId, global::System.String accountNumber, global::System.Int32 institutionId, global::System.String accountName, global::System.Int32 accountTypeId, global::System.Int32 payeeInstitutionId)
        {
            InstitutionAccounts institutionAccounts = new InstitutionAccounts();
            institutionAccounts.AccountId = accountId;
            institutionAccounts.AccountNumber = accountNumber;
            institutionAccounts.InstitutionId = institutionId;
            institutionAccounts.AccountName = accountName;
            institutionAccounts.AccountTypeId = accountTypeId;
            institutionAccounts.PayeeInstitutionId = payeeInstitutionId;
            return institutionAccounts;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PayeeInstitutionId
        {
            get
            {
                return _PayeeInstitutionId;
            }
            set
            {
                OnPayeeInstitutionIdChanging(value);
                ReportPropertyChanging("PayeeInstitutionId");
                _PayeeInstitutionId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PayeeInstitutionId");
                OnPayeeInstitutionIdChanged();
            }
        }
        private global::System.Int32 _PayeeInstitutionId;
        partial void OnPayeeInstitutionIdChanging(global::System.Int32 value);
        partial void OnPayeeInstitutionIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataLayer", "InstitutionInstitutionAccounts", "Institution")]
        public Institution PayeeInstitution
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Institution>("DataLayer.InstitutionInstitutionAccounts", "Institution").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Institution>("DataLayer.InstitutionInstitutionAccounts", "Institution").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Institution> PayeeInstitutionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Institution>("DataLayer.InstitutionInstitutionAccounts", "Institution");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Institution>("DataLayer.InstitutionInstitutionAccounts", "Institution", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DataLayer", Name="PayrollEmployeeSetup")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PayrollEmployeeSetup : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PayrollEmployeeSetup object.
        /// </summary>
        /// <param name="payrollEmployeeSetupId">Initial value of the PayrollEmployeeSetupId property.</param>
        /// <param name="payrollSetupItemId">Initial value of the PayrollSetupItemId property.</param>
        /// <param name="employeeId">Initial value of the EmployeeId property.</param>
        /// <param name="chargeTypeId">Initial value of the ChargeTypeId property.</param>
        /// <param name="payrollJobTypeId">Initial value of the PayrollJobTypeId property.</param>
        /// <param name="creditAccountId">Initial value of the CreditAccountId property.</param>
        /// <param name="debitAccountId">Initial value of the DebitAccountId property.</param>
        public static PayrollEmployeeSetup CreatePayrollEmployeeSetup(global::System.Int32 payrollEmployeeSetupId, global::System.Int32 payrollSetupItemId, global::System.Int32 employeeId, global::System.Int32 chargeTypeId, global::System.Int32 payrollJobTypeId, global::System.Int32 creditAccountId, global::System.Int32 debitAccountId)
        {
            PayrollEmployeeSetup payrollEmployeeSetup = new PayrollEmployeeSetup();
            payrollEmployeeSetup.PayrollEmployeeSetupId = payrollEmployeeSetupId;
            payrollEmployeeSetup.PayrollSetupItemId = payrollSetupItemId;
            payrollEmployeeSetup.EmployeeId = employeeId;
            payrollEmployeeSetup.ChargeTypeId = chargeTypeId;
            payrollEmployeeSetup.PayrollJobTypeId = payrollJobTypeId;
            payrollEmployeeSetup.CreditAccountId = creditAccountId;
            payrollEmployeeSetup.DebitAccountId = debitAccountId;
            return payrollEmployeeSetup;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PayrollEmployeeSetupId
        {
            get
            {
                return _PayrollEmployeeSetupId;
            }
            set
            {
                if (_PayrollEmployeeSetupId != value)
                {
                    OnPayrollEmployeeSetupIdChanging(value);
                    ReportPropertyChanging("PayrollEmployeeSetupId");
                    _PayrollEmployeeSetupId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PayrollEmployeeSetupId");
                    OnPayrollEmployeeSetupIdChanged();
                }
            }
        }
        private global::System.Int32 _PayrollEmployeeSetupId;
        partial void OnPayrollEmployeeSetupIdChanging(global::System.Int32 value);
        partial void OnPayrollEmployeeSetupIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PayrollSetupItemId
        {
            get
            {
                return _PayrollSetupItemId;
            }
            set
            {
                OnPayrollSetupItemIdChanging(value);
                ReportPropertyChanging("PayrollSetupItemId");
                _PayrollSetupItemId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PayrollSetupItemId");
                OnPayrollSetupItemIdChanged();
            }
        }
        private global::System.Int32 _PayrollSetupItemId;
        partial void OnPayrollSetupItemIdChanging(global::System.Int32 value);
        partial void OnPayrollSetupItemIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EmployeeId
        {
            get
            {
                return _EmployeeId;
            }
            set
            {
                OnEmployeeIdChanging(value);
                ReportPropertyChanging("EmployeeId");
                _EmployeeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EmployeeId");
                OnEmployeeIdChanged();
            }
        }
        private global::System.Int32 _EmployeeId;
        partial void OnEmployeeIdChanging(global::System.Int32 value);
        partial void OnEmployeeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> EndDate
        {
            get
            {
                return _EndDate;
            }
            set
            {
                OnEndDateChanging(value);
                ReportPropertyChanging("EndDate");
                _EndDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EndDate");
                OnEndDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _EndDate;
        partial void OnEndDateChanging(Nullable<global::System.DateTime> value);
        partial void OnEndDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> StartDate
        {
            get
            {
                return _StartDate;
            }
            set
            {
                OnStartDateChanging(value);
                ReportPropertyChanging("StartDate");
                _StartDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StartDate");
                OnStartDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _StartDate;
        partial void OnStartDateChanging(Nullable<global::System.DateTime> value);
        partial void OnStartDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> Amount
        {
            get
            {
                return _Amount;
            }
            set
            {
                OnAmountChanging(value);
                ReportPropertyChanging("Amount");
                _Amount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Amount");
                OnAmountChanged();
            }
        }
        private Nullable<global::System.Double> _Amount;
        partial void OnAmountChanging(Nullable<global::System.Double> value);
        partial void OnAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> BaseAmount
        {
            get
            {
                return _BaseAmount;
            }
            set
            {
                OnBaseAmountChanging(value);
                ReportPropertyChanging("BaseAmount");
                _BaseAmount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BaseAmount");
                OnBaseAmountChanged();
            }
        }
        private Nullable<global::System.Double> _BaseAmount;
        partial void OnBaseAmountChanging(Nullable<global::System.Double> value);
        partial void OnBaseAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> CompanyAmount
        {
            get
            {
                return _CompanyAmount;
            }
            set
            {
                OnCompanyAmountChanging(value);
                ReportPropertyChanging("CompanyAmount");
                _CompanyAmount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CompanyAmount");
                OnCompanyAmountChanged();
            }
        }
        private Nullable<global::System.Double> _CompanyAmount;
        partial void OnCompanyAmountChanging(Nullable<global::System.Double> value);
        partial void OnCompanyAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Single> Rate
        {
            get
            {
                return _Rate;
            }
            set
            {
                OnRateChanging(value);
                ReportPropertyChanging("Rate");
                _Rate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Rate");
                OnRateChanged();
            }
        }
        private Nullable<global::System.Single> _Rate;
        partial void OnRateChanging(Nullable<global::System.Single> value);
        partial void OnRateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Single> CompanyRate
        {
            get
            {
                return _CompanyRate;
            }
            set
            {
                OnCompanyRateChanging(value);
                ReportPropertyChanging("CompanyRate");
                _CompanyRate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CompanyRate");
                OnCompanyRateChanged();
            }
        }
        private Nullable<global::System.Single> _CompanyRate;
        partial void OnCompanyRateChanging(Nullable<global::System.Single> value);
        partial void OnCompanyRateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ChargeTypeId
        {
            get
            {
                return _ChargeTypeId;
            }
            set
            {
                OnChargeTypeIdChanging(value);
                ReportPropertyChanging("ChargeTypeId");
                _ChargeTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ChargeTypeId");
                OnChargeTypeIdChanged();
            }
        }
        private global::System.Int32 _ChargeTypeId;
        partial void OnChargeTypeIdChanging(global::System.Int32 value);
        partial void OnChargeTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PayrollJobTypeId
        {
            get
            {
                return _PayrollJobTypeId;
            }
            set
            {
                OnPayrollJobTypeIdChanging(value);
                ReportPropertyChanging("PayrollJobTypeId");
                _PayrollJobTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PayrollJobTypeId");
                OnPayrollJobTypeIdChanged();
            }
        }
        private global::System.Int32 _PayrollJobTypeId;
        partial void OnPayrollJobTypeIdChanging(global::System.Int32 value);
        partial void OnPayrollJobTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RateRounding
        {
            get
            {
                return _RateRounding;
            }
            set
            {
                OnRateRoundingChanging(value);
                ReportPropertyChanging("RateRounding");
                _RateRounding = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("RateRounding");
                OnRateRoundingChanged();
            }
        }
        private global::System.String _RateRounding;
        partial void OnRateRoundingChanging(global::System.String value);
        partial void OnRateRoundingChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CreditAccountId
        {
            get
            {
                return _CreditAccountId;
            }
            set
            {
                OnCreditAccountIdChanging(value);
                ReportPropertyChanging("CreditAccountId");
                _CreditAccountId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreditAccountId");
                OnCreditAccountIdChanged();
            }
        }
        private global::System.Int32 _CreditAccountId;
        partial void OnCreditAccountIdChanging(global::System.Int32 value);
        partial void OnCreditAccountIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DebitAccountId
        {
            get
            {
                return _DebitAccountId;
            }
            set
            {
                OnDebitAccountIdChanging(value);
                ReportPropertyChanging("DebitAccountId");
                _DebitAccountId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DebitAccountId");
                OnDebitAccountIdChanged();
            }
        }
        private global::System.Int32 _DebitAccountId;
        partial void OnDebitAccountIdChanging(global::System.Int32 value);
        partial void OnDebitAccountIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataLayer", "FK_AccountPayrollEmployeeSetup", "Account")]
        public Account CreditAccount
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Account>("DataLayer.FK_AccountPayrollEmployeeSetup", "Account").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Account>("DataLayer.FK_AccountPayrollEmployeeSetup", "Account").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Account> CreditAccountReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Account>("DataLayer.FK_AccountPayrollEmployeeSetup", "Account");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Account>("DataLayer.FK_AccountPayrollEmployeeSetup", "Account", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataLayer", "FK_AccountPayrollEmployeeSetup1", "Account")]
        public Account DebitAccount
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Account>("DataLayer.FK_AccountPayrollEmployeeSetup1", "Account").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Account>("DataLayer.FK_AccountPayrollEmployeeSetup1", "Account").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Account> DebitAccountReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Account>("DataLayer.FK_AccountPayrollEmployeeSetup1", "Account");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Account>("DataLayer.FK_AccountPayrollEmployeeSetup1", "Account", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataLayer", "FK_PayrollEmployeeSetup_ChargeTypes", "ChargeType")]
        public ChargeType ChargeType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ChargeType>("DataLayer.FK_PayrollEmployeeSetup_ChargeTypes", "ChargeType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ChargeType>("DataLayer.FK_PayrollEmployeeSetup_ChargeTypes", "ChargeType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ChargeType> ChargeTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ChargeType>("DataLayer.FK_PayrollEmployeeSetup_ChargeTypes", "ChargeType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ChargeType>("DataLayer.FK_PayrollEmployeeSetup_ChargeTypes", "ChargeType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataLayer", "FK_EmployeePayrollEmployeeSetup", "Employee")]
        public Employee Employee
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("DataLayer.FK_EmployeePayrollEmployeeSetup", "Employee").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("DataLayer.FK_EmployeePayrollEmployeeSetup", "Employee").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Employee> EmployeeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("DataLayer.FK_EmployeePayrollEmployeeSetup", "Employee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Employee>("DataLayer.FK_EmployeePayrollEmployeeSetup", "Employee", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataLayer", "FK_PayrollJobTypePayrollEmployeeSetup", "PayrollJobType")]
        public PayrollJobType PayrollJobType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PayrollJobType>("DataLayer.FK_PayrollJobTypePayrollEmployeeSetup", "PayrollJobType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PayrollJobType>("DataLayer.FK_PayrollJobTypePayrollEmployeeSetup", "PayrollJobType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PayrollJobType> PayrollJobTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PayrollJobType>("DataLayer.FK_PayrollJobTypePayrollEmployeeSetup", "PayrollJobType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PayrollJobType>("DataLayer.FK_PayrollJobTypePayrollEmployeeSetup", "PayrollJobType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataLayer", "FK_PayrollSetupItemPayrollEmployeeSetup", "PayrollSetupItem")]
        public PayrollSetupItem PayrollSetupItem
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PayrollSetupItem>("DataLayer.FK_PayrollSetupItemPayrollEmployeeSetup", "PayrollSetupItem").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PayrollSetupItem>("DataLayer.FK_PayrollSetupItemPayrollEmployeeSetup", "PayrollSetupItem").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PayrollSetupItem> PayrollSetupItemReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PayrollSetupItem>("DataLayer.FK_PayrollSetupItemPayrollEmployeeSetup", "PayrollSetupItem");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PayrollSetupItem>("DataLayer.FK_PayrollSetupItemPayrollEmployeeSetup", "PayrollSetupItem", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DataLayer", Name="PayrollItem")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PayrollItem : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PayrollItem object.
        /// </summary>
        /// <param name="payrollItemId">Initial value of the PayrollItemId property.</param>
        /// <param name="employeeId">Initial value of the EmployeeId property.</param>
        /// <param name="creditAccountId">Initial value of the CreditAccountId property.</param>
        /// <param name="debitAccountId">Initial value of the DebitAccountId property.</param>
        /// <param name="priority">Initial value of the Priority property.</param>
        /// <param name="payrollJobId">Initial value of the PayrollJobId property.</param>
        /// <param name="amount">Initial value of the Amount property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="rate">Initial value of the Rate property.</param>
        /// <param name="baseAmount">Initial value of the BaseAmount property.</param>
        /// <param name="incomeDeduction">Initial value of the IncomeDeduction property.</param>
        public static PayrollItem CreatePayrollItem(global::System.Int32 payrollItemId, global::System.Int32 employeeId, global::System.Int32 creditAccountId, global::System.Int32 debitAccountId, global::System.Int32 priority, global::System.Int32 payrollJobId, global::System.Double amount, global::System.String name, global::System.Single rate, global::System.Double baseAmount, global::System.Boolean incomeDeduction)
        {
            PayrollItem payrollItem = new PayrollItem();
            payrollItem.PayrollItemId = payrollItemId;
            payrollItem.EmployeeId = employeeId;
            payrollItem.CreditAccountId = creditAccountId;
            payrollItem.DebitAccountId = debitAccountId;
            payrollItem.Priority = priority;
            payrollItem.PayrollJobId = payrollJobId;
            payrollItem.Amount = amount;
            payrollItem.Name = name;
            payrollItem.Rate = rate;
            payrollItem.BaseAmount = baseAmount;
            payrollItem.IncomeDeduction = incomeDeduction;
            return payrollItem;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PayrollItemId
        {
            get
            {
                return _PayrollItemId;
            }
            set
            {
                if (_PayrollItemId != value)
                {
                    OnPayrollItemIdChanging(value);
                    ReportPropertyChanging("PayrollItemId");
                    _PayrollItemId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PayrollItemId");
                    OnPayrollItemIdChanged();
                }
            }
        }
        private global::System.Int32 _PayrollItemId;
        partial void OnPayrollItemIdChanging(global::System.Int32 value);
        partial void OnPayrollItemIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EmployeeId
        {
            get
            {
                return _EmployeeId;
            }
            set
            {
                OnEmployeeIdChanging(value);
                ReportPropertyChanging("EmployeeId");
                _EmployeeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EmployeeId");
                OnEmployeeIdChanged();
            }
        }
        private global::System.Int32 _EmployeeId;
        partial void OnEmployeeIdChanging(global::System.Int32 value);
        partial void OnEmployeeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CreditAccountId
        {
            get
            {
                return _CreditAccountId;
            }
            set
            {
                OnCreditAccountIdChanging(value);
                ReportPropertyChanging("CreditAccountId");
                _CreditAccountId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreditAccountId");
                OnCreditAccountIdChanged();
            }
        }
        private global::System.Int32 _CreditAccountId;
        partial void OnCreditAccountIdChanging(global::System.Int32 value);
        partial void OnCreditAccountIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DebitAccountId
        {
            get
            {
                return _DebitAccountId;
            }
            set
            {
                OnDebitAccountIdChanging(value);
                ReportPropertyChanging("DebitAccountId");
                _DebitAccountId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DebitAccountId");
                OnDebitAccountIdChanged();
            }
        }
        private global::System.Int32 _DebitAccountId;
        partial void OnDebitAccountIdChanging(global::System.Int32 value);
        partial void OnDebitAccountIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Priority
        {
            get
            {
                return _Priority;
            }
            set
            {
                OnPriorityChanging(value);
                ReportPropertyChanging("Priority");
                _Priority = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Priority");
                OnPriorityChanged();
            }
        }
        private global::System.Int32 _Priority;
        partial void OnPriorityChanging(global::System.Int32 value);
        partial void OnPriorityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PayrollJobId
        {
            get
            {
                return _PayrollJobId;
            }
            set
            {
                OnPayrollJobIdChanging(value);
                ReportPropertyChanging("PayrollJobId");
                _PayrollJobId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PayrollJobId");
                OnPayrollJobIdChanged();
            }
        }
        private global::System.Int32 _PayrollJobId;
        partial void OnPayrollJobIdChanging(global::System.Int32 value);
        partial void OnPayrollJobIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Amount
        {
            get
            {
                return _Amount;
            }
            set
            {
                OnAmountChanging(value);
                ReportPropertyChanging("Amount");
                _Amount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Amount");
                OnAmountChanged();
            }
        }
        private global::System.Double _Amount;
        partial void OnAmountChanging(global::System.Double value);
        partial void OnAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Single Rate
        {
            get
            {
                return _Rate;
            }
            set
            {
                OnRateChanging(value);
                ReportPropertyChanging("Rate");
                _Rate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Rate");
                OnRateChanged();
            }
        }
        private global::System.Single _Rate;
        partial void OnRateChanging(global::System.Single value);
        partial void OnRateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double BaseAmount
        {
            get
            {
                return _BaseAmount;
            }
            set
            {
                OnBaseAmountChanging(value);
                ReportPropertyChanging("BaseAmount");
                _BaseAmount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BaseAmount");
                OnBaseAmountChanged();
            }
        }
        private global::System.Double _BaseAmount;
        partial void OnBaseAmountChanging(global::System.Double value);
        partial void OnBaseAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IncomeDeduction
        {
            get
            {
                return _IncomeDeduction;
            }
            set
            {
                OnIncomeDeductionChanging(value);
                ReportPropertyChanging("IncomeDeduction");
                _IncomeDeduction = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IncomeDeduction");
                OnIncomeDeductionChanged();
            }
        }
        private global::System.Boolean _IncomeDeduction;
        partial void OnIncomeDeductionChanging(global::System.Boolean value);
        partial void OnIncomeDeductionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.String _Status;
        partial void OnStatusChanging(global::System.String value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PayrollSetupItemId
        {
            get
            {
                return _PayrollSetupItemId;
            }
            set
            {
                OnPayrollSetupItemIdChanging(value);
                ReportPropertyChanging("PayrollSetupItemId");
                _PayrollSetupItemId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PayrollSetupItemId");
                OnPayrollSetupItemIdChanged();
            }
        }
        private Nullable<global::System.Int32> _PayrollSetupItemId;
        partial void OnPayrollSetupItemIdChanging(Nullable<global::System.Int32> value);
        partial void OnPayrollSetupItemIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ParentPayrollItemId
        {
            get
            {
                return _ParentPayrollItemId;
            }
            set
            {
                OnParentPayrollItemIdChanging(value);
                ReportPropertyChanging("ParentPayrollItemId");
                _ParentPayrollItemId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ParentPayrollItemId");
                OnParentPayrollItemIdChanged();
            }
        }
        private Nullable<global::System.Int32> _ParentPayrollItemId;
        partial void OnParentPayrollItemIdChanging(Nullable<global::System.Int32> value);
        partial void OnParentPayrollItemIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RateRounding
        {
            get
            {
                return _RateRounding;
            }
            set
            {
                OnRateRoundingChanging(value);
                ReportPropertyChanging("RateRounding");
                _RateRounding = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("RateRounding");
                OnRateRoundingChanged();
            }
        }
        private global::System.String _RateRounding;
        partial void OnRateRoundingChanging(global::System.String value);
        partial void OnRateRoundingChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsTaxableBenefit
        {
            get
            {
                return _IsTaxableBenefit;
            }
            set
            {
                OnIsTaxableBenefitChanging(value);
                ReportPropertyChanging("IsTaxableBenefit");
                _IsTaxableBenefit = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsTaxableBenefit");
                OnIsTaxableBenefitChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsTaxableBenefit;
        partial void OnIsTaxableBenefitChanging(Nullable<global::System.Boolean> value);
        partial void OnIsTaxableBenefitChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> ApplyToTaxableBenefits
        {
            get
            {
                return _ApplyToTaxableBenefits;
            }
            set
            {
                OnApplyToTaxableBenefitsChanging(value);
                ReportPropertyChanging("ApplyToTaxableBenefits");
                _ApplyToTaxableBenefits = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ApplyToTaxableBenefits");
                OnApplyToTaxableBenefitsChanged();
            }
        }
        private Nullable<global::System.Boolean> _ApplyToTaxableBenefits;
        partial void OnApplyToTaxableBenefitsChanging(Nullable<global::System.Boolean> value);
        partial void OnApplyToTaxableBenefitsChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataLayer", "FK_PayrollItemAccountEntry", "AccountEntry")]
        public EntityCollection<AccountEntry> AccountEntries
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AccountEntry>("DataLayer.FK_PayrollItemAccountEntry", "AccountEntry");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AccountEntry>("DataLayer.FK_PayrollItemAccountEntry", "AccountEntry", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataLayer", "FK_AccountPayrollItem", "Account")]
        public Account CreditAccount
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Account>("DataLayer.FK_AccountPayrollItem", "Account").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Account>("DataLayer.FK_AccountPayrollItem", "Account").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Account> CreditAccountReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Account>("DataLayer.FK_AccountPayrollItem", "Account");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Account>("DataLayer.FK_AccountPayrollItem", "Account", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataLayer", "FK_AccountPayrollItem1", "Account")]
        public Account DebitAccount
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Account>("DataLayer.FK_AccountPayrollItem1", "Account").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Account>("DataLayer.FK_AccountPayrollItem1", "Account").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Account> DebitAccountReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Account>("DataLayer.FK_AccountPayrollItem1", "Account");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Account>("DataLayer.FK_AccountPayrollItem1", "Account", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataLayer", "FK_EmployeePayrollItem", "Employee")]
        public Employee Employee
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("DataLayer.FK_EmployeePayrollItem", "Employee").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("DataLayer.FK_EmployeePayrollItem", "Employee").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Employee> EmployeeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("DataLayer.FK_EmployeePayrollItem", "Employee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Employee>("DataLayer.FK_EmployeePayrollItem", "Employee", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataLayer", "FK_PayrollItemPayrollItem", "PayrollItem1")]
        public EntityCollection<PayrollItem> PayrollItems
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PayrollItem>("DataLayer.FK_PayrollItemPayrollItem", "PayrollItem1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PayrollItem>("DataLayer.FK_PayrollItemPayrollItem", "PayrollItem1", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataLayer", "FK_PayrollItemPayrollItem", "PayrollItem")]
        public PayrollItem ParentPayrollItem
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PayrollItem>("DataLayer.FK_PayrollItemPayrollItem", "PayrollItem").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PayrollItem>("DataLayer.FK_PayrollItemPayrollItem", "PayrollItem").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PayrollItem> ParentPayrollItemReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PayrollItem>("DataLayer.FK_PayrollItemPayrollItem", "PayrollItem");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PayrollItem>("DataLayer.FK_PayrollItemPayrollItem", "PayrollItem", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataLayer", "FK_PayrollJobPayrollItem", "PayrollJob")]
        public PayrollJob PayrollJob
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PayrollJob>("DataLayer.FK_PayrollJobPayrollItem", "PayrollJob").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PayrollJob>("DataLayer.FK_PayrollJobPayrollItem", "PayrollJob").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PayrollJob> PayrollJobReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PayrollJob>("DataLayer.FK_PayrollJobPayrollItem", "PayrollJob");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PayrollJob>("DataLayer.FK_PayrollJobPayrollItem", "PayrollJob", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataLayer", "FK_PayrollSetupItemPayrollItem", "PayrollSetupItem")]
        public PayrollSetupItem PayrollSetupItem
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PayrollSetupItem>("DataLayer.FK_PayrollSetupItemPayrollItem", "PayrollSetupItem").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PayrollSetupItem>("DataLayer.FK_PayrollSetupItemPayrollItem", "PayrollSetupItem").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PayrollSetupItem> PayrollSetupItemReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PayrollSetupItem>("DataLayer.FK_PayrollSetupItemPayrollItem", "PayrollSetupItem");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PayrollSetupItem>("DataLayer.FK_PayrollSetupItemPayrollItem", "PayrollSetupItem", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DataLayer", Name="PayrollJob")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PayrollJob : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PayrollJob object.
        /// </summary>
        /// <param name="payrollJobId">Initial value of the PayrollJobId property.</param>
        /// <param name="preparedBy">Initial value of the PreparedBy property.</param>
        /// <param name="startDate">Initial value of the StartDate property.</param>
        /// <param name="endDate">Initial value of the EndDate property.</param>
        /// <param name="status">Initial value of the Status property.</param>
        /// <param name="payrollJobTypeId">Initial value of the PayrollJobTypeId property.</param>
        /// <param name="paymentDate">Initial value of the PaymentDate property.</param>
        /// <param name="companyId">Initial value of the CompanyId property.</param>
        public static PayrollJob CreatePayrollJob(global::System.Int32 payrollJobId, global::System.String preparedBy, global::System.DateTime startDate, global::System.DateTime endDate, global::System.String status, global::System.Int32 payrollJobTypeId, global::System.DateTime paymentDate, global::System.Int32 companyId)
        {
            PayrollJob payrollJob = new PayrollJob();
            payrollJob.PayrollJobId = payrollJobId;
            payrollJob.PreparedBy = preparedBy;
            payrollJob.StartDate = startDate;
            payrollJob.EndDate = endDate;
            payrollJob.Status = status;
            payrollJob.PayrollJobTypeId = payrollJobTypeId;
            payrollJob.PaymentDate = paymentDate;
            payrollJob.CompanyId = companyId;
            return payrollJob;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PayrollJobId
        {
            get
            {
                return _PayrollJobId;
            }
            set
            {
                if (_PayrollJobId != value)
                {
                    OnPayrollJobIdChanging(value);
                    ReportPropertyChanging("PayrollJobId");
                    _PayrollJobId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PayrollJobId");
                    OnPayrollJobIdChanged();
                }
            }
        }
        private global::System.Int32 _PayrollJobId;
        partial void OnPayrollJobIdChanging(global::System.Int32 value);
        partial void OnPayrollJobIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CheckedBy
        {
            get
            {
                return _CheckedBy;
            }
            set
            {
                OnCheckedByChanging(value);
                ReportPropertyChanging("CheckedBy");
                _CheckedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CheckedBy");
                OnCheckedByChanged();
            }
        }
        private Nullable<global::System.Int32> _CheckedBy;
        partial void OnCheckedByChanging(Nullable<global::System.Int32> value);
        partial void OnCheckedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PreparedBy
        {
            get
            {
                return _PreparedBy;
            }
            set
            {
                OnPreparedByChanging(value);
                ReportPropertyChanging("PreparedBy");
                _PreparedBy = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PreparedBy");
                OnPreparedByChanged();
            }
        }
        private global::System.String _PreparedBy;
        partial void OnPreparedByChanging(global::System.String value);
        partial void OnPreparedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime StartDate
        {
            get
            {
                return _StartDate;
            }
            set
            {
                OnStartDateChanging(value);
                ReportPropertyChanging("StartDate");
                _StartDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StartDate");
                OnStartDateChanged();
            }
        }
        private global::System.DateTime _StartDate;
        partial void OnStartDateChanging(global::System.DateTime value);
        partial void OnStartDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime EndDate
        {
            get
            {
                return _EndDate;
            }
            set
            {
                OnEndDateChanging(value);
                ReportPropertyChanging("EndDate");
                _EndDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EndDate");
                OnEndDateChanged();
            }
        }
        private global::System.DateTime _EndDate;
        partial void OnEndDateChanging(global::System.DateTime value);
        partial void OnEndDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.String _Status;
        partial void OnStatusChanging(global::System.String value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PayrollJobTypeId
        {
            get
            {
                return _PayrollJobTypeId;
            }
            set
            {
                OnPayrollJobTypeIdChanging(value);
                ReportPropertyChanging("PayrollJobTypeId");
                _PayrollJobTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PayrollJobTypeId");
                OnPayrollJobTypeIdChanged();
            }
        }
        private global::System.Int32 _PayrollJobTypeId;
        partial void OnPayrollJobTypeIdChanging(global::System.Int32 value);
        partial void OnPayrollJobTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime PaymentDate
        {
            get
            {
                return _PaymentDate;
            }
            set
            {
                OnPaymentDateChanging(value);
                ReportPropertyChanging("PaymentDate");
                _PaymentDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PaymentDate");
                OnPaymentDateChanged();
            }
        }
        private global::System.DateTime _PaymentDate;
        partial void OnPaymentDateChanging(global::System.DateTime value);
        partial void OnPaymentDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CompanyId
        {
            get
            {
                return _CompanyId;
            }
            set
            {
                OnCompanyIdChanging(value);
                ReportPropertyChanging("CompanyId");
                _CompanyId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CompanyId");
                OnCompanyIdChanged();
            }
        }
        private global::System.Int32 _CompanyId;
        partial void OnCompanyIdChanging(global::System.Int32 value);
        partial void OnCompanyIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataLayer", "FK_PayrollJobPayrollItem", "PayrollItem")]
        public EntityCollection<PayrollItem> PayrollItems
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PayrollItem>("DataLayer.FK_PayrollJobPayrollItem", "PayrollItem");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PayrollItem>("DataLayer.FK_PayrollJobPayrollItem", "PayrollItem", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataLayer", "FK_PayrollJobTypePayrollJob", "PayrollJobType")]
        public PayrollJobType PayrollJobType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PayrollJobType>("DataLayer.FK_PayrollJobTypePayrollJob", "PayrollJobType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PayrollJobType>("DataLayer.FK_PayrollJobTypePayrollJob", "PayrollJobType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PayrollJobType> PayrollJobTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PayrollJobType>("DataLayer.FK_PayrollJobTypePayrollJob", "PayrollJobType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PayrollJobType>("DataLayer.FK_PayrollJobTypePayrollJob", "PayrollJobType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataLayer", "FK_Companies_PayrollJobs", "Company")]
        public EntityCollection<Company> CurrentCompany
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Company>("DataLayer.FK_Companies_PayrollJobs", "Company");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Company>("DataLayer.FK_Companies_PayrollJobs", "Company", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataLayer", "CompanyPayrollJob", "Company")]
        public Company Company
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("DataLayer.CompanyPayrollJob", "Company").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("DataLayer.CompanyPayrollJob", "Company").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Company> CompanyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("DataLayer.CompanyPayrollJob", "Company");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Company>("DataLayer.CompanyPayrollJob", "Company", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DataLayer", Name="PayrollJobType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PayrollJobType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PayrollJobType object.
        /// </summary>
        /// <param name="payrollJobTypeId">Initial value of the PayrollJobTypeId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static PayrollJobType CreatePayrollJobType(global::System.Int32 payrollJobTypeId, global::System.String name)
        {
            PayrollJobType payrollJobType = new PayrollJobType();
            payrollJobType.PayrollJobTypeId = payrollJobTypeId;
            payrollJobType.Name = name;
            return payrollJobType;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PayrollJobTypeId
        {
            get
            {
                return _PayrollJobTypeId;
            }
            set
            {
                if (_PayrollJobTypeId != value)
                {
                    OnPayrollJobTypeIdChanging(value);
                    ReportPropertyChanging("PayrollJobTypeId");
                    _PayrollJobTypeId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PayrollJobTypeId");
                    OnPayrollJobTypeIdChanged();
                }
            }
        }
        private global::System.Int32 _PayrollJobTypeId;
        partial void OnPayrollJobTypeIdChanging(global::System.Int32 value);
        partial void OnPayrollJobTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PayPeriods
        {
            get
            {
                return _PayPeriods;
            }
            set
            {
                OnPayPeriodsChanging(value);
                ReportPropertyChanging("PayPeriods");
                _PayPeriods = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PayPeriods");
                OnPayPeriodsChanged();
            }
        }
        private Nullable<global::System.Int32> _PayPeriods;
        partial void OnPayPeriodsChanging(Nullable<global::System.Int32> value);
        partial void OnPayPeriodsChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataLayer", "FK_PayrollJobTypePayrollEmployeeSetup", "PayrollEmployeeSetup")]
        public EntityCollection<PayrollEmployeeSetup> PayrollEmployeeSetups
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PayrollEmployeeSetup>("DataLayer.FK_PayrollJobTypePayrollEmployeeSetup", "PayrollEmployeeSetup");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PayrollEmployeeSetup>("DataLayer.FK_PayrollJobTypePayrollEmployeeSetup", "PayrollEmployeeSetup", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataLayer", "FK_PayrollJobTypePayrollJob", "PayrollJob")]
        public EntityCollection<PayrollJob> PayrollJobs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PayrollJob>("DataLayer.FK_PayrollJobTypePayrollJob", "PayrollJob");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PayrollJob>("DataLayer.FK_PayrollJobTypePayrollJob", "PayrollJob", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DataLayer", Name="PayrollSetupItem")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PayrollSetupItem : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PayrollSetupItem object.
        /// </summary>
        /// <param name="payrollSetupItemId">Initial value of the PayrollSetupItemId property.</param>
        /// <param name="priority">Initial value of the Priority property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="debitCredit">Initial value of the DebitCredit property.</param>
        /// <param name="incomeDeduction">Initial value of the IncomeDeduction property.</param>
        public static PayrollSetupItem CreatePayrollSetupItem(global::System.Int32 payrollSetupItemId, global::System.Int32 priority, global::System.String name, global::System.Boolean debitCredit, global::System.Boolean incomeDeduction)
        {
            PayrollSetupItem payrollSetupItem = new PayrollSetupItem();
            payrollSetupItem.PayrollSetupItemId = payrollSetupItemId;
            payrollSetupItem.Priority = priority;
            payrollSetupItem.Name = name;
            payrollSetupItem.DebitCredit = debitCredit;
            payrollSetupItem.IncomeDeduction = incomeDeduction;
            return payrollSetupItem;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PayrollSetupItemId
        {
            get
            {
                return _PayrollSetupItemId;
            }
            set
            {
                if (_PayrollSetupItemId != value)
                {
                    OnPayrollSetupItemIdChanging(value);
                    ReportPropertyChanging("PayrollSetupItemId");
                    _PayrollSetupItemId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PayrollSetupItemId");
                    OnPayrollSetupItemIdChanged();
                }
            }
        }
        private global::System.Int32 _PayrollSetupItemId;
        partial void OnPayrollSetupItemIdChanging(global::System.Int32 value);
        partial void OnPayrollSetupItemIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Priority
        {
            get
            {
                return _Priority;
            }
            set
            {
                OnPriorityChanging(value);
                ReportPropertyChanging("Priority");
                _Priority = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Priority");
                OnPriorityChanged();
            }
        }
        private global::System.Int32 _Priority;
        partial void OnPriorityChanging(global::System.Int32 value);
        partial void OnPriorityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CompanyLineItemDescription
        {
            get
            {
                return _CompanyLineItemDescription;
            }
            set
            {
                OnCompanyLineItemDescriptionChanging(value);
                ReportPropertyChanging("CompanyLineItemDescription");
                _CompanyLineItemDescription = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CompanyLineItemDescription");
                OnCompanyLineItemDescriptionChanged();
            }
        }
        private global::System.String _CompanyLineItemDescription;
        partial void OnCompanyLineItemDescriptionChanging(global::System.String value);
        partial void OnCompanyLineItemDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean DebitCredit
        {
            get
            {
                return _DebitCredit;
            }
            set
            {
                OnDebitCreditChanging(value);
                ReportPropertyChanging("DebitCredit");
                _DebitCredit = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DebitCredit");
                OnDebitCreditChanged();
            }
        }
        private global::System.Boolean _DebitCredit;
        partial void OnDebitCreditChanging(global::System.Boolean value);
        partial void OnDebitCreditChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RecuranceDays
        {
            get
            {
                return _RecuranceDays;
            }
            set
            {
                OnRecuranceDaysChanging(value);
                ReportPropertyChanging("RecuranceDays");
                _RecuranceDays = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("RecuranceDays");
                OnRecuranceDaysChanged();
            }
        }
        private global::System.String _RecuranceDays;
        partial void OnRecuranceDaysChanging(global::System.String value);
        partial void OnRecuranceDaysChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IncomeDeduction
        {
            get
            {
                return _IncomeDeduction;
            }
            set
            {
                OnIncomeDeductionChanging(value);
                ReportPropertyChanging("IncomeDeduction");
                _IncomeDeduction = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IncomeDeduction");
                OnIncomeDeductionChanged();
            }
        }
        private global::System.Boolean _IncomeDeduction;
        partial void OnIncomeDeductionChanging(global::System.Boolean value);
        partial void OnIncomeDeductionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RateRounding
        {
            get
            {
                return _RateRounding;
            }
            set
            {
                OnRateRoundingChanging(value);
                ReportPropertyChanging("RateRounding");
                _RateRounding = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("RateRounding");
                OnRateRoundingChanged();
            }
        }
        private global::System.String _RateRounding;
        partial void OnRateRoundingChanging(global::System.String value);
        partial void OnRateRoundingChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> Rate
        {
            get
            {
                return _Rate;
            }
            set
            {
                OnRateChanging(value);
                ReportPropertyChanging("Rate");
                _Rate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Rate");
                OnRateChanged();
            }
        }
        private Nullable<global::System.Double> _Rate;
        partial void OnRateChanging(Nullable<global::System.Double> value);
        partial void OnRateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> CompanyRate
        {
            get
            {
                return _CompanyRate;
            }
            set
            {
                OnCompanyRateChanging(value);
                ReportPropertyChanging("CompanyRate");
                _CompanyRate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CompanyRate");
                OnCompanyRateChanged();
            }
        }
        private Nullable<global::System.Double> _CompanyRate;
        partial void OnCompanyRateChanging(Nullable<global::System.Double> value);
        partial void OnCompanyRateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> RateCeiling
        {
            get
            {
                return _RateCeiling;
            }
            set
            {
                OnRateCeilingChanging(value);
                ReportPropertyChanging("RateCeiling");
                _RateCeiling = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RateCeiling");
                OnRateCeilingChanged();
            }
        }
        private Nullable<global::System.Double> _RateCeiling;
        partial void OnRateCeilingChanging(Nullable<global::System.Double> value);
        partial void OnRateCeilingChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> RateCeilingAmount
        {
            get
            {
                return _RateCeilingAmount;
            }
            set
            {
                OnRateCeilingAmountChanging(value);
                ReportPropertyChanging("RateCeilingAmount");
                _RateCeilingAmount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RateCeilingAmount");
                OnRateCeilingAmountChanged();
            }
        }
        private Nullable<global::System.Double> _RateCeilingAmount;
        partial void OnRateCeilingAmountChanging(Nullable<global::System.Double> value);
        partial void OnRateCeilingAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> RateCeilingCompanyAmount
        {
            get
            {
                return _RateCeilingCompanyAmount;
            }
            set
            {
                OnRateCeilingCompanyAmountChanging(value);
                ReportPropertyChanging("RateCeilingCompanyAmount");
                _RateCeilingCompanyAmount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RateCeilingCompanyAmount");
                OnRateCeilingCompanyAmountChanged();
            }
        }
        private Nullable<global::System.Double> _RateCeilingCompanyAmount;
        partial void OnRateCeilingCompanyAmountChanging(Nullable<global::System.Double> value);
        partial void OnRateCeilingCompanyAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> Amount
        {
            get
            {
                return _Amount;
            }
            set
            {
                OnAmountChanging(value);
                ReportPropertyChanging("Amount");
                _Amount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Amount");
                OnAmountChanged();
            }
        }
        private Nullable<global::System.Double> _Amount;
        partial void OnAmountChanging(Nullable<global::System.Double> value);
        partial void OnAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> CompanyAmount
        {
            get
            {
                return _CompanyAmount;
            }
            set
            {
                OnCompanyAmountChanging(value);
                ReportPropertyChanging("CompanyAmount");
                _CompanyAmount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CompanyAmount");
                OnCompanyAmountChanged();
            }
        }
        private Nullable<global::System.Double> _CompanyAmount;
        partial void OnCompanyAmountChanging(Nullable<global::System.Double> value);
        partial void OnCompanyAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> MiniumBaseAmount
        {
            get
            {
                return _MiniumBaseAmount;
            }
            set
            {
                OnMiniumBaseAmountChanging(value);
                ReportPropertyChanging("MiniumBaseAmount");
                _MiniumBaseAmount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MiniumBaseAmount");
                OnMiniumBaseAmountChanged();
            }
        }
        private Nullable<global::System.Double> _MiniumBaseAmount;
        partial void OnMiniumBaseAmountChanging(Nullable<global::System.Double> value);
        partial void OnMiniumBaseAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> AmountFlooring
        {
            get
            {
                return _AmountFlooring;
            }
            set
            {
                OnAmountFlooringChanging(value);
                ReportPropertyChanging("AmountFlooring");
                _AmountFlooring = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AmountFlooring");
                OnAmountFlooringChanged();
            }
        }
        private Nullable<global::System.Double> _AmountFlooring;
        partial void OnAmountFlooringChanging(Nullable<global::System.Double> value);
        partial void OnAmountFlooringChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsTaxableBenefit
        {
            get
            {
                return _IsTaxableBenefit;
            }
            set
            {
                OnIsTaxableBenefitChanging(value);
                ReportPropertyChanging("IsTaxableBenefit");
                _IsTaxableBenefit = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsTaxableBenefit");
                OnIsTaxableBenefitChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsTaxableBenefit;
        partial void OnIsTaxableBenefitChanging(Nullable<global::System.Boolean> value);
        partial void OnIsTaxableBenefitChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> ApplyToTaxableBenefits
        {
            get
            {
                return _ApplyToTaxableBenefits;
            }
            set
            {
                OnApplyToTaxableBenefitsChanging(value);
                ReportPropertyChanging("ApplyToTaxableBenefits");
                _ApplyToTaxableBenefits = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ApplyToTaxableBenefits");
                OnApplyToTaxableBenefitsChanged();
            }
        }
        private Nullable<global::System.Boolean> _ApplyToTaxableBenefits;
        partial void OnApplyToTaxableBenefitsChanging(Nullable<global::System.Boolean> value);
        partial void OnApplyToTaxableBenefitsChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataLayer", "FK_PayrollSetupItemPayrollEmployeeSetup", "PayrollEmployeeSetup")]
        public EntityCollection<PayrollEmployeeSetup> PayrollEmployeeSetups
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PayrollEmployeeSetup>("DataLayer.FK_PayrollSetupItemPayrollEmployeeSetup", "PayrollEmployeeSetup");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PayrollEmployeeSetup>("DataLayer.FK_PayrollSetupItemPayrollEmployeeSetup", "PayrollEmployeeSetup", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataLayer", "FK_PayrollSetupItemPayrollItem", "PayrollItem")]
        public EntityCollection<PayrollItem> PayrollItems
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PayrollItem>("DataLayer.FK_PayrollSetupItemPayrollItem", "PayrollItem");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PayrollItem>("DataLayer.FK_PayrollSetupItemPayrollItem", "PayrollItem", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DataLayer", Name="User")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class User : Employee
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new User object.
        /// </summary>
        /// <param name="employeeId">Initial value of the EmployeeId property.</param>
        /// <param name="firstName">Initial value of the FirstName property.</param>
        /// <param name="lastName">Initial value of the LastName property.</param>
        /// <param name="employmentStartDate">Initial value of the EmploymentStartDate property.</param>
        /// <param name="username">Initial value of the Username property.</param>
        /// <param name="password">Initial value of the Password property.</param>
        public static User CreateUser(global::System.Int32 employeeId, global::System.String firstName, global::System.String lastName, global::System.DateTime employmentStartDate, global::System.String username, global::System.String password)
        {
            User user = new User();
            user.EmployeeId = employeeId;
            user.FirstName = firstName;
            user.LastName = lastName;
            user.EmploymentStartDate = employmentStartDate;
            user.Username = username;
            user.Password = password;
            return user;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Username
        {
            get
            {
                return _Username;
            }
            set
            {
                OnUsernameChanging(value);
                ReportPropertyChanging("Username");
                _Username = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Username");
                OnUsernameChanged();
            }
        }
        private global::System.String _Username;
        partial void OnUsernameChanging(global::System.String value);
        partial void OnUsernameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();

        #endregion

    }

    #endregion

}
