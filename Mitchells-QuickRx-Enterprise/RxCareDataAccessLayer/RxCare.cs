//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("RxCareModel", "FK_DoctorPhone_Doctor", "Doctor", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(RxCareDataAccessLayer.Doctor), "DoctorPhone", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(RxCareDataAccessLayer.DoctorPhone), true)]
[assembly: EdmRelationshipAttribute("RxCareModel", "FK_InventoryQuantities_InventoryItems", "InventoryItems", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(RxCareDataAccessLayer.InventoryItem), "InventoryQuantities", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(RxCareDataAccessLayer.InventoryQuantity), true)]
[assembly: EdmRelationshipAttribute("RxCareModel", "FK_MedicineContents_Medicine", "Medicine", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(RxCareDataAccessLayer.Medicine), "MedicineContents", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(RxCareDataAccessLayer.MedicineContent), true)]
[assembly: EdmRelationshipAttribute("RxCareModel", "FK_MedicineInventory_InventoryItems", "InventoryItems", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(RxCareDataAccessLayer.InventoryItem), "MedicineInventory", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(RxCareDataAccessLayer.MedicineInventory), true)]
[assembly: EdmRelationshipAttribute("RxCareModel", "FK_MedicineInventory_Medicine", "Medicine", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(RxCareDataAccessLayer.Medicine), "MedicineInventory", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(RxCareDataAccessLayer.MedicineInventory), true)]
[assembly: EdmRelationshipAttribute("RxCareModel", "FK_MedicineNegativeInteractions_Medicine", "Medicine", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(RxCareDataAccessLayer.Medicine), "MedicineNegativeInteractions", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(RxCareDataAccessLayer.MedicineNegativeInteraction), true)]
[assembly: EdmRelationshipAttribute("RxCareModel", "FK_MedicineSideEffects_Medicine", "Medicine", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(RxCareDataAccessLayer.Medicine), "MedicineSideEffects", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(RxCareDataAccessLayer.MedicineSideEffect), true)]
[assembly: EdmRelationshipAttribute("RxCareModel", "FK_MedicineUnitPrice_Medicine", "Medicine", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(RxCareDataAccessLayer.Medicine), "MedicineUnitPrice", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(RxCareDataAccessLayer.MedicineUnitPrice), true)]
[assembly: EdmRelationshipAttribute("RxCareModel", "FK_PatientAddress_Patient", "Patient", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(RxCareDataAccessLayer.Patient), "PatientAddress", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(RxCareDataAccessLayer.PatientAddress), true)]
[assembly: EdmRelationshipAttribute("RxCareModel", "FK_PatientConditions_Conditions", "Conditions", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(RxCareDataAccessLayer.Condition), "PatientConditions", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(RxCareDataAccessLayer.PatientCondition), true)]
[assembly: EdmRelationshipAttribute("RxCareModel", "FK_PatientConditions_Patient", "Patient", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(RxCareDataAccessLayer.Patient), "PatientConditions", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(RxCareDataAccessLayer.PatientCondition), true)]
[assembly: EdmRelationshipAttribute("RxCareModel", "FK_PatientPhone_Patient", "Patient", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(RxCareDataAccessLayer.Patient), "PatientPhone", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(RxCareDataAccessLayer.PatientPhone), true)]
[assembly: EdmRelationshipAttribute("RxCareModel", "FK_PresciptionDetails_Medicine", "Medicine", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(RxCareDataAccessLayer.Medicine), "PresciptionDetails", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(RxCareDataAccessLayer.PresciptionDetail), true)]
[assembly: EdmRelationshipAttribute("RxCareModel", "FK_PresciptionDetails_MedicineUnitPrice", "MedicineUnitPrice", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(RxCareDataAccessLayer.MedicineUnitPrice), "PresciptionDetails", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(RxCareDataAccessLayer.PresciptionDetail), true)]
[assembly: EdmRelationshipAttribute("RxCareModel", "FK_PresciptionDetails_Prescription", "Prescription", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(RxCareDataAccessLayer.Prescription), "PresciptionDetails", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(RxCareDataAccessLayer.PresciptionDetail), true)]
[assembly: EdmRelationshipAttribute("RxCareModel", "FK_Prescription_Doctor1", "Doctor", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(RxCareDataAccessLayer.Doctor), "Prescription", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(RxCareDataAccessLayer.Prescription), true)]
[assembly: EdmRelationshipAttribute("RxCareModel", "FK_InventoryQuantities_InventoryItems1", "InventoryItem", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(RxCareDataAccessLayer.InventoryItem), "InventoryQuantity", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(RxCareDataAccessLayer.InventoryQuantity), true)]
[assembly: EdmRelationshipAttribute("RxCareModel", "FK_Prescription_Patient1", "Patient", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(RxCareDataAccessLayer.Patient), "Prescription", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(RxCareDataAccessLayer.Prescription), true)]
[assembly: EdmRelationshipAttribute("RxCareModel", "MedicineInventories", "InventoryItem", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(RxCareDataAccessLayer.InventoryItem), "Medicine", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(RxCareDataAccessLayer.Medicine))]

#endregion

namespace RxCareDataAccessLayer
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class RxCareEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new RxCareEntities object using the connection string found in the 'RxCareEntities' section of the application configuration file.
        /// </summary>
        public RxCareEntities() : base("name=RxCareEntities", "RxCareEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new RxCareEntities object.
        /// </summary>
        public RxCareEntities(string connectionString) : base(connectionString, "RxCareEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new RxCareEntities object.
        /// </summary>
        public RxCareEntities(EntityConnection connection) : base(connection, "RxCareEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Condition> Conditions
        {
            get
            {
                if ((_Conditions == null))
                {
                    _Conditions = base.CreateObjectSet<Condition>("Conditions");
                }
                return _Conditions;
            }
        }
        private ObjectSet<Condition> _Conditions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Doctor> Doctors
        {
            get
            {
                if ((_Doctors == null))
                {
                    _Doctors = base.CreateObjectSet<Doctor>("Doctors");
                }
                return _Doctors;
            }
        }
        private ObjectSet<Doctor> _Doctors;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DoctorPhone> DoctorPhones
        {
            get
            {
                if ((_DoctorPhones == null))
                {
                    _DoctorPhones = base.CreateObjectSet<DoctorPhone>("DoctorPhones");
                }
                return _DoctorPhones;
            }
        }
        private ObjectSet<DoctorPhone> _DoctorPhones;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<InventoryItem> InventoryItems
        {
            get
            {
                if ((_InventoryItems == null))
                {
                    _InventoryItems = base.CreateObjectSet<InventoryItem>("InventoryItems");
                }
                return _InventoryItems;
            }
        }
        private ObjectSet<InventoryItem> _InventoryItems;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<InventoryQuantity> InventoryQuantities
        {
            get
            {
                if ((_InventoryQuantities == null))
                {
                    _InventoryQuantities = base.CreateObjectSet<InventoryQuantity>("InventoryQuantities");
                }
                return _InventoryQuantities;
            }
        }
        private ObjectSet<InventoryQuantity> _InventoryQuantities;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Medicine> Medicines
        {
            get
            {
                if ((_Medicines == null))
                {
                    _Medicines = base.CreateObjectSet<Medicine>("Medicines");
                }
                return _Medicines;
            }
        }
        private ObjectSet<Medicine> _Medicines;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MedicineContent> MedicineContents
        {
            get
            {
                if ((_MedicineContents == null))
                {
                    _MedicineContents = base.CreateObjectSet<MedicineContent>("MedicineContents");
                }
                return _MedicineContents;
            }
        }
        private ObjectSet<MedicineContent> _MedicineContents;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MedicineInventory> MedicineInventory
        {
            get
            {
                if ((_MedicineInventory == null))
                {
                    _MedicineInventory = base.CreateObjectSet<MedicineInventory>("MedicineInventory");
                }
                return _MedicineInventory;
            }
        }
        private ObjectSet<MedicineInventory> _MedicineInventory;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MedicineNegativeInteraction> MedicineNegativeInteractions
        {
            get
            {
                if ((_MedicineNegativeInteractions == null))
                {
                    _MedicineNegativeInteractions = base.CreateObjectSet<MedicineNegativeInteraction>("MedicineNegativeInteractions");
                }
                return _MedicineNegativeInteractions;
            }
        }
        private ObjectSet<MedicineNegativeInteraction> _MedicineNegativeInteractions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MedicineSideEffect> MedicineSideEffects
        {
            get
            {
                if ((_MedicineSideEffects == null))
                {
                    _MedicineSideEffects = base.CreateObjectSet<MedicineSideEffect>("MedicineSideEffects");
                }
                return _MedicineSideEffects;
            }
        }
        private ObjectSet<MedicineSideEffect> _MedicineSideEffects;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MedicineUnitPrice> MedicineUnitPrices
        {
            get
            {
                if ((_MedicineUnitPrices == null))
                {
                    _MedicineUnitPrices = base.CreateObjectSet<MedicineUnitPrice>("MedicineUnitPrices");
                }
                return _MedicineUnitPrices;
            }
        }
        private ObjectSet<MedicineUnitPrice> _MedicineUnitPrices;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Patient> Patients
        {
            get
            {
                if ((_Patients == null))
                {
                    _Patients = base.CreateObjectSet<Patient>("Patients");
                }
                return _Patients;
            }
        }
        private ObjectSet<Patient> _Patients;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PatientAddress> PatientAddresses
        {
            get
            {
                if ((_PatientAddresses == null))
                {
                    _PatientAddresses = base.CreateObjectSet<PatientAddress>("PatientAddresses");
                }
                return _PatientAddresses;
            }
        }
        private ObjectSet<PatientAddress> _PatientAddresses;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PatientCondition> PatientConditions
        {
            get
            {
                if ((_PatientConditions == null))
                {
                    _PatientConditions = base.CreateObjectSet<PatientCondition>("PatientConditions");
                }
                return _PatientConditions;
            }
        }
        private ObjectSet<PatientCondition> _PatientConditions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PatientPhone> PatientPhones
        {
            get
            {
                if ((_PatientPhones == null))
                {
                    _PatientPhones = base.CreateObjectSet<PatientPhone>("PatientPhones");
                }
                return _PatientPhones;
            }
        }
        private ObjectSet<PatientPhone> _PatientPhones;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PresciptionDetail> PresciptionDetails
        {
            get
            {
                if ((_PresciptionDetails == null))
                {
                    _PresciptionDetails = base.CreateObjectSet<PresciptionDetail>("PresciptionDetails");
                }
                return _PresciptionDetails;
            }
        }
        private ObjectSet<PresciptionDetail> _PresciptionDetails;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Prescription> Prescriptions
        {
            get
            {
                if ((_Prescriptions == null))
                {
                    _Prescriptions = base.CreateObjectSet<Prescription>("Prescriptions");
                }
                return _Prescriptions;
            }
        }
        private ObjectSet<Prescription> _Prescriptions;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Conditions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToConditions(Condition condition)
        {
            base.AddObject("Conditions", condition);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Doctors EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDoctors(Doctor doctor)
        {
            base.AddObject("Doctors", doctor);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DoctorPhones EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDoctorPhones(DoctorPhone doctorPhone)
        {
            base.AddObject("DoctorPhones", doctorPhone);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the InventoryItems EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToInventoryItems(InventoryItem inventoryItem)
        {
            base.AddObject("InventoryItems", inventoryItem);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the InventoryQuantities EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToInventoryQuantities(InventoryQuantity inventoryQuantity)
        {
            base.AddObject("InventoryQuantities", inventoryQuantity);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Medicines EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMedicines(Medicine medicine)
        {
            base.AddObject("Medicines", medicine);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MedicineContents EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMedicineContents(MedicineContent medicineContent)
        {
            base.AddObject("MedicineContents", medicineContent);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MedicineInventory EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMedicineInventory(MedicineInventory medicineInventory)
        {
            base.AddObject("MedicineInventory", medicineInventory);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MedicineNegativeInteractions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMedicineNegativeInteractions(MedicineNegativeInteraction medicineNegativeInteraction)
        {
            base.AddObject("MedicineNegativeInteractions", medicineNegativeInteraction);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MedicineSideEffects EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMedicineSideEffects(MedicineSideEffect medicineSideEffect)
        {
            base.AddObject("MedicineSideEffects", medicineSideEffect);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MedicineUnitPrices EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMedicineUnitPrices(MedicineUnitPrice medicineUnitPrice)
        {
            base.AddObject("MedicineUnitPrices", medicineUnitPrice);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Patients EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPatients(Patient patient)
        {
            base.AddObject("Patients", patient);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PatientAddresses EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPatientAddresses(PatientAddress patientAddress)
        {
            base.AddObject("PatientAddresses", patientAddress);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PatientConditions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPatientConditions(PatientCondition patientCondition)
        {
            base.AddObject("PatientConditions", patientCondition);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PatientPhones EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPatientPhones(PatientPhone patientPhone)
        {
            base.AddObject("PatientPhones", patientPhone);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PresciptionDetails EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPresciptionDetails(PresciptionDetail presciptionDetail)
        {
            base.AddObject("PresciptionDetails", presciptionDetail);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Prescriptions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPrescriptions(Prescription prescription)
        {
            base.AddObject("Prescriptions", prescription);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RxCareModel", Name="Condition")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Condition : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Condition object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="conditionName">Initial value of the ConditionName property.</param>
        /// <param name="cause">Initial value of the Cause property.</param>
        public static Condition CreateCondition(global::System.Int32 id, global::System.String conditionName, global::System.String cause)
        {
            Condition condition = new Condition();
            condition.Id = id;
            condition.ConditionName = conditionName;
            condition.Cause = cause;
            return condition;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ConditionName
        {
            get
            {
                return _ConditionName;
            }
            set
            {
                OnConditionNameChanging(value);
                ReportPropertyChanging("ConditionName");
                _ConditionName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ConditionName");
                OnConditionNameChanged();
            }
        }
        private global::System.String _ConditionName;
        partial void OnConditionNameChanging(global::System.String value);
        partial void OnConditionNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Cause
        {
            get
            {
                return _Cause;
            }
            set
            {
                OnCauseChanging(value);
                ReportPropertyChanging("Cause");
                _Cause = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Cause");
                OnCauseChanged();
            }
        }
        private global::System.String _Cause;
        partial void OnCauseChanging(global::System.String value);
        partial void OnCauseChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RxCareModel", "FK_PatientConditions_Conditions", "PatientConditions")]
        public EntityCollection<PatientCondition> PatientConditions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PatientCondition>("RxCareModel.FK_PatientConditions_Conditions", "PatientConditions");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PatientCondition>("RxCareModel.FK_PatientConditions_Conditions", "PatientConditions", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RxCareModel", Name="Doctor")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Doctor : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Doctor object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static Doctor CreateDoctor(global::System.Int32 id)
        {
            Doctor doctor = new Doctor();
            doctor.Id = id;
            return doctor;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                OnLastNameChanging(value);
                ReportPropertyChanging("LastName");
                _LastName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LastName");
                OnLastNameChanged();
            }
        }
        private global::System.String _LastName;
        partial void OnLastNameChanging(global::System.String value);
        partial void OnLastNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Office_Address
        {
            get
            {
                return _Office_Address;
            }
            set
            {
                OnOffice_AddressChanging(value);
                ReportPropertyChanging("Office_Address");
                _Office_Address = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Office_Address");
                OnOffice_AddressChanged();
            }
        }
        private global::System.String _Office_Address;
        partial void OnOffice_AddressChanging(global::System.String value);
        partial void OnOffice_AddressChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RxCareModel", "FK_DoctorPhone_Doctor", "DoctorPhone")]
        public EntityCollection<DoctorPhone> DoctorPhones
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DoctorPhone>("RxCareModel.FK_DoctorPhone_Doctor", "DoctorPhone");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DoctorPhone>("RxCareModel.FK_DoctorPhone_Doctor", "DoctorPhone", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RxCareModel", "FK_Prescription_Doctor1", "Prescription")]
        public EntityCollection<Prescription> Prescriptions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Prescription>("RxCareModel.FK_Prescription_Doctor1", "Prescription");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Prescription>("RxCareModel.FK_Prescription_Doctor1", "Prescription", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RxCareModel", Name="DoctorPhone")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DoctorPhone : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DoctorPhone object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="phoneNumber">Initial value of the PhoneNumber property.</param>
        /// <param name="doctorId">Initial value of the DoctorId property.</param>
        public static DoctorPhone CreateDoctorPhone(global::System.Int32 id, global::System.String phoneNumber, global::System.Int32 doctorId)
        {
            DoctorPhone doctorPhone = new DoctorPhone();
            doctorPhone.Id = id;
            doctorPhone.PhoneNumber = phoneNumber;
            doctorPhone.DoctorId = doctorId;
            return doctorPhone;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PhoneNumber
        {
            get
            {
                return _PhoneNumber;
            }
            set
            {
                OnPhoneNumberChanging(value);
                ReportPropertyChanging("PhoneNumber");
                _PhoneNumber = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PhoneNumber");
                OnPhoneNumberChanged();
            }
        }
        private global::System.String _PhoneNumber;
        partial void OnPhoneNumberChanging(global::System.String value);
        partial void OnPhoneNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Type
        {
            get
            {
                return _Type;
            }
            set
            {
                OnTypeChanging(value);
                ReportPropertyChanging("Type");
                _Type = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Type");
                OnTypeChanged();
            }
        }
        private global::System.String _Type;
        partial void OnTypeChanging(global::System.String value);
        partial void OnTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DoctorId
        {
            get
            {
                return _DoctorId;
            }
            set
            {
                OnDoctorIdChanging(value);
                ReportPropertyChanging("DoctorId");
                _DoctorId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DoctorId");
                OnDoctorIdChanged();
            }
        }
        private global::System.Int32 _DoctorId;
        partial void OnDoctorIdChanging(global::System.Int32 value);
        partial void OnDoctorIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RxCareModel", "FK_DoctorPhone_Doctor", "Doctor")]
        public Doctor Doctor
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Doctor>("RxCareModel.FK_DoctorPhone_Doctor", "Doctor").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Doctor>("RxCareModel.FK_DoctorPhone_Doctor", "Doctor").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Doctor> DoctorReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Doctor>("RxCareModel.FK_DoctorPhone_Doctor", "Doctor");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Doctor>("RxCareModel.FK_DoctorPhone_Doctor", "Doctor", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RxCareModel", Name="InventoryItem")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class InventoryItem : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new InventoryItem object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static InventoryItem CreateInventoryItem(global::System.Int32 id)
        {
            InventoryItem inventoryItem = new InventoryItem();
            inventoryItem.Id = id;
            return inventoryItem;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ItemName
        {
            get
            {
                return _ItemName;
            }
            set
            {
                OnItemNameChanging(value);
                ReportPropertyChanging("ItemName");
                _ItemName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ItemName");
                OnItemNameChanged();
            }
        }
        private global::System.String _ItemName;
        partial void OnItemNameChanging(global::System.String value);
        partial void OnItemNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SupplierName
        {
            get
            {
                return _SupplierName;
            }
            set
            {
                OnSupplierNameChanging(value);
                ReportPropertyChanging("SupplierName");
                _SupplierName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SupplierName");
                OnSupplierNameChanged();
            }
        }
        private global::System.String _SupplierName;
        partial void OnSupplierNameChanging(global::System.String value);
        partial void OnSupplierNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Supplier
        {
            get
            {
                return _Supplier;
            }
            set
            {
                OnSupplierChanging(value);
                ReportPropertyChanging("Supplier");
                _Supplier = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Supplier");
                OnSupplierChanged();
            }
        }
        private global::System.String _Supplier;
        partial void OnSupplierChanging(global::System.String value);
        partial void OnSupplierChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> ReorderLevel
        {
            get
            {
                return _ReorderLevel;
            }
            set
            {
                OnReorderLevelChanging(value);
                ReportPropertyChanging("ReorderLevel");
                _ReorderLevel = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ReorderLevel");
                OnReorderLevelChanged();
            }
        }
        private Nullable<global::System.Decimal> _ReorderLevel;
        partial void OnReorderLevelChanging(Nullable<global::System.Decimal> value);
        partial void OnReorderLevelChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RxCareModel", "FK_InventoryQuantities_InventoryItems", "InventoryQuantities")]
        public EntityCollection<InventoryQuantity> InventoryQuantities
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<InventoryQuantity>("RxCareModel.FK_InventoryQuantities_InventoryItems", "InventoryQuantities");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<InventoryQuantity>("RxCareModel.FK_InventoryQuantities_InventoryItems", "InventoryQuantities", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RxCareModel", "FK_MedicineInventory_InventoryItems", "MedicineInventory")]
        public EntityCollection<MedicineInventory> MedicineInventories
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MedicineInventory>("RxCareModel.FK_MedicineInventory_InventoryItems", "MedicineInventory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MedicineInventory>("RxCareModel.FK_MedicineInventory_InventoryItems", "MedicineInventory", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RxCareModel", "MedicineInventories", "Medicine")]
        public EntityCollection<Medicine> Medicines
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Medicine>("RxCareModel.MedicineInventories", "Medicine");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Medicine>("RxCareModel.MedicineInventories", "Medicine", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RxCareModel", Name="InventoryQuantity")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class InventoryQuantity : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new InventoryQuantity object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="location">Initial value of the Location property.</param>
        /// <param name="quantity">Initial value of the Quantity property.</param>
        /// <param name="dateEntered">Initial value of the DateEntered property.</param>
        /// <param name="unit">Initial value of the Unit property.</param>
        /// <param name="cost">Initial value of the Cost property.</param>
        /// <param name="price">Initial value of the Price property.</param>
        /// <param name="inventoryItemId">Initial value of the InventoryItemId property.</param>
        public static InventoryQuantity CreateInventoryQuantity(global::System.Int32 id, global::System.String location, global::System.Decimal quantity, global::System.DateTime dateEntered, global::System.String unit, global::System.Decimal cost, global::System.Decimal price, global::System.Int32 inventoryItemId)
        {
            InventoryQuantity inventoryQuantity = new InventoryQuantity();
            inventoryQuantity.Id = id;
            inventoryQuantity.Location = location;
            inventoryQuantity.Quantity = quantity;
            inventoryQuantity.DateEntered = dateEntered;
            inventoryQuantity.Unit = unit;
            inventoryQuantity.Cost = cost;
            inventoryQuantity.Price = price;
            inventoryQuantity.InventoryItemId = inventoryItemId;
            return inventoryQuantity;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Location
        {
            get
            {
                return _Location;
            }
            set
            {
                OnLocationChanging(value);
                ReportPropertyChanging("Location");
                _Location = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Location");
                OnLocationChanged();
            }
        }
        private global::System.String _Location;
        partial void OnLocationChanging(global::System.String value);
        partial void OnLocationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Quantity
        {
            get
            {
                return _Quantity;
            }
            set
            {
                OnQuantityChanging(value);
                ReportPropertyChanging("Quantity");
                _Quantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Quantity");
                OnQuantityChanged();
            }
        }
        private global::System.Decimal _Quantity;
        partial void OnQuantityChanging(global::System.Decimal value);
        partial void OnQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateEntered
        {
            get
            {
                return _DateEntered;
            }
            set
            {
                OnDateEnteredChanging(value);
                ReportPropertyChanging("DateEntered");
                _DateEntered = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateEntered");
                OnDateEnteredChanged();
            }
        }
        private global::System.DateTime _DateEntered;
        partial void OnDateEnteredChanging(global::System.DateTime value);
        partial void OnDateEnteredChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Unit
        {
            get
            {
                return _Unit;
            }
            set
            {
                OnUnitChanging(value);
                ReportPropertyChanging("Unit");
                _Unit = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Unit");
                OnUnitChanged();
            }
        }
        private global::System.String _Unit;
        partial void OnUnitChanging(global::System.String value);
        partial void OnUnitChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Cost
        {
            get
            {
                return _Cost;
            }
            set
            {
                OnCostChanging(value);
                ReportPropertyChanging("Cost");
                _Cost = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Cost");
                OnCostChanged();
            }
        }
        private global::System.Decimal _Cost;
        partial void OnCostChanging(global::System.Decimal value);
        partial void OnCostChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Price
        {
            get
            {
                return _Price;
            }
            set
            {
                OnPriceChanging(value);
                ReportPropertyChanging("Price");
                _Price = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Price");
                OnPriceChanged();
            }
        }
        private global::System.Decimal _Price;
        partial void OnPriceChanging(global::System.Decimal value);
        partial void OnPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 InventoryItemId
        {
            get
            {
                return _InventoryItemId;
            }
            set
            {
                OnInventoryItemIdChanging(value);
                ReportPropertyChanging("InventoryItemId");
                _InventoryItemId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InventoryItemId");
                OnInventoryItemIdChanged();
            }
        }
        private global::System.Int32 _InventoryItemId;
        partial void OnInventoryItemIdChanging(global::System.Int32 value);
        partial void OnInventoryItemIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RxCareModel", "FK_InventoryQuantities_InventoryItems", "InventoryItems")]
        public InventoryItem InventoryItem
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InventoryItem>("RxCareModel.FK_InventoryQuantities_InventoryItems", "InventoryItems").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InventoryItem>("RxCareModel.FK_InventoryQuantities_InventoryItems", "InventoryItems").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<InventoryItem> InventoryItemReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InventoryItem>("RxCareModel.FK_InventoryQuantities_InventoryItems", "InventoryItems");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<InventoryItem>("RxCareModel.FK_InventoryQuantities_InventoryItems", "InventoryItems", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RxCareModel", "FK_InventoryQuantities_InventoryItems1", "InventoryItem")]
        public InventoryItem InventoryItem1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InventoryItem>("RxCareModel.FK_InventoryQuantities_InventoryItems1", "InventoryItem").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InventoryItem>("RxCareModel.FK_InventoryQuantities_InventoryItems1", "InventoryItem").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<InventoryItem> InventoryItem1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InventoryItem>("RxCareModel.FK_InventoryQuantities_InventoryItems1", "InventoryItem");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<InventoryItem>("RxCareModel.FK_InventoryQuantities_InventoryItems1", "InventoryItem", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RxCareModel", Name="Medicine")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Medicine : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Medicine object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static Medicine CreateMedicine(global::System.Int32 id)
        {
            Medicine medicine = new Medicine();
            medicine.Id = id;
            return medicine;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Brand
        {
            get
            {
                return _Brand;
            }
            set
            {
                OnBrandChanging(value);
                ReportPropertyChanging("Brand");
                _Brand = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Brand");
                OnBrandChanged();
            }
        }
        private global::System.String _Brand;
        partial void OnBrandChanging(global::System.String value);
        partial void OnBrandChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Generic
        {
            get
            {
                return _Generic;
            }
            set
            {
                OnGenericChanging(value);
                ReportPropertyChanging("Generic");
                _Generic = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Generic");
                OnGenericChanged();
            }
        }
        private global::System.String _Generic;
        partial void OnGenericChanging(global::System.String value);
        partial void OnGenericChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RxCareModel", "FK_MedicineContents_Medicine", "MedicineContents")]
        public EntityCollection<MedicineContent> MedicineContents
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MedicineContent>("RxCareModel.FK_MedicineContents_Medicine", "MedicineContents");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MedicineContent>("RxCareModel.FK_MedicineContents_Medicine", "MedicineContents", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RxCareModel", "FK_MedicineInventory_Medicine", "MedicineInventory")]
        public EntityCollection<MedicineInventory> MedicineInventories
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MedicineInventory>("RxCareModel.FK_MedicineInventory_Medicine", "MedicineInventory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MedicineInventory>("RxCareModel.FK_MedicineInventory_Medicine", "MedicineInventory", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RxCareModel", "FK_MedicineNegativeInteractions_Medicine", "MedicineNegativeInteractions")]
        public EntityCollection<MedicineNegativeInteraction> MedicineNegativeInteractions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MedicineNegativeInteraction>("RxCareModel.FK_MedicineNegativeInteractions_Medicine", "MedicineNegativeInteractions");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MedicineNegativeInteraction>("RxCareModel.FK_MedicineNegativeInteractions_Medicine", "MedicineNegativeInteractions", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RxCareModel", "FK_MedicineSideEffects_Medicine", "MedicineSideEffects")]
        public EntityCollection<MedicineSideEffect> MedicineSideEffects
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MedicineSideEffect>("RxCareModel.FK_MedicineSideEffects_Medicine", "MedicineSideEffects");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MedicineSideEffect>("RxCareModel.FK_MedicineSideEffects_Medicine", "MedicineSideEffects", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RxCareModel", "FK_MedicineUnitPrice_Medicine", "MedicineUnitPrice")]
        public EntityCollection<MedicineUnitPrice> MedicineUnitPrices
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MedicineUnitPrice>("RxCareModel.FK_MedicineUnitPrice_Medicine", "MedicineUnitPrice");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MedicineUnitPrice>("RxCareModel.FK_MedicineUnitPrice_Medicine", "MedicineUnitPrice", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RxCareModel", "FK_PresciptionDetails_Medicine", "PresciptionDetails")]
        public EntityCollection<PresciptionDetail> PresciptionDetails
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PresciptionDetail>("RxCareModel.FK_PresciptionDetails_Medicine", "PresciptionDetails");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PresciptionDetail>("RxCareModel.FK_PresciptionDetails_Medicine", "PresciptionDetails", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RxCareModel", "MedicineInventories", "InventoryItem")]
        public EntityCollection<InventoryItem> InventoryItems
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<InventoryItem>("RxCareModel.MedicineInventories", "InventoryItem");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<InventoryItem>("RxCareModel.MedicineInventories", "InventoryItem", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RxCareModel", Name="MedicineContent")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MedicineContent : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MedicineContent object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="content">Initial value of the Content property.</param>
        /// <param name="quantity">Initial value of the Quantity property.</param>
        /// <param name="medicineId">Initial value of the MedicineId property.</param>
        public static MedicineContent CreateMedicineContent(global::System.Int32 id, global::System.String content, global::System.Decimal quantity, global::System.Int32 medicineId)
        {
            MedicineContent medicineContent = new MedicineContent();
            medicineContent.Id = id;
            medicineContent.Content = content;
            medicineContent.Quantity = quantity;
            medicineContent.MedicineId = medicineId;
            return medicineContent;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Content
        {
            get
            {
                return _Content;
            }
            set
            {
                OnContentChanging(value);
                ReportPropertyChanging("Content");
                _Content = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Content");
                OnContentChanged();
            }
        }
        private global::System.String _Content;
        partial void OnContentChanging(global::System.String value);
        partial void OnContentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Quantity
        {
            get
            {
                return _Quantity;
            }
            set
            {
                OnQuantityChanging(value);
                ReportPropertyChanging("Quantity");
                _Quantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Quantity");
                OnQuantityChanged();
            }
        }
        private global::System.Decimal _Quantity;
        partial void OnQuantityChanging(global::System.Decimal value);
        partial void OnQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Unit
        {
            get
            {
                return _Unit;
            }
            set
            {
                OnUnitChanging(value);
                ReportPropertyChanging("Unit");
                _Unit = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Unit");
                OnUnitChanged();
            }
        }
        private global::System.String _Unit;
        partial void OnUnitChanging(global::System.String value);
        partial void OnUnitChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Percentage
        {
            get
            {
                return _Percentage;
            }
            set
            {
                OnPercentageChanging(value);
                ReportPropertyChanging("Percentage");
                _Percentage = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Percentage");
                OnPercentageChanged();
            }
        }
        private global::System.String _Percentage;
        partial void OnPercentageChanging(global::System.String value);
        partial void OnPercentageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MedicineId
        {
            get
            {
                return _MedicineId;
            }
            set
            {
                OnMedicineIdChanging(value);
                ReportPropertyChanging("MedicineId");
                _MedicineId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MedicineId");
                OnMedicineIdChanged();
            }
        }
        private global::System.Int32 _MedicineId;
        partial void OnMedicineIdChanging(global::System.Int32 value);
        partial void OnMedicineIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RxCareModel", "FK_MedicineContents_Medicine", "Medicine")]
        public Medicine Medicine
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Medicine>("RxCareModel.FK_MedicineContents_Medicine", "Medicine").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Medicine>("RxCareModel.FK_MedicineContents_Medicine", "Medicine").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Medicine> MedicineReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Medicine>("RxCareModel.FK_MedicineContents_Medicine", "Medicine");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Medicine>("RxCareModel.FK_MedicineContents_Medicine", "Medicine", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RxCareModel", Name="MedicineInventory")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MedicineInventory : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MedicineInventory object.
        /// </summary>
        /// <param name="medicineId">Initial value of the MedicineId property.</param>
        /// <param name="inventoryItemId">Initial value of the InventoryItemId property.</param>
        public static MedicineInventory CreateMedicineInventory(global::System.Int32 medicineId, global::System.Int32 inventoryItemId)
        {
            MedicineInventory medicineInventory = new MedicineInventory();
            medicineInventory.MedicineId = medicineId;
            medicineInventory.InventoryItemId = inventoryItemId;
            return medicineInventory;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MedicineId
        {
            get
            {
                return _MedicineId;
            }
            set
            {
                if (_MedicineId != value)
                {
                    OnMedicineIdChanging(value);
                    ReportPropertyChanging("MedicineId");
                    _MedicineId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MedicineId");
                    OnMedicineIdChanged();
                }
            }
        }
        private global::System.Int32 _MedicineId;
        partial void OnMedicineIdChanging(global::System.Int32 value);
        partial void OnMedicineIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 InventoryItemId
        {
            get
            {
                return _InventoryItemId;
            }
            set
            {
                if (_InventoryItemId != value)
                {
                    OnInventoryItemIdChanging(value);
                    ReportPropertyChanging("InventoryItemId");
                    _InventoryItemId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("InventoryItemId");
                    OnInventoryItemIdChanged();
                }
            }
        }
        private global::System.Int32 _InventoryItemId;
        partial void OnInventoryItemIdChanging(global::System.Int32 value);
        partial void OnInventoryItemIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RxCareModel", "FK_MedicineInventory_InventoryItems", "InventoryItems")]
        public InventoryItem InventoryItem
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InventoryItem>("RxCareModel.FK_MedicineInventory_InventoryItems", "InventoryItems").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InventoryItem>("RxCareModel.FK_MedicineInventory_InventoryItems", "InventoryItems").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<InventoryItem> InventoryItemReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InventoryItem>("RxCareModel.FK_MedicineInventory_InventoryItems", "InventoryItems");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<InventoryItem>("RxCareModel.FK_MedicineInventory_InventoryItems", "InventoryItems", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RxCareModel", "FK_MedicineInventory_Medicine", "Medicine")]
        public Medicine Medicine
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Medicine>("RxCareModel.FK_MedicineInventory_Medicine", "Medicine").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Medicine>("RxCareModel.FK_MedicineInventory_Medicine", "Medicine").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Medicine> MedicineReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Medicine>("RxCareModel.FK_MedicineInventory_Medicine", "Medicine");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Medicine>("RxCareModel.FK_MedicineInventory_Medicine", "Medicine", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RxCareModel", Name="MedicineNegativeInteraction")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MedicineNegativeInteraction : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MedicineNegativeInteraction object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="medicineId2">Initial value of the MedicineId2 property.</param>
        /// <param name="medicineId">Initial value of the MedicineId property.</param>
        public static MedicineNegativeInteraction CreateMedicineNegativeInteraction(global::System.Int32 id, global::System.Int32 medicineId2, global::System.Int32 medicineId)
        {
            MedicineNegativeInteraction medicineNegativeInteraction = new MedicineNegativeInteraction();
            medicineNegativeInteraction.Id = id;
            medicineNegativeInteraction.MedicineId2 = medicineId2;
            medicineNegativeInteraction.MedicineId = medicineId;
            return medicineNegativeInteraction;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MedicineId2
        {
            get
            {
                return _MedicineId2;
            }
            set
            {
                OnMedicineId2Changing(value);
                ReportPropertyChanging("MedicineId2");
                _MedicineId2 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MedicineId2");
                OnMedicineId2Changed();
            }
        }
        private global::System.Int32 _MedicineId2;
        partial void OnMedicineId2Changing(global::System.Int32 value);
        partial void OnMedicineId2Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MedicineId
        {
            get
            {
                return _MedicineId;
            }
            set
            {
                OnMedicineIdChanging(value);
                ReportPropertyChanging("MedicineId");
                _MedicineId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MedicineId");
                OnMedicineIdChanged();
            }
        }
        private global::System.Int32 _MedicineId;
        partial void OnMedicineIdChanging(global::System.Int32 value);
        partial void OnMedicineIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RxCareModel", "FK_MedicineNegativeInteractions_Medicine", "Medicine")]
        public Medicine Medicine
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Medicine>("RxCareModel.FK_MedicineNegativeInteractions_Medicine", "Medicine").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Medicine>("RxCareModel.FK_MedicineNegativeInteractions_Medicine", "Medicine").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Medicine> MedicineReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Medicine>("RxCareModel.FK_MedicineNegativeInteractions_Medicine", "Medicine");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Medicine>("RxCareModel.FK_MedicineNegativeInteractions_Medicine", "Medicine", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RxCareModel", Name="MedicineSideEffect")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MedicineSideEffect : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MedicineSideEffect object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="medicineId">Initial value of the MedicineId property.</param>
        public static MedicineSideEffect CreateMedicineSideEffect(global::System.Int32 id, global::System.Int32 medicineId)
        {
            MedicineSideEffect medicineSideEffect = new MedicineSideEffect();
            medicineSideEffect.Id = id;
            medicineSideEffect.MedicineId = medicineId;
            return medicineSideEffect;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SideEffect
        {
            get
            {
                return _SideEffect;
            }
            set
            {
                OnSideEffectChanging(value);
                ReportPropertyChanging("SideEffect");
                _SideEffect = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SideEffect");
                OnSideEffectChanged();
            }
        }
        private global::System.String _SideEffect;
        partial void OnSideEffectChanging(global::System.String value);
        partial void OnSideEffectChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Action
        {
            get
            {
                return _Action;
            }
            set
            {
                OnActionChanging(value);
                ReportPropertyChanging("Action");
                _Action = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Action");
                OnActionChanged();
            }
        }
        private global::System.String _Action;
        partial void OnActionChanging(global::System.String value);
        partial void OnActionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MedicineId
        {
            get
            {
                return _MedicineId;
            }
            set
            {
                OnMedicineIdChanging(value);
                ReportPropertyChanging("MedicineId");
                _MedicineId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MedicineId");
                OnMedicineIdChanged();
            }
        }
        private global::System.Int32 _MedicineId;
        partial void OnMedicineIdChanging(global::System.Int32 value);
        partial void OnMedicineIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RxCareModel", "FK_MedicineSideEffects_Medicine", "Medicine")]
        public Medicine Medicine
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Medicine>("RxCareModel.FK_MedicineSideEffects_Medicine", "Medicine").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Medicine>("RxCareModel.FK_MedicineSideEffects_Medicine", "Medicine").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Medicine> MedicineReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Medicine>("RxCareModel.FK_MedicineSideEffects_Medicine", "Medicine");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Medicine>("RxCareModel.FK_MedicineSideEffects_Medicine", "Medicine", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RxCareModel", Name="MedicineUnitPrice")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MedicineUnitPrice : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MedicineUnitPrice object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="unit">Initial value of the Unit property.</param>
        /// <param name="price">Initial value of the Price property.</param>
        /// <param name="medicineID">Initial value of the MedicineID property.</param>
        public static MedicineUnitPrice CreateMedicineUnitPrice(global::System.Int32 id, global::System.String unit, global::System.Decimal price, global::System.Int32 medicineID)
        {
            MedicineUnitPrice medicineUnitPrice = new MedicineUnitPrice();
            medicineUnitPrice.Id = id;
            medicineUnitPrice.Unit = unit;
            medicineUnitPrice.Price = price;
            medicineUnitPrice.MedicineID = medicineID;
            return medicineUnitPrice;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Unit
        {
            get
            {
                return _Unit;
            }
            set
            {
                OnUnitChanging(value);
                ReportPropertyChanging("Unit");
                _Unit = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Unit");
                OnUnitChanged();
            }
        }
        private global::System.String _Unit;
        partial void OnUnitChanging(global::System.String value);
        partial void OnUnitChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Price
        {
            get
            {
                return _Price;
            }
            set
            {
                OnPriceChanging(value);
                ReportPropertyChanging("Price");
                _Price = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Price");
                OnPriceChanged();
            }
        }
        private global::System.Decimal _Price;
        partial void OnPriceChanging(global::System.Decimal value);
        partial void OnPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MedicineID
        {
            get
            {
                return _MedicineID;
            }
            set
            {
                OnMedicineIDChanging(value);
                ReportPropertyChanging("MedicineID");
                _MedicineID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MedicineID");
                OnMedicineIDChanged();
            }
        }
        private global::System.Int32 _MedicineID;
        partial void OnMedicineIDChanging(global::System.Int32 value);
        partial void OnMedicineIDChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RxCareModel", "FK_MedicineUnitPrice_Medicine", "Medicine")]
        public Medicine Medicine
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Medicine>("RxCareModel.FK_MedicineUnitPrice_Medicine", "Medicine").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Medicine>("RxCareModel.FK_MedicineUnitPrice_Medicine", "Medicine").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Medicine> MedicineReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Medicine>("RxCareModel.FK_MedicineUnitPrice_Medicine", "Medicine");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Medicine>("RxCareModel.FK_MedicineUnitPrice_Medicine", "Medicine", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RxCareModel", "FK_PresciptionDetails_MedicineUnitPrice", "PresciptionDetails")]
        public EntityCollection<PresciptionDetail> PresciptionDetails
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PresciptionDetail>("RxCareModel.FK_PresciptionDetails_MedicineUnitPrice", "PresciptionDetails");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PresciptionDetail>("RxCareModel.FK_PresciptionDetails_MedicineUnitPrice", "PresciptionDetails", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RxCareModel", Name="Patient")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Patient : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Patient object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="property1">Initial value of the Property1 property.</param>
        public static Patient CreatePatient(global::System.Int32 id, global::System.String property1)
        {
            Patient patient = new Patient();
            patient.Id = id;
            patient.Property1 = property1;
            return patient;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MiddleName
        {
            get
            {
                return _MiddleName;
            }
            set
            {
                OnMiddleNameChanging(value);
                ReportPropertyChanging("MiddleName");
                _MiddleName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MiddleName");
                OnMiddleNameChanged();
            }
        }
        private global::System.String _MiddleName;
        partial void OnMiddleNameChanging(global::System.String value);
        partial void OnMiddleNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                OnLastNameChanging(value);
                ReportPropertyChanging("LastName");
                _LastName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LastName");
                OnLastNameChanged();
            }
        }
        private global::System.String _LastName;
        partial void OnLastNameChanging(global::System.String value);
        partial void OnLastNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateofBirth
        {
            get
            {
                return _DateofBirth;
            }
            set
            {
                OnDateofBirthChanging(value);
                ReportPropertyChanging("DateofBirth");
                _DateofBirth = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateofBirth");
                OnDateofBirthChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateofBirth;
        partial void OnDateofBirthChanging(Nullable<global::System.DateTime> value);
        partial void OnDateofBirthChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BloodType
        {
            get
            {
                return _BloodType;
            }
            set
            {
                OnBloodTypeChanging(value);
                ReportPropertyChanging("BloodType");
                _BloodType = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BloodType");
                OnBloodTypeChanged();
            }
        }
        private global::System.String _BloodType;
        partial void OnBloodTypeChanging(global::System.String value);
        partial void OnBloodTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Sex
        {
            get
            {
                return _Sex;
            }
            set
            {
                OnSexChanging(value);
                ReportPropertyChanging("Sex");
                _Sex = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Sex");
                OnSexChanged();
            }
        }
        private global::System.String _Sex;
        partial void OnSexChanging(global::System.String value);
        partial void OnSexChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Property1
        {
            get
            {
                return _Property1;
            }
            set
            {
                OnProperty1Changing(value);
                ReportPropertyChanging("Property1");
                _Property1 = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Property1");
                OnProperty1Changed();
            }
        }
        private global::System.String _Property1;
        partial void OnProperty1Changing(global::System.String value);
        partial void OnProperty1Changed();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RxCareModel", "FK_PatientAddress_Patient", "PatientAddress")]
        public EntityCollection<PatientAddress> PatientAddresses
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PatientAddress>("RxCareModel.FK_PatientAddress_Patient", "PatientAddress");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PatientAddress>("RxCareModel.FK_PatientAddress_Patient", "PatientAddress", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RxCareModel", "FK_PatientConditions_Patient", "PatientConditions")]
        public EntityCollection<PatientCondition> PatientConditions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PatientCondition>("RxCareModel.FK_PatientConditions_Patient", "PatientConditions");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PatientCondition>("RxCareModel.FK_PatientConditions_Patient", "PatientConditions", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RxCareModel", "FK_PatientPhone_Patient", "PatientPhone")]
        public EntityCollection<PatientPhone> PatientPhones
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PatientPhone>("RxCareModel.FK_PatientPhone_Patient", "PatientPhone");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PatientPhone>("RxCareModel.FK_PatientPhone_Patient", "PatientPhone", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RxCareModel", "FK_Prescription_Patient1", "Prescription")]
        public EntityCollection<Prescription> Prescriptions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Prescription>("RxCareModel.FK_Prescription_Patient1", "Prescription");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Prescription>("RxCareModel.FK_Prescription_Patient1", "Prescription", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RxCareModel", Name="PatientAddress")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PatientAddress : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PatientAddress object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="address">Initial value of the Address property.</param>
        /// <param name="patientId">Initial value of the PatientId property.</param>
        public static PatientAddress CreatePatientAddress(global::System.Int32 id, global::System.String address, global::System.Int32 patientId)
        {
            PatientAddress patientAddress = new PatientAddress();
            patientAddress.Id = id;
            patientAddress.Address = address;
            patientAddress.PatientId = patientId;
            return patientAddress;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Address
        {
            get
            {
                return _Address;
            }
            set
            {
                OnAddressChanging(value);
                ReportPropertyChanging("Address");
                _Address = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Address");
                OnAddressChanged();
            }
        }
        private global::System.String _Address;
        partial void OnAddressChanging(global::System.String value);
        partial void OnAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Line1
        {
            get
            {
                return _Line1;
            }
            set
            {
                OnLine1Changing(value);
                ReportPropertyChanging("Line1");
                _Line1 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Line1");
                OnLine1Changed();
            }
        }
        private global::System.String _Line1;
        partial void OnLine1Changing(global::System.String value);
        partial void OnLine1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Parish
        {
            get
            {
                return _Parish;
            }
            set
            {
                OnParishChanging(value);
                ReportPropertyChanging("Parish");
                _Parish = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Parish");
                OnParishChanged();
            }
        }
        private global::System.String _Parish;
        partial void OnParishChanging(global::System.String value);
        partial void OnParishChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String City
        {
            get
            {
                return _City;
            }
            set
            {
                OnCityChanging(value);
                ReportPropertyChanging("City");
                _City = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("City");
                OnCityChanged();
            }
        }
        private global::System.String _City;
        partial void OnCityChanging(global::System.String value);
        partial void OnCityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PatientId
        {
            get
            {
                return _PatientId;
            }
            set
            {
                OnPatientIdChanging(value);
                ReportPropertyChanging("PatientId");
                _PatientId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PatientId");
                OnPatientIdChanged();
            }
        }
        private global::System.Int32 _PatientId;
        partial void OnPatientIdChanging(global::System.Int32 value);
        partial void OnPatientIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RxCareModel", "FK_PatientAddress_Patient", "Patient")]
        public Patient Patient
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Patient>("RxCareModel.FK_PatientAddress_Patient", "Patient").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Patient>("RxCareModel.FK_PatientAddress_Patient", "Patient").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Patient> PatientReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Patient>("RxCareModel.FK_PatientAddress_Patient", "Patient");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Patient>("RxCareModel.FK_PatientAddress_Patient", "Patient", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RxCareModel", Name="PatientCondition")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PatientCondition : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PatientCondition object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="dateEntered">Initial value of the DateEntered property.</param>
        /// <param name="conditionsId">Initial value of the ConditionsId property.</param>
        /// <param name="patientId">Initial value of the PatientId property.</param>
        public static PatientCondition CreatePatientCondition(global::System.Int32 id, global::System.DateTime dateEntered, global::System.Int32 conditionsId, global::System.Int32 patientId)
        {
            PatientCondition patientCondition = new PatientCondition();
            patientCondition.Id = id;
            patientCondition.DateEntered = dateEntered;
            patientCondition.ConditionsId = conditionsId;
            patientCondition.PatientId = patientId;
            return patientCondition;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateEntered
        {
            get
            {
                return _DateEntered;
            }
            set
            {
                OnDateEnteredChanging(value);
                ReportPropertyChanging("DateEntered");
                _DateEntered = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateEntered");
                OnDateEnteredChanged();
            }
        }
        private global::System.DateTime _DateEntered;
        partial void OnDateEnteredChanging(global::System.DateTime value);
        partial void OnDateEnteredChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Notes
        {
            get
            {
                return _Notes;
            }
            set
            {
                OnNotesChanging(value);
                ReportPropertyChanging("Notes");
                _Notes = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Notes");
                OnNotesChanged();
            }
        }
        private global::System.String _Notes;
        partial void OnNotesChanging(global::System.String value);
        partial void OnNotesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ConditionsId
        {
            get
            {
                return _ConditionsId;
            }
            set
            {
                OnConditionsIdChanging(value);
                ReportPropertyChanging("ConditionsId");
                _ConditionsId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ConditionsId");
                OnConditionsIdChanged();
            }
        }
        private global::System.Int32 _ConditionsId;
        partial void OnConditionsIdChanging(global::System.Int32 value);
        partial void OnConditionsIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PatientId
        {
            get
            {
                return _PatientId;
            }
            set
            {
                OnPatientIdChanging(value);
                ReportPropertyChanging("PatientId");
                _PatientId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PatientId");
                OnPatientIdChanged();
            }
        }
        private global::System.Int32 _PatientId;
        partial void OnPatientIdChanging(global::System.Int32 value);
        partial void OnPatientIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RxCareModel", "FK_PatientConditions_Conditions", "Conditions")]
        public Condition Condition
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Condition>("RxCareModel.FK_PatientConditions_Conditions", "Conditions").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Condition>("RxCareModel.FK_PatientConditions_Conditions", "Conditions").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Condition> ConditionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Condition>("RxCareModel.FK_PatientConditions_Conditions", "Conditions");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Condition>("RxCareModel.FK_PatientConditions_Conditions", "Conditions", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RxCareModel", "FK_PatientConditions_Patient", "Patient")]
        public Patient Patient
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Patient>("RxCareModel.FK_PatientConditions_Patient", "Patient").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Patient>("RxCareModel.FK_PatientConditions_Patient", "Patient").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Patient> PatientReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Patient>("RxCareModel.FK_PatientConditions_Patient", "Patient");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Patient>("RxCareModel.FK_PatientConditions_Patient", "Patient", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RxCareModel", Name="PatientPhone")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PatientPhone : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PatientPhone object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="phoneNumber">Initial value of the PhoneNumber property.</param>
        /// <param name="patientId">Initial value of the PatientId property.</param>
        public static PatientPhone CreatePatientPhone(global::System.Int32 id, global::System.String phoneNumber, global::System.Int32 patientId)
        {
            PatientPhone patientPhone = new PatientPhone();
            patientPhone.Id = id;
            patientPhone.PhoneNumber = phoneNumber;
            patientPhone.PatientId = patientId;
            return patientPhone;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PhoneNumber
        {
            get
            {
                return _PhoneNumber;
            }
            set
            {
                OnPhoneNumberChanging(value);
                ReportPropertyChanging("PhoneNumber");
                _PhoneNumber = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PhoneNumber");
                OnPhoneNumberChanged();
            }
        }
        private global::System.String _PhoneNumber;
        partial void OnPhoneNumberChanging(global::System.String value);
        partial void OnPhoneNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Type
        {
            get
            {
                return _Type;
            }
            set
            {
                OnTypeChanging(value);
                ReportPropertyChanging("Type");
                _Type = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Type");
                OnTypeChanged();
            }
        }
        private global::System.String _Type;
        partial void OnTypeChanging(global::System.String value);
        partial void OnTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PatientId
        {
            get
            {
                return _PatientId;
            }
            set
            {
                OnPatientIdChanging(value);
                ReportPropertyChanging("PatientId");
                _PatientId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PatientId");
                OnPatientIdChanged();
            }
        }
        private global::System.Int32 _PatientId;
        partial void OnPatientIdChanging(global::System.Int32 value);
        partial void OnPatientIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RxCareModel", "FK_PatientPhone_Patient", "Patient")]
        public Patient Patient
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Patient>("RxCareModel.FK_PatientPhone_Patient", "Patient").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Patient>("RxCareModel.FK_PatientPhone_Patient", "Patient").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Patient> PatientReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Patient>("RxCareModel.FK_PatientPhone_Patient", "Patient");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Patient>("RxCareModel.FK_PatientPhone_Patient", "Patient", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RxCareModel", Name="PresciptionDetail")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PresciptionDetail : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PresciptionDetail object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="medicineId">Initial value of the MedicineId property.</param>
        /// <param name="unit">Initial value of the Unit property.</param>
        /// <param name="prescriptionId">Initial value of the PrescriptionId property.</param>
        public static PresciptionDetail CreatePresciptionDetail(global::System.Int32 id, global::System.Int32 medicineId, global::System.Int32 unit, global::System.Int32 prescriptionId)
        {
            PresciptionDetail presciptionDetail = new PresciptionDetail();
            presciptionDetail.Id = id;
            presciptionDetail.MedicineId = medicineId;
            presciptionDetail.Unit = unit;
            presciptionDetail.PrescriptionId = prescriptionId;
            return presciptionDetail;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Days
        {
            get
            {
                return _Days;
            }
            set
            {
                OnDaysChanging(value);
                ReportPropertyChanging("Days");
                _Days = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Days");
                OnDaysChanged();
            }
        }
        private Nullable<global::System.Int32> _Days;
        partial void OnDaysChanging(Nullable<global::System.Int32> value);
        partial void OnDaysChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Times
        {
            get
            {
                return _Times;
            }
            set
            {
                OnTimesChanging(value);
                ReportPropertyChanging("Times");
                _Times = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Times");
                OnTimesChanged();
            }
        }
        private Nullable<global::System.Int32> _Times;
        partial void OnTimesChanging(Nullable<global::System.Int32> value);
        partial void OnTimesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Dosage
        {
            get
            {
                return _Dosage;
            }
            set
            {
                OnDosageChanging(value);
                ReportPropertyChanging("Dosage");
                _Dosage = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Dosage");
                OnDosageChanged();
            }
        }
        private Nullable<global::System.Decimal> _Dosage;
        partial void OnDosageChanging(Nullable<global::System.Decimal> value);
        partial void OnDosageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comments
        {
            get
            {
                return _Comments;
            }
            set
            {
                OnCommentsChanging(value);
                ReportPropertyChanging("Comments");
                _Comments = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comments");
                OnCommentsChanged();
            }
        }
        private global::System.String _Comments;
        partial void OnCommentsChanging(global::System.String value);
        partial void OnCommentsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Price
        {
            get
            {
                return _Price;
            }
            set
            {
                OnPriceChanging(value);
                ReportPropertyChanging("Price");
                _Price = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Price");
                OnPriceChanged();
            }
        }
        private Nullable<global::System.Decimal> _Price;
        partial void OnPriceChanging(Nullable<global::System.Decimal> value);
        partial void OnPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MedicineId
        {
            get
            {
                return _MedicineId;
            }
            set
            {
                OnMedicineIdChanging(value);
                ReportPropertyChanging("MedicineId");
                _MedicineId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MedicineId");
                OnMedicineIdChanged();
            }
        }
        private global::System.Int32 _MedicineId;
        partial void OnMedicineIdChanging(global::System.Int32 value);
        partial void OnMedicineIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Unit
        {
            get
            {
                return _Unit;
            }
            set
            {
                OnUnitChanging(value);
                ReportPropertyChanging("Unit");
                _Unit = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Unit");
                OnUnitChanged();
            }
        }
        private global::System.Int32 _Unit;
        partial void OnUnitChanging(global::System.Int32 value);
        partial void OnUnitChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PrescriptionId
        {
            get
            {
                return _PrescriptionId;
            }
            set
            {
                OnPrescriptionIdChanging(value);
                ReportPropertyChanging("PrescriptionId");
                _PrescriptionId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PrescriptionId");
                OnPrescriptionIdChanged();
            }
        }
        private global::System.Int32 _PrescriptionId;
        partial void OnPrescriptionIdChanging(global::System.Int32 value);
        partial void OnPrescriptionIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RxCareModel", "FK_PresciptionDetails_Medicine", "Medicine")]
        public Medicine Medicine
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Medicine>("RxCareModel.FK_PresciptionDetails_Medicine", "Medicine").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Medicine>("RxCareModel.FK_PresciptionDetails_Medicine", "Medicine").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Medicine> MedicineReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Medicine>("RxCareModel.FK_PresciptionDetails_Medicine", "Medicine");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Medicine>("RxCareModel.FK_PresciptionDetails_Medicine", "Medicine", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RxCareModel", "FK_PresciptionDetails_MedicineUnitPrice", "MedicineUnitPrice")]
        public MedicineUnitPrice MedicineUnit
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MedicineUnitPrice>("RxCareModel.FK_PresciptionDetails_MedicineUnitPrice", "MedicineUnitPrice").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MedicineUnitPrice>("RxCareModel.FK_PresciptionDetails_MedicineUnitPrice", "MedicineUnitPrice").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MedicineUnitPrice> MedicineUnitReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MedicineUnitPrice>("RxCareModel.FK_PresciptionDetails_MedicineUnitPrice", "MedicineUnitPrice");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MedicineUnitPrice>("RxCareModel.FK_PresciptionDetails_MedicineUnitPrice", "MedicineUnitPrice", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RxCareModel", "FK_PresciptionDetails_Prescription", "Prescription")]
        public Prescription Prescription
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Prescription>("RxCareModel.FK_PresciptionDetails_Prescription", "Prescription").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Prescription>("RxCareModel.FK_PresciptionDetails_Prescription", "Prescription").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Prescription> PrescriptionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Prescription>("RxCareModel.FK_PresciptionDetails_Prescription", "Prescription");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Prescription>("RxCareModel.FK_PresciptionDetails_Prescription", "Prescription", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RxCareModel", Name="Prescription")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Prescription : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Prescription object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="prescriptionNumber">Initial value of the PrescriptionNumber property.</param>
        /// <param name="doctorId">Initial value of the DoctorId property.</param>
        /// <param name="patientId">Initial value of the PatientId property.</param>
        public static Prescription CreatePrescription(global::System.Int32 id, global::System.String prescriptionNumber, global::System.Int32 doctorId, global::System.Int32 patientId)
        {
            Prescription prescription = new Prescription();
            prescription.Id = id;
            prescription.PrescriptionNumber = prescriptionNumber;
            prescription.DoctorId = doctorId;
            prescription.PatientId = patientId;
            return prescription;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PrescriptionNumber
        {
            get
            {
                return _PrescriptionNumber;
            }
            set
            {
                OnPrescriptionNumberChanging(value);
                ReportPropertyChanging("PrescriptionNumber");
                _PrescriptionNumber = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PrescriptionNumber");
                OnPrescriptionNumberChanged();
            }
        }
        private global::System.String _PrescriptionNumber;
        partial void OnPrescriptionNumberChanging(global::System.String value);
        partial void OnPrescriptionNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Instructions
        {
            get
            {
                return _Instructions;
            }
            set
            {
                OnInstructionsChanging(value);
                ReportPropertyChanging("Instructions");
                _Instructions = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Instructions");
                OnInstructionsChanged();
            }
        }
        private global::System.String _Instructions;
        partial void OnInstructionsChanging(global::System.String value);
        partial void OnInstructionsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateEntered
        {
            get
            {
                return _DateEntered;
            }
            set
            {
                OnDateEnteredChanging(value);
                ReportPropertyChanging("DateEntered");
                _DateEntered = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateEntered");
                OnDateEnteredChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateEntered;
        partial void OnDateEnteredChanging(Nullable<global::System.DateTime> value);
        partial void OnDateEnteredChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DoctorId
        {
            get
            {
                return _DoctorId;
            }
            set
            {
                OnDoctorIdChanging(value);
                ReportPropertyChanging("DoctorId");
                _DoctorId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DoctorId");
                OnDoctorIdChanged();
            }
        }
        private global::System.Int32 _DoctorId;
        partial void OnDoctorIdChanging(global::System.Int32 value);
        partial void OnDoctorIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PatientId
        {
            get
            {
                return _PatientId;
            }
            set
            {
                OnPatientIdChanging(value);
                ReportPropertyChanging("PatientId");
                _PatientId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PatientId");
                OnPatientIdChanged();
            }
        }
        private global::System.Int32 _PatientId;
        partial void OnPatientIdChanging(global::System.Int32 value);
        partial void OnPatientIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RxCareModel", "FK_PresciptionDetails_Prescription", "PresciptionDetails")]
        public EntityCollection<PresciptionDetail> PresciptionDetails
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PresciptionDetail>("RxCareModel.FK_PresciptionDetails_Prescription", "PresciptionDetails");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PresciptionDetail>("RxCareModel.FK_PresciptionDetails_Prescription", "PresciptionDetails", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RxCareModel", "FK_Prescription_Doctor1", "Doctor")]
        public Doctor Doctor
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Doctor>("RxCareModel.FK_Prescription_Doctor1", "Doctor").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Doctor>("RxCareModel.FK_Prescription_Doctor1", "Doctor").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Doctor> DoctorReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Doctor>("RxCareModel.FK_Prescription_Doctor1", "Doctor");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Doctor>("RxCareModel.FK_Prescription_Doctor1", "Doctor", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RxCareModel", "FK_Prescription_Patient1", "Patient")]
        public Patient Patient
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Patient>("RxCareModel.FK_Prescription_Patient1", "Patient").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Patient>("RxCareModel.FK_Prescription_Patient1", "Patient").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Patient> PatientReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Patient>("RxCareModel.FK_Prescription_Patient1", "Patient");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Patient>("RxCareModel.FK_Prescription_Patient1", "Patient", value);
                }
            }
        }

        #endregion

    }

    #endregion

}
