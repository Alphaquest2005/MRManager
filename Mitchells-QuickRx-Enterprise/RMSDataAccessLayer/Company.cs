//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace RMSDataAccessLayer
{
    using System.ComponentModel.DataAnnotations;
    using System.ComponentModel;
    using TrackableEntities;
    using System.ComponentModel.DataAnnotations.Schema;
    using System.Runtime.Serialization;
    using System.Collections.ObjectModel;

    using System;
    using System.Collections.Generic;
    using TrackableEntities.Client;
    
    public partial class Company : BaseEntity<Company>
    {
        
        public Company()
        {
            this.Store = new ObservableCollection<Store>();
            CustomStartup();
            CustomStartup2();
            this.PropertyChanged += UpdatePropertyChanged;
            
        }
        partial void CustomStartup();
        partial void CustomStartup2();
    
            private void UpdatePropertyChanged(object sender, PropertyChangedEventArgs e)
            {
                if (!string.IsNullOrEmpty(e.PropertyName) && (!Environment.StackTrace.Contains("Internal.Materialization")) && TrackingState == TrackingState.Unchanged)
                {
                    TrackingState = TrackingState.Modified;
                }
            }
    
            
            ChangeTrackingCollection<Company> _changeTracker;
            [NotMapped]
            [IgnoreDataMember]
            public ChangeTrackingCollection<Company> ChangeTracker
            {
                get
                {
                    return _changeTracker;
                }
            }
            
            public new void StartTracking()
            {
                _changeTracker = new ChangeTrackingCollection<Company>(this);
            }
        [DataMember]
                    [Required(ErrorMessage="CompanyId is required")]
    	public int CompanyId
    	{ 
    		get { return _CompanyId; }
    		set
    		{
    			if (Equals(value, _CompanyId)) return;
    			_CompanyId = value;
                ValidateModelProperty(this, value);
    			NotifyPropertyChanged();
    		}
    	}
    	private int _CompanyId;
        [DataMember]
                    [Required(ErrorMessage="CompanyName is required")]
    	public string CompanyName
    	{ 
    		get { return _CompanyName; }
    		set
    		{
    			if (Equals(value, _CompanyName)) return;
    			_CompanyName = value;
                ValidateModelProperty(this, value);
    			NotifyPropertyChanged();
    		}
    	}
    	private string _CompanyName;
        [DataMember]
                    [Required(ErrorMessage="Address is required")]
    	public string Address
    	{ 
    		get { return _Address; }
    		set
    		{
    			if (Equals(value, _Address)) return;
    			_Address = value;
                ValidateModelProperty(this, value);
    			NotifyPropertyChanged();
    		}
    	}
    	private string _Address;
        [DataMember]
        	public string Address1
    	{ 
    		get { return _Address1; }
    		set
    		{
    			if (Equals(value, _Address1)) return;
    			_Address1 = value;
                ValidateModelProperty(this, value);
    			NotifyPropertyChanged();
    		}
    	}
    	private string _Address1;
        [DataMember]
                    [Required(ErrorMessage="SoftwareName is required")]
    	public string SoftwareName
    	{ 
    		get { return _SoftwareName; }
    		set
    		{
    			if (Equals(value, _SoftwareName)) return;
    			_SoftwareName = value;
                ValidateModelProperty(this, value);
    			NotifyPropertyChanged();
    		}
    	}
    	private string _SoftwareName;
        [DataMember]
                    [Required(ErrorMessage="PhoneNumber is required")]
    	public string PhoneNumber
    	{ 
    		get { return _PhoneNumber; }
    		set
    		{
    			if (Equals(value, _PhoneNumber)) return;
    			_PhoneNumber = value;
                ValidateModelProperty(this, value);
    			NotifyPropertyChanged();
    		}
    	}
    	private string _PhoneNumber;
        [DataMember]
                    [Required(ErrorMessage="Motto is required")]
    	public string Motto
    	{ 
    		get { return _Motto; }
    		set
    		{
    			if (Equals(value, _Motto)) return;
    			_Motto = value;
                ValidateModelProperty(this, value);
    			NotifyPropertyChanged();
    		}
    	}
    	private string _Motto;
        [DataMember]
        	public byte[] EntryTimeStamp
    	{ 
    		get { return _EntryTimeStamp; }
    		set
    		{
    			if (Equals(value, _EntryTimeStamp)) return;
    			_EntryTimeStamp = value;
                ValidateModelProperty(this, value);
    			NotifyPropertyChanged();
    		}
    	}
    	private byte[] _EntryTimeStamp;
        [DataMember]
    	public ObservableCollection<Store> Store
    	{
    		get { return _Store; }
    		set
    		{
    			if (Equals(value, _Store)) return;
    			_Store = value;
    			NotifyPropertyChanged();
    		}
    	}
    	private ObservableCollection<Store> _Store;
    }
}
