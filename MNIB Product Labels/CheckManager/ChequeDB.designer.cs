#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CheckManager
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.Runtime.Serialization;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="CheckManager")]
	public partial class ChequeDBDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAuthorized(Authorized instance);
    partial void UpdateAuthorized(Authorized instance);
    partial void DeleteAuthorized(Authorized instance);
    partial void InsertPermission(Permission instance);
    partial void UpdatePermission(Permission instance);
    partial void DeletePermission(Permission instance);
    partial void InsertPrepared(Prepared instance);
    partial void UpdatePrepared(Prepared instance);
    partial void DeletePrepared(Prepared instance);
    partial void InsertUserPermission(UserPermission instance);
    partial void UpdateUserPermission(UserPermission instance);
    partial void DeleteUserPermission(UserPermission instance);
    partial void InsertVoucher(Voucher instance);
    partial void UpdateVoucher(Voucher instance);
    partial void DeleteVoucher(Voucher instance);
    partial void InsertUserLog(UserLog instance);
    partial void UpdateUserLog(UserLog instance);
    partial void DeleteUserLog(UserLog instance);
    partial void InsertUser(User instance);
    partial void UpdateUser(User instance);
    partial void DeleteUser(User instance);
    partial void InsertDisbursed(Disbursed instance);
    partial void UpdateDisbursed(Disbursed instance);
    partial void DeleteDisbursed(Disbursed instance);
    partial void InsertPayee(Payee instance);
    partial void UpdatePayee(Payee instance);
    partial void DeletePayee(Payee instance);
    #endregion
		
		public ChequeDBDataContext() : 
				base(global::CheckManager.Properties.Settings.Default.CheckManagerConnectionString1, mappingSource)
		{
			OnCreated();
		}
		
		public ChequeDBDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ChequeDBDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ChequeDBDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ChequeDBDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Authorized> Authorizeds
		{
			get
			{
				return this.GetTable<Authorized>();
			}
		}
		
		public System.Data.Linq.Table<Permission> Permissions
		{
			get
			{
				return this.GetTable<Permission>();
			}
		}
		
		public System.Data.Linq.Table<Prepared> Prepareds
		{
			get
			{
				return this.GetTable<Prepared>();
			}
		}
		
		public System.Data.Linq.Table<UserPermission> UserPermissions
		{
			get
			{
				return this.GetTable<UserPermission>();
			}
		}
		
		public System.Data.Linq.Table<Voucher> Vouchers
		{
			get
			{
				return this.GetTable<Voucher>();
			}
		}
		
		public System.Data.Linq.Table<IdType> IdTypes
		{
			get
			{
				return this.GetTable<IdType>();
			}
		}
		
		public System.Data.Linq.Table<UserLog> UserLogs
		{
			get
			{
				return this.GetTable<UserLog>();
			}
		}
		
		public System.Data.Linq.Table<User> Users
		{
			get
			{
				return this.GetTable<User>();
			}
		}
		
		public System.Data.Linq.Table<IdType1> IdType1s
		{
			get
			{
				return this.GetTable<IdType1>();
			}
		}
		
		public System.Data.Linq.Table<Disbursed> Disburseds
		{
			get
			{
				return this.GetTable<Disbursed>();
			}
		}
		
		public System.Data.Linq.Table<Payee> Payees
		{
			get
			{
				return this.GetTable<Payee>();
			}
		}
		
		public System.Data.Linq.Table<Cheque> Cheques
		{
			get
			{
				return this.GetTable<Cheque>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Authorized")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class Authorized : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.DateTime _DateAuthorized;
		
		private int _AuthorizedBy;
		
		private int _VoucherId;
		
		private EntityRef<Voucher> _Voucher;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnDateAuthorizedChanging(System.DateTime value);
    partial void OnDateAuthorizedChanged();
    partial void OnAuthorizedByChanging(int value);
    partial void OnAuthorizedByChanged();
    partial void OnVoucherIdChanging(int value);
    partial void OnVoucherIdChanged();
    #endregion
		
		public Authorized()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateAuthorized", DbType="DateTime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public System.DateTime DateAuthorized
		{
			get
			{
				return this._DateAuthorized;
			}
			set
			{
				if ((this._DateAuthorized != value))
				{
					this.OnDateAuthorizedChanging(value);
					this.SendPropertyChanging();
					this._DateAuthorized = value;
					this.SendPropertyChanged("DateAuthorized");
					this.OnDateAuthorizedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuthorizedBy", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public int AuthorizedBy
		{
			get
			{
				return this._AuthorizedBy;
			}
			set
			{
				if ((this._AuthorizedBy != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAuthorizedByChanging(value);
					this.SendPropertyChanging();
					this._AuthorizedBy = value;
					this.SendPropertyChanged("AuthorizedBy");
					this.OnAuthorizedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VoucherId", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public int VoucherId
		{
			get
			{
				return this._VoucherId;
			}
			set
			{
				if ((this._VoucherId != value))
				{
					if (this._Voucher.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVoucherIdChanging(value);
					this.SendPropertyChanging();
					this._VoucherId = value;
					this.SendPropertyChanged("VoucherId");
					this.OnVoucherIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Voucher_Authorized", Storage="_Voucher", ThisKey="VoucherId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Voucher Voucher
		{
			get
			{
				return this._Voucher.Entity;
			}
			set
			{
				Voucher previousValue = this._Voucher.Entity;
				if (((previousValue != value) 
							|| (this._Voucher.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Voucher.Entity = null;
						previousValue.Authorizeds.Remove(this);
					}
					this._Voucher.Entity = value;
					if ((value != null))
					{
						value.Authorizeds.Add(this);
						this._VoucherId = value.Id;
					}
					else
					{
						this._VoucherId = default(int);
					}
					this.SendPropertyChanged("Voucher");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Authorized", Storage="_User", ThisKey="AuthorizedBy", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Authorizeds.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Authorizeds.Add(this);
						this._AuthorizedBy = value.Id;
					}
					else
					{
						this._AuthorizedBy = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._Voucher = default(EntityRef<Voucher>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Permissions")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class Permission : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private EntitySet<UserPermission> _UserPermissions;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public Permission()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Permission_UserPermission", Storage="_UserPermissions", ThisKey="Id", OtherKey="PermissionId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3, EmitDefaultValue=false)]
		public EntitySet<UserPermission> UserPermissions
		{
			get
			{
				if ((this.serializing 
							&& (this._UserPermissions.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._UserPermissions;
			}
			set
			{
				this._UserPermissions.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_UserPermissions(UserPermission entity)
		{
			this.SendPropertyChanging();
			entity.Permission = this;
		}
		
		private void detach_UserPermissions(UserPermission entity)
		{
			this.SendPropertyChanging();
			entity.Permission = null;
		}
		
		private void Initialize()
		{
			this._UserPermissions = new EntitySet<UserPermission>(new Action<UserPermission>(this.attach_UserPermissions), new Action<UserPermission>(this.detach_UserPermissions));
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Prepared")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class Prepared : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.DateTime _DatePrepared;
		
		private int _PreparedBy;
		
		private int _Signatures;
		
		private EntityRef<Voucher> _Voucher;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnDatePreparedChanging(System.DateTime value);
    partial void OnDatePreparedChanged();
    partial void OnPreparedByChanging(int value);
    partial void OnPreparedByChanged();
    partial void OnSignaturesChanging(int value);
    partial void OnSignaturesChanged();
    #endregion
		
		public Prepared()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					if (this._Voucher.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DatePrepared", DbType="DateTime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public System.DateTime DatePrepared
		{
			get
			{
				return this._DatePrepared;
			}
			set
			{
				if ((this._DatePrepared != value))
				{
					this.OnDatePreparedChanging(value);
					this.SendPropertyChanging();
					this._DatePrepared = value;
					this.SendPropertyChanged("DatePrepared");
					this.OnDatePreparedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreparedBy", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public int PreparedBy
		{
			get
			{
				return this._PreparedBy;
			}
			set
			{
				if ((this._PreparedBy != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPreparedByChanging(value);
					this.SendPropertyChanging();
					this._PreparedBy = value;
					this.SendPropertyChanged("PreparedBy");
					this.OnPreparedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Signatures", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public int Signatures
		{
			get
			{
				return this._Signatures;
			}
			set
			{
				if ((this._Signatures != value))
				{
					this.OnSignaturesChanging(value);
					this.SendPropertyChanging();
					this._Signatures = value;
					this.SendPropertyChanged("Signatures");
					this.OnSignaturesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Voucher_Prepared", Storage="_Voucher", ThisKey="Id", OtherKey="Id", IsForeignKey=true)]
		public Voucher Voucher
		{
			get
			{
				return this._Voucher.Entity;
			}
			set
			{
				Voucher previousValue = this._Voucher.Entity;
				if (((previousValue != value) 
							|| (this._Voucher.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Voucher.Entity = null;
						previousValue.Prepared = null;
					}
					this._Voucher.Entity = value;
					if ((value != null))
					{
						value.Prepared = this;
						this._Id = value.Id;
					}
					else
					{
						this._Id = default(int);
					}
					this.SendPropertyChanged("Voucher");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Prepared", Storage="_User", ThisKey="PreparedBy", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Prepareds.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Prepareds.Add(this);
						this._PreparedBy = value.Id;
					}
					else
					{
						this._PreparedBy = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._Voucher = default(EntityRef<Voucher>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserPermissions")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class UserPermission : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _UserId;
		
		private int _PermissionId;
		
		private EntityRef<Permission> _Permission;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    partial void OnPermissionIdChanging(int value);
    partial void OnPermissionIdChanged();
    #endregion
		
		public UserPermission()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PermissionId", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public int PermissionId
		{
			get
			{
				return this._PermissionId;
			}
			set
			{
				if ((this._PermissionId != value))
				{
					if (this._Permission.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPermissionIdChanging(value);
					this.SendPropertyChanging();
					this._PermissionId = value;
					this.SendPropertyChanged("PermissionId");
					this.OnPermissionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Permission_UserPermission", Storage="_Permission", ThisKey="PermissionId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Permission Permission
		{
			get
			{
				return this._Permission.Entity;
			}
			set
			{
				Permission previousValue = this._Permission.Entity;
				if (((previousValue != value) 
							|| (this._Permission.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Permission.Entity = null;
						previousValue.UserPermissions.Remove(this);
					}
					this._Permission.Entity = value;
					if ((value != null))
					{
						value.UserPermissions.Add(this);
						this._PermissionId = value.Id;
					}
					else
					{
						this._PermissionId = default(int);
					}
					this.SendPropertyChanged("Permission");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UserPermission", Storage="_User", ThisKey="UserId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.UserPermissions.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.UserPermissions.Add(this);
						this._UserId = value.Id;
					}
					else
					{
						this._UserId = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._Permission = default(EntityRef<Permission>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Voucher")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class Voucher : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _VoucherNumber;
		
		private string _ChequeNumber;
		
		private EntitySet<Authorized> _Authorizeds;
		
		private EntityRef<Prepared> _Prepared;
		
		private EntityRef<Disbursed> _Disbursed;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnVoucherNumberChanging(string value);
    partial void OnVoucherNumberChanged();
    partial void OnChequeNumberChanging(string value);
    partial void OnChequeNumberChanged();
    #endregion
		
		public Voucher()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VoucherNumber", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string VoucherNumber
		{
			get
			{
				return this._VoucherNumber;
			}
			set
			{
				if ((this._VoucherNumber != value))
				{
					this.OnVoucherNumberChanging(value);
					this.SendPropertyChanging();
					this._VoucherNumber = value;
					this.SendPropertyChanged("VoucherNumber");
					this.OnVoucherNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChequeNumber", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string ChequeNumber
		{
			get
			{
				return this._ChequeNumber;
			}
			set
			{
				if ((this._ChequeNumber != value))
				{
					this.OnChequeNumberChanging(value);
					this.SendPropertyChanging();
					this._ChequeNumber = value;
					this.SendPropertyChanged("ChequeNumber");
					this.OnChequeNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Voucher_Authorized", Storage="_Authorizeds", ThisKey="Id", OtherKey="VoucherId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4, EmitDefaultValue=false)]
		public EntitySet<Authorized> Authorizeds
		{
			get
			{
				if ((this.serializing 
							&& (this._Authorizeds.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Authorizeds;
			}
			set
			{
				this._Authorizeds.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Voucher_Prepared", Storage="_Prepared", ThisKey="Id", OtherKey="Id", IsUnique=true, IsForeignKey=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5, EmitDefaultValue=false)]
		public Prepared Prepared
		{
			get
			{
				if ((this.serializing 
							&& (this._Prepared.HasLoadedOrAssignedValue == false)))
				{
					return null;
				}
				return this._Prepared.Entity;
			}
			set
			{
				Prepared previousValue = this._Prepared.Entity;
				if (((previousValue != value) 
							|| (this._Prepared.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Prepared.Entity = null;
						previousValue.Voucher = null;
					}
					this._Prepared.Entity = value;
					if ((value != null))
					{
						value.Voucher = this;
					}
					this.SendPropertyChanged("Prepared");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Voucher_Disbursed", Storage="_Disbursed", ThisKey="Id", OtherKey="Id", IsUnique=true, IsForeignKey=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6, EmitDefaultValue=false)]
		public Disbursed Disbursed
		{
			get
			{
				if ((this.serializing 
							&& (this._Disbursed.HasLoadedOrAssignedValue == false)))
				{
					return null;
				}
				return this._Disbursed.Entity;
			}
			set
			{
				Disbursed previousValue = this._Disbursed.Entity;
				if (((previousValue != value) 
							|| (this._Disbursed.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Disbursed.Entity = null;
						previousValue.Voucher = null;
					}
					this._Disbursed.Entity = value;
					if ((value != null))
					{
						value.Voucher = this;
					}
					this.SendPropertyChanged("Disbursed");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Authorizeds(Authorized entity)
		{
			this.SendPropertyChanging();
			entity.Voucher = this;
		}
		
		private void detach_Authorizeds(Authorized entity)
		{
			this.SendPropertyChanging();
			entity.Voucher = null;
		}
		
		private void Initialize()
		{
			this._Authorizeds = new EntitySet<Authorized>(new Action<Authorized>(this.attach_Authorizeds), new Action<Authorized>(this.detach_Authorizeds));
			this._Prepared = default(EntityRef<Prepared>);
			this._Disbursed = default(EntityRef<Disbursed>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.IdTypes")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class IdType
	{
		
		private string _Name;
		
		public IdType()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserLogs")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class UserLog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UserLogId;
		
		private string _MachineName;
		
		private System.DateTime _LoginTime;
		
		private System.Nullable<System.DateTime> _LogoutTime;
		
		private string _Status;
		
		private int _UserId;
		
		private System.Data.Linq.Binary _EntryTimeStamp;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserLogIdChanging(int value);
    partial void OnUserLogIdChanged();
    partial void OnMachineNameChanging(string value);
    partial void OnMachineNameChanged();
    partial void OnLoginTimeChanging(System.DateTime value);
    partial void OnLoginTimeChanged();
    partial void OnLogoutTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnLogoutTimeChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    partial void OnEntryTimeStampChanging(System.Data.Linq.Binary value);
    partial void OnEntryTimeStampChanged();
    #endregion
		
		public UserLog()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserLogId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int UserLogId
		{
			get
			{
				return this._UserLogId;
			}
			set
			{
				if ((this._UserLogId != value))
				{
					this.OnUserLogIdChanging(value);
					this.SendPropertyChanging();
					this._UserLogId = value;
					this.SendPropertyChanged("UserLogId");
					this.OnUserLogIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MachineName", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string MachineName
		{
			get
			{
				return this._MachineName;
			}
			set
			{
				if ((this._MachineName != value))
				{
					this.OnMachineNameChanging(value);
					this.SendPropertyChanging();
					this._MachineName = value;
					this.SendPropertyChanged("MachineName");
					this.OnMachineNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoginTime", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.DateTime LoginTime
		{
			get
			{
				return this._LoginTime;
			}
			set
			{
				if ((this._LoginTime != value))
				{
					this.OnLoginTimeChanging(value);
					this.SendPropertyChanging();
					this._LoginTime = value;
					this.SendPropertyChanged("LoginTime");
					this.OnLoginTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogoutTime", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.Nullable<System.DateTime> LogoutTime
		{
			get
			{
				return this._LogoutTime;
			}
			set
			{
				if ((this._LogoutTime != value))
				{
					this.OnLogoutTimeChanging(value);
					this.SendPropertyChanging();
					this._LogoutTime = value;
					this.SendPropertyChanged("LogoutTime");
					this.OnLogoutTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntryTimeStamp", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public System.Data.Linq.Binary EntryTimeStamp
		{
			get
			{
				return this._EntryTimeStamp;
			}
			set
			{
				if ((this._EntryTimeStamp != value))
				{
					this.OnEntryTimeStampChanging(value);
					this.SendPropertyChanging();
					this._EntryTimeStamp = value;
					this.SendPropertyChanged("EntryTimeStamp");
					this.OnEntryTimeStampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UserLog", Storage="_User", ThisKey="UserId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.UserLogs.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.UserLogs.Add(this);
						this._UserId = value.Id;
					}
					else
					{
						this._UserId = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[User]")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private string _Password;
		
		private string _Signature;
		
		private string _LoginName;
		
		private EntitySet<Authorized> _Authorizeds;
		
		private EntitySet<Prepared> _Prepareds;
		
		private EntitySet<UserPermission> _UserPermissions;
		
		private EntitySet<UserLog> _UserLogs;
		
		private EntitySet<Disbursed> _Disburseds;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnSignatureChanging(string value);
    partial void OnSignatureChanged();
    partial void OnLoginNameChanging(string value);
    partial void OnLoginNameChanged();
    #endregion
		
		public User()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Signature", DbType="VarChar(255)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string Signature
		{
			get
			{
				return this._Signature;
			}
			set
			{
				if ((this._Signature != value))
				{
					this.OnSignatureChanging(value);
					this.SendPropertyChanging();
					this._Signature = value;
					this.SendPropertyChanged("Signature");
					this.OnSignatureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoginName", DbType="VarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public string LoginName
		{
			get
			{
				return this._LoginName;
			}
			set
			{
				if ((this._LoginName != value))
				{
					this.OnLoginNameChanging(value);
					this.SendPropertyChanging();
					this._LoginName = value;
					this.SendPropertyChanged("LoginName");
					this.OnLoginNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Authorized", Storage="_Authorizeds", ThisKey="Id", OtherKey="AuthorizedBy")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6, EmitDefaultValue=false)]
		public EntitySet<Authorized> Authorizeds
		{
			get
			{
				if ((this.serializing 
							&& (this._Authorizeds.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Authorizeds;
			}
			set
			{
				this._Authorizeds.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Prepared", Storage="_Prepareds", ThisKey="Id", OtherKey="PreparedBy")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7, EmitDefaultValue=false)]
		public EntitySet<Prepared> Prepareds
		{
			get
			{
				if ((this.serializing 
							&& (this._Prepareds.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Prepareds;
			}
			set
			{
				this._Prepareds.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UserPermission", Storage="_UserPermissions", ThisKey="Id", OtherKey="UserId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8, EmitDefaultValue=false)]
		public EntitySet<UserPermission> UserPermissions
		{
			get
			{
				if ((this.serializing 
							&& (this._UserPermissions.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._UserPermissions;
			}
			set
			{
				this._UserPermissions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UserLog", Storage="_UserLogs", ThisKey="Id", OtherKey="UserId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9, EmitDefaultValue=false)]
		public EntitySet<UserLog> UserLogs
		{
			get
			{
				if ((this.serializing 
							&& (this._UserLogs.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._UserLogs;
			}
			set
			{
				this._UserLogs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Disbursed", Storage="_Disburseds", ThisKey="Id", OtherKey="DisbursedBy")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10, EmitDefaultValue=false)]
		public EntitySet<Disbursed> Disburseds
		{
			get
			{
				if ((this.serializing 
							&& (this._Disburseds.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Disburseds;
			}
			set
			{
				this._Disburseds.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Authorizeds(Authorized entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Authorizeds(Authorized entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_Prepareds(Prepared entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Prepareds(Prepared entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_UserPermissions(UserPermission entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_UserPermissions(UserPermission entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_UserLogs(UserLog entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_UserLogs(UserLog entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_Disburseds(Disbursed entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Disburseds(Disbursed entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void Initialize()
		{
			this._Authorizeds = new EntitySet<Authorized>(new Action<Authorized>(this.attach_Authorizeds), new Action<Authorized>(this.detach_Authorizeds));
			this._Prepareds = new EntitySet<Prepared>(new Action<Prepared>(this.attach_Prepareds), new Action<Prepared>(this.detach_Prepareds));
			this._UserPermissions = new EntitySet<UserPermission>(new Action<UserPermission>(this.attach_UserPermissions), new Action<UserPermission>(this.detach_UserPermissions));
			this._UserLogs = new EntitySet<UserLog>(new Action<UserLog>(this.attach_UserLogs), new Action<UserLog>(this.detach_UserLogs));
			this._Disburseds = new EntitySet<Disbursed>(new Action<Disbursed>(this.attach_Disburseds), new Action<Disbursed>(this.detach_Disburseds));
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.IdTypes")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class IdType1
	{
		
		private string _Name;
		
		public IdType1()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Disbursed")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class Disbursed : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _PayeeId;
		
		private System.DateTime _Date;
		
		private int _DisbursedBy;
		
		private EntityRef<User> _User;
		
		private EntityRef<Voucher> _Voucher;
		
		private EntityRef<Payee> _Payee;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnPayeeIdChanging(int value);
    partial void OnPayeeIdChanged();
    partial void OnDateChanging(System.DateTime value);
    partial void OnDateChanged();
    partial void OnDisbursedByChanging(int value);
    partial void OnDisbursedByChanged();
    #endregion
		
		public Disbursed()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					if (this._Voucher.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayeeId", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int PayeeId
		{
			get
			{
				return this._PayeeId;
			}
			set
			{
				if ((this._PayeeId != value))
				{
					if (this._Payee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPayeeIdChanging(value);
					this.SendPropertyChanging();
					this._PayeeId = value;
					this.SendPropertyChanged("PayeeId");
					this.OnPayeeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisbursedBy", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public int DisbursedBy
		{
			get
			{
				return this._DisbursedBy;
			}
			set
			{
				if ((this._DisbursedBy != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDisbursedByChanging(value);
					this.SendPropertyChanging();
					this._DisbursedBy = value;
					this.SendPropertyChanged("DisbursedBy");
					this.OnDisbursedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Disbursed", Storage="_User", ThisKey="DisbursedBy", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Disburseds.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Disburseds.Add(this);
						this._DisbursedBy = value.Id;
					}
					else
					{
						this._DisbursedBy = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Voucher_Disbursed", Storage="_Voucher", ThisKey="Id", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Voucher Voucher
		{
			get
			{
				return this._Voucher.Entity;
			}
			set
			{
				Voucher previousValue = this._Voucher.Entity;
				if (((previousValue != value) 
							|| (this._Voucher.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Voucher.Entity = null;
						previousValue.Disbursed = null;
					}
					this._Voucher.Entity = value;
					if ((value != null))
					{
						value.Disbursed = this;
						this._Id = value.Id;
					}
					else
					{
						this._Id = default(int);
					}
					this.SendPropertyChanged("Voucher");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Payee_Disbursed", Storage="_Payee", ThisKey="PayeeId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Payee Payee
		{
			get
			{
				return this._Payee.Entity;
			}
			set
			{
				Payee previousValue = this._Payee.Entity;
				if (((previousValue != value) 
							|| (this._Payee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Payee.Entity = null;
						previousValue.Disburseds.Remove(this);
					}
					this._Payee.Entity = value;
					if ((value != null))
					{
						value.Disburseds.Add(this);
						this._PayeeId = value.Id;
					}
					else
					{
						this._PayeeId = default(int);
					}
					this.SendPropertyChanged("Payee");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._User = default(EntityRef<User>);
			this._Voucher = default(EntityRef<Voucher>);
			this._Payee = default(EntityRef<Payee>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Payee")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class Payee : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private string _IdNumber;
		
		private string _VendorNumber;
		
		private EntitySet<Disbursed> _Disburseds;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnIdNumberChanging(string value);
    partial void OnIdNumberChanged();
    partial void OnVendorNumberChanging(string value);
    partial void OnVendorNumberChanged();
    #endregion
		
		public Payee()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdNumber", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string IdNumber
		{
			get
			{
				return this._IdNumber;
			}
			set
			{
				if ((this._IdNumber != value))
				{
					this.OnIdNumberChanging(value);
					this.SendPropertyChanging();
					this._IdNumber = value;
					this.SendPropertyChanged("IdNumber");
					this.OnIdNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VendorNumber", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string VendorNumber
		{
			get
			{
				return this._VendorNumber;
			}
			set
			{
				if ((this._VendorNumber != value))
				{
					this.OnVendorNumberChanging(value);
					this.SendPropertyChanging();
					this._VendorNumber = value;
					this.SendPropertyChanged("VendorNumber");
					this.OnVendorNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Payee_Disbursed", Storage="_Disburseds", ThisKey="Id", OtherKey="PayeeId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5, EmitDefaultValue=false)]
		public EntitySet<Disbursed> Disburseds
		{
			get
			{
				if ((this.serializing 
							&& (this._Disburseds.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Disburseds;
			}
			set
			{
				this._Disburseds.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Disburseds(Disbursed entity)
		{
			this.SendPropertyChanging();
			entity.Payee = this;
		}
		
		private void detach_Disburseds(Disbursed entity)
		{
			this.SendPropertyChanging();
			entity.Payee = null;
		}
		
		private void Initialize()
		{
			this._Disburseds = new EntitySet<Disbursed>(new Action<Disbursed>(this.attach_Disburseds), new Action<Disbursed>(this.detach_Disburseds));
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Cheques")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class Cheque
	{
		
		private string _Vendor;
		
		private System.Nullable<int> _ChequeNumber;
		
		private System.Nullable<System.DateTime> _ChequeDate;
		
		private int _VoucherNumber;
		
		private string _InvoiceNumber;
		
		private System.Nullable<System.DateTime> _InvoiceDate;
		
		private System.Nullable<decimal> _Amount;
		
		private string _PONumber;
		
		private string _TransactionReference;
		
		private string _VendorNumber;
		
		private string _VendorName;
		
		public Cheque()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Vendor", DbType="VarChar(70) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public string Vendor
		{
			get
			{
				return this._Vendor;
			}
			set
			{
				if ((this._Vendor != value))
				{
					this._Vendor = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChequeNumber", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public System.Nullable<int> ChequeNumber
		{
			get
			{
				return this._ChequeNumber;
			}
			set
			{
				if ((this._ChequeNumber != value))
				{
					this._ChequeNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChequeDate", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.Nullable<System.DateTime> ChequeDate
		{
			get
			{
				return this._ChequeDate;
			}
			set
			{
				if ((this._ChequeDate != value))
				{
					this._ChequeDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VoucherNumber", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public int VoucherNumber
		{
			get
			{
				return this._VoucherNumber;
			}
			set
			{
				if ((this._VoucherNumber != value))
				{
					this._VoucherNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceNumber", DbType="Char(15) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public string InvoiceNumber
		{
			get
			{
				return this._InvoiceNumber;
			}
			set
			{
				if ((this._InvoiceNumber != value))
				{
					this._InvoiceNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceDate", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public System.Nullable<System.DateTime> InvoiceDate
		{
			get
			{
				return this._InvoiceDate;
			}
			set
			{
				if ((this._InvoiceDate != value))
				{
					this._InvoiceDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(11,2)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public System.Nullable<decimal> Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this._Amount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PONumber", DbType="Char(15)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public string PONumber
		{
			get
			{
				return this._PONumber;
			}
			set
			{
				if ((this._PONumber != value))
				{
					this._PONumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransactionReference", DbType="Char(25)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public string TransactionReference
		{
			get
			{
				return this._TransactionReference;
			}
			set
			{
				if ((this._TransactionReference != value))
				{
					this._TransactionReference = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VendorNumber", DbType="Char(6)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public string VendorNumber
		{
			get
			{
				return this._VendorNumber;
			}
			set
			{
				if ((this._VendorNumber != value))
				{
					this._VendorNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VendorName", DbType="Char(25) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11)]
		public string VendorName
		{
			get
			{
				return this._VendorName;
			}
			set
			{
				if ((this._VendorName != value))
				{
					this._VendorName = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
